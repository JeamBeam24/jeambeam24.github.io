{"version":3,"file":"static/js/1271.39aaa79a.chunk.js","mappings":"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","sources":["assets/images/blue-loader.svg","components/AddressInputPanel/index.tsx","components/CurrencyInputPanel/index.tsx","components/FormattedCurrencyAmount/index.tsx","components/earn/styled.tsx","hooks/useENS.ts","pages/AppBody.tsx","pages/Pool/styled.tsx","constants/governance.ts","constants/proposals/polygon_proposal_title.ts","constants/proposals/uniswap_grants_proposal_description.ts","constants/proposals/index.ts","state/logs/hooks.ts","state/governance/hooks.ts","pages/CreateProposal/ProposalActionSelector.tsx","pages/CreateProposal/ProposalActionDetail.tsx","components/TextInput/index.tsx","pages/CreateProposal/ProposalEditor.tsx","components/ModalViews/index.tsx","pages/CreateProposal/ProposalSubmissionModal.tsx","pages/CreateProposal/index.tsx","components/vote/DelegateModal.tsx","components/vote/ProposalEmptyState.tsx","pages/Vote/styled.tsx","pages/Vote/Landing.tsx","components/vote/ExecuteModal.tsx","components/vote/QueueModal.tsx","components/vote/VoteModal.tsx","pages/Vote/VotePage.tsx","pages/Vote/index.tsx","state/governance/types.ts","lib/utils/formatLocaleNumber.ts","utils/formatCurrencyAmount.ts"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBlueLoader(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 94,\n    height: 94,\n    viewBox: \"0 0 94 94\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M92 47C92 22.1472 71.8528 2 47 2C22.1472 2 2 22.1472 2 47C2 71.8528 22.1472 92 47 92\",\n    stroke: \"#2172E5\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlueLoader);\nexport default __webpack_public_path__ + \"static/media/blue-loader.ca1aedeb13ab14d6ef4eb375580604ad.svg\";\nexport { ForwardRef as ReactComponent };","import { Trans, t } from 'i18n'\r\nimport { ChangeEvent, ReactNode, useCallback } from 'react'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { ExternalLink, ThemedText } from 'theme/components'\r\nimport { flexColumnNoWrap } from 'theme/styles'\r\nimport { useChainId } from 'wagmi'\r\n\r\nimport useENS from '../../hooks/useENS'\r\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\r\nimport { AutoColumn } from '../Column'\r\nimport { RowBetween } from '../Row'\r\n\r\nconst InputPanel = styled.div`\r\n  ${flexColumnNoWrap};\r\n  position: relative;\r\n  border-radius: 1.25rem;\r\n  background-color: ${({ theme }) => theme.surface1};\r\n  z-index: 1;\r\n  width: 100%;\r\n`\r\n\r\nconst ContainerRow = styled.div<{ error: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 1.25rem;\r\n  border: 1px solid ${({ error, theme }) => (error ? theme.critical : theme.surface3)};\r\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\r\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  background-color: ${({ theme }) => theme.surface1};\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  flex: 1;\r\n  padding: 1rem;\r\n`\r\n\r\nconst Input = styled.input<{ error?: boolean }>`\r\n  font-size: 1.25rem;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  background-color: ${({ theme }) => theme.surface1};\r\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  color: ${({ error, theme }) => (error ? theme.critical : theme.neutral1)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-weight: 535;\r\n  width: 100%;\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.neutral3};\r\n  }\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.neutral3};\r\n  }\r\n`\r\n\r\nexport default function AddressInputPanel({\r\n  id,\r\n  className = 'recipient-address-input',\r\n  label,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n}: {\r\n  id?: string\r\n  className?: string\r\n  label?: ReactNode\r\n  placeholder?: string\r\n  // the typed string value\r\n  value: string\r\n  // triggers whenever the typed value changes\r\n  onChange: (value: string) => void\r\n}) {\r\n  const chainId = useChainId()\r\n  const theme = useTheme()\r\n\r\n  const { address, loading, name } = useENS(value)\r\n\r\n  const handleInput = useCallback(\r\n    (event: ChangeEvent<HTMLInputElement>) => {\r\n      const input = event.target.value\r\n      const withoutSpaces = input.replace(/\\s+/g, '')\r\n      onChange(withoutSpaces)\r\n    },\r\n    [onChange]\r\n  )\r\n\r\n  const error = Boolean(value.length > 0 && !loading && !address)\r\n\r\n  return (\r\n    <InputPanel id={id}>\r\n      <ContainerRow error={error}>\r\n        <InputContainer>\r\n          <AutoColumn gap=\"md\">\r\n            <RowBetween>\r\n              <ThemedText.DeprecatedBlack color={theme.neutral2} fontWeight={535} fontSize={14}>\r\n                {label ?? <Trans>Recipient</Trans>}\r\n              </ThemedText.DeprecatedBlack>\r\n              {address && chainId && (\r\n                <ExternalLink\r\n                  href={getExplorerLink(chainId, name ?? address, ExplorerDataType.ADDRESS)}\r\n                  style={{ fontSize: '14px' }}\r\n                >\r\n                  <Trans>(View on Explorer)</Trans>\r\n                </ExternalLink>\r\n              )}\r\n            </RowBetween>\r\n            <Input\r\n              className={className}\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"off\"\r\n              spellCheck=\"false\"\r\n              placeholder={placeholder ?? t`Wallet address or ENS name`}\r\n              error={error}\r\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\r\n              onChange={handleInput}\r\n              value={value}\r\n            />\r\n          </AutoColumn>\r\n        </InputContainer>\r\n      </ContainerRow>\r\n    </InputPanel>\r\n  )\r\n}\r\n","import { BrowserEvent, InterfaceElementName, SwapEventName } from '@uniswap/analytics-events'\r\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\r\nimport { Pair } from '@uniswap/v2-sdk'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { TraceEvent } from 'analytics'\r\nimport { LoadingOpacityContainer, loadingOpacityMixin } from 'components/Loader/styled'\r\nimport { useIsSupportedChainId } from 'constants/chains'\r\nimport { Trans } from 'i18n'\r\nimport { darken } from 'polished'\r\nimport { ReactNode, useCallback, useState } from 'react'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { BREAKPOINTS } from 'theme'\r\nimport { ThemedText } from 'theme/components'\r\nimport { flexColumnNoWrap, flexRowNoWrap } from 'theme/styles'\r\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\r\n\r\nimport { DoubleCurrencyLogo } from 'components/DoubleLogo'\r\nimport { CurrencySearchFilters } from 'components/SearchModal/CurrencySearch'\r\nimport { PrefetchBalancesWrapper } from 'graphql/data/apollo/TokenBalancesProvider'\r\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\r\nimport { useCurrencyBalance } from '../../state/connection/hooks'\r\nimport { ButtonGray } from '../Button'\r\nimport CurrencyLogo from '../Logo/CurrencyLogo'\r\nimport { Input as NumericalInput } from '../NumericalInput'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\r\nimport { FiatValue } from './FiatValue'\r\n\r\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\r\n  ${flexColumnNoWrap};\r\n  position: relative;\r\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\r\n  background-color: ${({ theme, hideInput }) => (hideInput ? 'transparent' : theme.surface2)};\r\n\r\n  z-index: 1;\r\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\r\n  transition: height 1s ease;\r\n  will-change: height;\r\n`\r\n\r\nconst Container = styled.div<{ hideInput: boolean; disabled: boolean }>`\r\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\r\n  border: 1px solid ${({ theme }) => theme.surface3};\r\n  background-color: ${({ theme }) => theme.surface2};\r\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\r\n  ${({ theme, hideInput, disabled }) =>\r\n    !disabled &&\r\n    `\r\n    :focus,\r\n    :hover {\r\n      border: 1px solid ${hideInput ? ' transparent' : theme.surface2};\r\n    }\r\n  `}\r\n`\r\n\r\nconst CurrencySelect = styled(ButtonGray)<{\r\n  visible: boolean\r\n  selected: boolean\r\n  hideInput?: boolean\r\n  disabled?: boolean\r\n  pointerEvents?: string\r\n}>`\r\n  align-items: center;\r\n  background-color: ${({ selected, theme }) => (selected ? theme.surface1 : theme.accent1)};\r\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\r\n  box-shadow: ${({ theme }) => theme.deprecated_shallowShadow};\r\n  color: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\r\n  cursor: pointer;\r\n  border-radius: 16px;\r\n  outline: none;\r\n  user-select: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  font-weight: 535;\r\n  height: ${({ hideInput }) => (hideInput ? '2.8rem' : '2.4rem')};\r\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\r\n  padding: 0 8px;\r\n  justify-content: space-between;\r\n  margin-left: ${({ hideInput }) => (hideInput ? '0' : '12px')};\r\n  :focus,\r\n  :hover {\r\n    background-color: ${({ selected, theme }) => (selected ? theme.surface2 : darken(0.05, theme.accent1))};\r\n  }\r\n  visibility: ${({ visible }) => (visible ? 'visible' : 'hidden')};\r\n  ${({ pointerEvents }) => pointerEvents && `pointer-events: none`}\r\n`\r\n\r\nconst InputRow = styled.div<{ selected: boolean }>`\r\n  ${flexRowNoWrap};\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: ${({ selected }) => (selected ? ' 1rem 1rem 0.75rem 1rem' : '1rem 1rem 1rem 1rem')};\r\n`\r\n\r\nconst LabelRow = styled.div`\r\n  ${flexRowNoWrap};\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.neutral1};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0 1rem 1rem;\r\n  span:hover {\r\n    cursor: pointer;\r\n    color: ${({ theme }) => darken(0.2, theme.neutral2)};\r\n  }\r\n`\r\n\r\nconst FiatRow = styled(LabelRow)`\r\n  justify-content: flex-end;\r\n  padding: 0px 1rem 0.75rem;\r\n  height: 32px;\r\n`\r\n\r\n// note the line height 0 ensures even if we change font/font-size it doesn't break centering\r\nconst Aligner = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  line-height: 0px;\r\n`\r\n\r\nconst StyledDropDown = styled(DropDown)<{ selected: boolean }>`\r\n  margin: 0 0.25rem 0 0.35rem;\r\n  height: 35%;\r\n\r\n  path {\r\n    stroke: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\r\n    stroke-width: 1.5px;\r\n  }\r\n`\r\n\r\nconst StyledTokenName = styled.span<{ active?: boolean }>`\r\n  ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.25rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\r\n  font-size: 20px;\r\n  white-space: nowrap;\r\n\r\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nconst StyledBalanceMax = styled.button<{ disabled?: boolean }>`\r\n  background-color: transparent;\r\n  background-color: ${({ theme }) => theme.accent2};\r\n  border: none;\r\n  border-radius: 12px;\r\n  color: ${({ theme }) => theme.accent1};\r\n  cursor: pointer;\r\n  font-size: 11px;\r\n  font-weight: 535;\r\n  margin-left: 0.25rem;\r\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\r\n  padding: 4px 6px;\r\n  pointer-events: ${({ disabled }) => (!disabled ? 'initial' : 'none')};\r\n\r\n  :hover {\r\n    opacity: ${({ disabled }) => (!disabled ? 0.8 : 0.4)};\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nconst StyledNumericalInput = styled(NumericalInput)<{ $loading: boolean }>`\r\n  ${loadingOpacityMixin};\r\n  text-align: left;\r\n`\r\n\r\nconst StyledPrefetchBalancesWrapper = styled(PrefetchBalancesWrapper)<{ $fullWidth: boolean }>`\r\n  width: ${({ $fullWidth }) => ($fullWidth ? '100%' : 'auto')};\r\n`\r\n\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  label?: ReactNode\r\n  onCurrencySelect?: (currency: Currency) => void\r\n  currency?: Currency | null\r\n  hideBalance?: boolean\r\n  pair?: Pair | null\r\n  hideInput?: boolean\r\n  otherCurrency?: Currency | null\r\n  fiatValue?: { data?: number; isLoading: boolean }\r\n  id: string\r\n  showCurrencyAmount?: boolean\r\n  renderBalance?: (amount: CurrencyAmount<Currency>) => ReactNode\r\n  locked?: boolean\r\n  loading?: boolean\r\n  currencySearchFilters?: CurrencySearchFilters\r\n}\r\n\r\nexport default function CurrencyInputPanel({\r\n  value,\r\n  onUserInput,\r\n  onMax,\r\n  showMaxButton,\r\n  onCurrencySelect,\r\n  currency,\r\n  otherCurrency,\r\n  id,\r\n  currencySearchFilters,\r\n  showCurrencyAmount,\r\n  renderBalance,\r\n  fiatValue,\r\n  hideBalance = false,\r\n  pair = null, // used for double token logo\r\n  hideInput = false,\r\n  locked = false,\r\n  loading = false,\r\n  ...rest\r\n}: CurrencyInputPanelProps) {\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const { account, chainId } = useWeb3React()\r\n  const chainAllowed = useIsSupportedChainId(chainId)\r\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n  const theme = useTheme()\r\n  const { formatCurrencyAmount } = useFormatter()\r\n\r\n  const handleDismissSearch = useCallback(() => {\r\n    setModalOpen(false)\r\n  }, [setModalOpen])\r\n\r\n  return (\r\n    <InputPanel id={id} hideInput={hideInput} {...rest}>\r\n      {!locked && (\r\n        <>\r\n          <Container hideInput={hideInput} disabled={!chainAllowed}>\r\n            <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={!onCurrencySelect}>\r\n              {!hideInput && (\r\n                <StyledNumericalInput\r\n                  className=\"token-amount-input\"\r\n                  value={value}\r\n                  onUserInput={onUserInput}\r\n                  disabled={!chainAllowed}\r\n                  $loading={loading}\r\n                  maxDecimals={currency?.decimals}\r\n                />\r\n              )}\r\n\r\n              <StyledPrefetchBalancesWrapper $fullWidth={hideInput}>\r\n                <CurrencySelect\r\n                  disabled={!chainAllowed}\r\n                  visible={currency !== undefined}\r\n                  selected={!!currency}\r\n                  hideInput={hideInput}\r\n                  className=\"open-currency-select-button\"\r\n                  onClick={() => {\r\n                    if (onCurrencySelect) {\r\n                      setModalOpen(true)\r\n                    }\r\n                  }}\r\n                  pointerEvents={!onCurrencySelect ? 'none' : undefined}\r\n                >\r\n                  <Aligner>\r\n                    <RowFixed>\r\n                      {pair ? (\r\n                        <span style={{ marginRight: '0.5rem' }}>\r\n                          <DoubleCurrencyLogo currencies={[pair.token0, pair.token1]} size={24} />\r\n                        </span>\r\n                      ) : (\r\n                        currency && <CurrencyLogo style={{ marginRight: '0.5rem' }} currency={currency} size={24} />\r\n                      )}\r\n                      {pair ? (\r\n                        <StyledTokenName className=\"pair-name-container\">\r\n                          {pair?.token0.symbol}:{pair?.token1.symbol}\r\n                        </StyledTokenName>\r\n                      ) : (\r\n                        <StyledTokenName\r\n                          className=\"token-symbol-container\"\r\n                          active={Boolean(currency && currency.symbol)}\r\n                        >\r\n                          {(currency && currency.symbol && currency.symbol.length > 20\r\n                            ? currency.symbol.slice(0, 4) +\r\n                              '...' +\r\n                              currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\r\n                            : currency?.symbol) || <Trans>Select a token</Trans>}\r\n                        </StyledTokenName>\r\n                      )}\r\n                    </RowFixed>\r\n                    {onCurrencySelect && <StyledDropDown selected={!!currency} />}\r\n                  </Aligner>\r\n                </CurrencySelect>\r\n              </StyledPrefetchBalancesWrapper>\r\n            </InputRow>\r\n            {Boolean(!hideInput && !hideBalance && currency) && (\r\n              <FiatRow>\r\n                <RowBetween>\r\n                  <LoadingOpacityContainer $loading={loading}>\r\n                    {fiatValue && <FiatValue fiatValue={fiatValue} />}\r\n                  </LoadingOpacityContainer>\r\n                  {account && (\r\n                    <RowFixed style={{ height: '17px' }}>\r\n                      <ThemedText.DeprecatedBody\r\n                        onClick={onMax}\r\n                        color={theme.neutral3}\r\n                        fontWeight={535}\r\n                        fontSize={14}\r\n                        style={{ display: 'inline', cursor: 'pointer' }}\r\n                      >\r\n                        {Boolean(!hideBalance && currency && selectedCurrencyBalance) &&\r\n                          (renderBalance?.(selectedCurrencyBalance as CurrencyAmount<Currency>) || (\r\n                            <Trans>\r\n                              Balance:{' '}\r\n                              {{\r\n                                amount: formatCurrencyAmount({\r\n                                  amount: selectedCurrencyBalance,\r\n                                  type: NumberType.TokenNonTx,\r\n                                }),\r\n                              }}\r\n                            </Trans>\r\n                          ))}\r\n                      </ThemedText.DeprecatedBody>\r\n                      {Boolean(showMaxButton && selectedCurrencyBalance) && (\r\n                        <TraceEvent\r\n                          events={[BrowserEvent.onClick]}\r\n                          name={SwapEventName.SWAP_MAX_TOKEN_AMOUNT_SELECTED}\r\n                          element={InterfaceElementName.MAX_TOKEN_AMOUNT_BUTTON}\r\n                        >\r\n                          <StyledBalanceMax onClick={onMax}>\r\n                            <Trans>MAX</Trans>\r\n                          </StyledBalanceMax>\r\n                        </TraceEvent>\r\n                      )}\r\n                    </RowFixed>\r\n                  )}\r\n                </RowBetween>\r\n              </FiatRow>\r\n            )}\r\n          </Container>\r\n        </>\r\n      )}\r\n      {onCurrencySelect && (\r\n        <CurrencySearchModal\r\n          isOpen={modalOpen}\r\n          onDismiss={handleDismissSearch}\r\n          onCurrencySelect={onCurrencySelect}\r\n          selectedCurrency={currency}\r\n          otherSelectedCurrency={otherCurrency}\r\n          showCurrencyAmount={showCurrencyAmount}\r\n          currencySearchFilters={currencySearchFilters}\r\n        />\r\n      )}\r\n    </InputPanel>\r\n  )\r\n}\r\n","import { Currency, CurrencyAmount, Fraction } from '@uniswap/sdk-core'\r\nimport JSBI from 'jsbi'\r\n\r\nconst CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000))\r\n\r\nexport default function FormattedCurrencyAmount({\r\n  currencyAmount,\r\n  significantDigits = 4,\r\n}: {\r\n  currencyAmount: CurrencyAmount<Currency>\r\n  significantDigits?: number\r\n}) {\r\n  return (\r\n    <>\r\n      {currencyAmount.equalTo(JSBI.BigInt(0))\r\n        ? '0'\r\n        : currencyAmount.greaterThan(CURRENCY_AMOUNT_MIN)\r\n        ? currencyAmount.toSignificant(significantDigits)\r\n        : `<${CURRENCY_AMOUNT_MIN.toSignificant(1)}`}\r\n    </>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nimport uImage from '../../assets/images/big_unicorn.png'\r\nimport noise from '../../assets/images/noise.png'\r\nimport xlUnicorn from '../../assets/images/xl_uni.png'\r\nimport { AutoColumn } from '../Column'\r\n\r\nexport const DataCard = styled(AutoColumn)<{ disabled?: boolean }>`\r\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #2172e5 100%);\r\n  border-radius: 12px;\r\n  width: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const CardBGImage = styled.span<{ desaturate?: boolean }>`\r\n  background: url(${uImage});\r\n  width: 1000px;\r\n  height: 600px;\r\n  position: absolute;\r\n  border-radius: 12px;\r\n  opacity: 0.4;\r\n  top: -100px;\r\n  left: -100px;\r\n  transform: rotate(-15deg);\r\n  user-select: none;\r\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\r\n`\r\n\r\nexport const CardBGImageSmaller = styled.span<{ desaturate?: boolean }>`\r\n  background: url(${xlUnicorn});\r\n  width: 1200px;\r\n  height: 1200px;\r\n  position: absolute;\r\n  border-radius: 12px;\r\n  top: -300px;\r\n  left: -300px;\r\n  opacity: 0.4;\r\n  user-select: none;\r\n\r\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\r\n`\r\n\r\nexport const CardNoise = styled.span`\r\n  background: url(${noise});\r\n  background-size: cover;\r\n  mix-blend-mode: overlay;\r\n  border-radius: 12px;\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0.15;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  user-select: none;\r\n`\r\n\r\nexport const CardSection = styled(AutoColumn)<{ disabled?: boolean }>`\r\n  padding: 1rem;\r\n  z-index: 1;\r\n  opacity: ${({ disabled }) => disabled && '0.4'};\r\n`\r\n\r\nexport const Break = styled.div`\r\n  width: 100%;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  height: 1px;\r\n`\r\n","import { useMemo } from 'react'\r\n\r\nimport { isAddress } from 'utilities/src/addresses'\r\nimport useENSAddress from './useENSAddress'\r\nimport useENSName from './useENSName'\r\n\r\n/**\r\n * Given a name or address, does a lookup to resolve to an address and name\r\n * @param nameOrAddress ENS name or address\r\n */\r\nexport default function useENS(nameOrAddress?: string | null): {\r\n  loading: boolean\r\n  address: string | null\r\n  name: string | null\r\n} {\r\n  const validated = isAddress(nameOrAddress)\r\n  const reverseLookup = useENSName(validated ? validated : undefined)\r\n  const lookup = useENSAddress(nameOrAddress)\r\n\r\n  return useMemo(\r\n    () => ({\r\n      loading: reverseLookup.loading || lookup.loading,\r\n      address: validated ? validated : lookup.address,\r\n      name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\r\n    }),\r\n    [lookup.address, lookup.loading, nameOrAddress, reverseLookup.ENSName, reverseLookup.loading, validated]\r\n  )\r\n}\r\n","import { PropsWithChildren } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Z_INDEX } from 'theme/zIndex'\r\n\r\ninterface BodyWrapperProps {\r\n  $margin?: string\r\n  $maxWidth?: string\r\n}\r\n\r\nexport const BodyWrapper = styled.main<BodyWrapperProps>`\r\n  position: relative;\r\n  margin-top: ${({ $margin }) => $margin ?? '0px'};\r\n  max-width: ${({ $maxWidth }) => $maxWidth ?? '420px'};\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.surface1};\r\n  border-radius: 16px;\r\n  border: 1px solid ${({ theme }) => theme.surface3};\r\n  margin-top: 1rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  z-index: ${Z_INDEX.default};\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody(props: PropsWithChildren<BodyWrapperProps>) {\r\n  return <BodyWrapper {...props} />\r\n}\r\n","import { LoadingRows as BaseLoadingRows } from 'components/Loader/styled'\r\nimport { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  padding: 20px;\r\n`\r\n\r\nexport const ClickableText = styled(Text)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  color: ${({ theme }) => theme.accent1};\r\n`\r\nexport const MaxButton = styled.button<{ width: string }>`\r\n  padding: 0.5rem 1rem;\r\n  background-color: ${({ theme }) => theme.accent2};\r\n  border: 1px solid ${({ theme }) => theme.accent2};\r\n  border-radius: 0.5rem;\r\n  font-size: 1rem;\r\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\r\n    padding: 0.25rem 0.5rem;\r\n  `};\r\n  font-weight: 535;\r\n  cursor: pointer;\r\n  margin: 0.25rem;\r\n  overflow: hidden;\r\n  color: ${({ theme }) => theme.accent1};\r\n  :hover {\r\n    border: 1px solid ${({ theme }) => theme.accent1};\r\n  }\r\n  :focus {\r\n    border: 1px solid ${({ theme }) => theme.accent1};\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n\r\nexport const LoadingRows = styled(BaseLoadingRows)`\r\n  padding-top: 36px;\r\n  min-width: 75%;\r\n  max-width: 960px;\r\n  grid-column-gap: 0.5em;\r\n  grid-row-gap: 0.8em;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  padding: 8px;\r\n\r\n  & > div:nth-child(4n + 1) {\r\n    grid-column: 1 / 3;\r\n  }\r\n  & > div:nth-child(4n) {\r\n    grid-column: 3 / 4;\r\n    margin-bottom: 2em;\r\n  }\r\n`\r\n","import {\r\n  ChainId,\r\n  GOVERNANCE_ALPHA_V0_ADDRESSES,\r\n  GOVERNANCE_ALPHA_V1_ADDRESSES,\r\n  GOVERNANCE_BRAVO_ADDRESSES,\r\n  TIMELOCK_ADDRESSES,\r\n  UNI_ADDRESSES,\r\n} from '@uniswap/sdk-core'\r\n\r\nexport const COMMON_CONTRACT_NAMES: Record<number, { [address: string]: string }> = {\r\n  [ChainId.MAINNET]: {\r\n    [UNI_ADDRESSES[ChainId.MAINNET]]: 'UNI',\r\n    [TIMELOCK_ADDRESSES[ChainId.MAINNET]]: 'Timelock',\r\n    [GOVERNANCE_ALPHA_V0_ADDRESSES[ChainId.MAINNET]]: 'Governance (V0)',\r\n    [GOVERNANCE_ALPHA_V1_ADDRESSES[ChainId.MAINNET]]: 'Governance (V1)',\r\n    [GOVERNANCE_BRAVO_ADDRESSES[ChainId.MAINNET]]: 'Governance',\r\n    '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e': 'ENS Registry',\r\n    '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41': 'ENS Public Resolver',\r\n    '0xf754A7E347F81cFdc70AF9FbCCe9Df3D826360FA': 'Franchiser Factory',\r\n  },\r\n}\r\n\r\n// in PoS, ethereum block time is 12s, see https://ethereum.org/en/developers/docs/blocks/#block-time\r\nexport const DEFAULT_AVERAGE_BLOCK_TIME_IN_SECS = 12\r\n\r\n// Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\r\nexport const AVERAGE_BLOCK_TIME_IN_SECS: { [chainId: number]: number } = {\r\n  1: DEFAULT_AVERAGE_BLOCK_TIME_IN_SECS,\r\n}\r\n\r\nexport const LATEST_GOVERNOR_INDEX = 2\r\n","export const POLYGON_PROPOSAL_TITLE = 'Should Uniswap v3 be deployed to Polygon?'\r\n","export const UNISWAP_GRANTS_PROPOSAL_DESCRIPTION = `# Uniswap Grants Program v0.1\r\n\r\n*co-authored with [Ken Ng](https://twitter.com/nkennethk?lang=en)*\r\n\r\n## Summary:\r\n\r\n**This post outlines a framework for funding Uniswap ecosystem development with grants from the[ UNI Community Treasury](https://uniswap.org/blog/uni/).** The program starts small—sponsoring hackathons, [for example](https://gov.uniswap.org/c/proposal-discussion/5)—but could grow in significance over time (with renewals approved by governance) to fund core protocol development. Grants administration is a subjective process that cannot be easily automated, and thus we propose a nimble committee of 6 members —1 lead and 5 reviewers—to deliver an efficient, predictable process to applicants, such that funding can be administered without having to put each application to a vote. We propose the program start with an initial cap of $750K per quarter and a limit of 2 quarters before renewal—a sum that we feel is appropriate for an MVP relative to the size of the treasury that UNI token holders are entrusted with allocating.\r\n\r\n**Purpose:**\r\n\r\n**The mission of the UGP is to provide valuable resources to help grow the Uniswap ecosystem.** Through public discourse and inbound applications, the community will get first-hand exposure to identify and respond to the most pressing needs of the ecosystem, as well as the ability to support innovative projects expanding the capabilities of Uniswap. By rewarding talent early with developer incentives, bounties, and infrastructure support, UGP acts as a catalyst for growth and helps to maintain Uniswap as a nexus for DeFi on Ethereum.\r\n\r\n**Quarterly Budget:**\r\n\r\n* Max quarterly budget of up to $750k\r\n* Budget and caps to be assessed every six months\r\n\r\n**Grant Allocation Committee:**\r\n\r\n* Of 6 committee members: 1 lead and 5 reviewers\r\n* Each committee has a term of 2 quarters (6 months) after which the program needs to be renewed by UNI governance\r\n* Committee functions as a 4 of 5 multi-sig\r\n\r\n**Committee Members**\r\n\r\nWhile the goals and priorities of the grant program will be thoroughly discussed and reviewed by the community through public discourse, **the decision to start UGP by operating as a small committee is to ensure that the application and decision process will be efficient and predictable, so applicants have clear objectives and timely decisions.**\r\n\r\nStarting with just six members enables the committee to efficiently fund projects with tight feedback loops and rapid iterations. The purpose of this committee would be to test the hypothesis that the Grants Program can successfully provide value for the UNI ecosystem before scaling the program.\r\n\r\n**We suggest the grants program is administered by a single lead. Here we propose Kenneth Ng, a co-author of this post**. Ken has helped grow the Ethereum Foundation Grants Program over the last two years in establishing high level priorities and adapting for the ecosystems needs.\r\n\r\n**The other 5 committee members should be thought of as “reviewers” — UNI community members who will keep the grants program functional by ensuring Ken is leading effectively and, of course, not absconding with funds.** Part of the reviewers job is to hold the program accountable for success (defined below) and/or return any excess funds to the UNI treasury. Reviewers are not compensated as part of this proposal as we expect their time commitment to be minimal. Compensation for the lead role is discussed below, as we expect this to be a labor intensive role.\r\n\r\n**Program Lead:** [Ken Ng](https://twitter.com/nkennethk?lang=en) (HL Creative Corp)\r\n*Ecosystem Support Program at the Ethereum Foundation*\r\n\r\n1. Reviewer: [Jesse Walden](https://twitter.com/jessewldn) (o/b/o Unofficial LLC dba [Variant Fund](http://twitter.com/variantfund))\r\n*Founder and Investor at Variant Fund (holds UNI)*\r\n\r\n2. Reviewer: [Monet Supply](https://twitter.com/MonetSupply)\r\n*Risk Analyst at MakerDAO*\r\n\r\n3. Reviewer: [Robert Leshner](https://twitter.com/rleshner)\r\n*Founder and CEO of Compound Finance*\r\n\r\n4. Reviewer: [Kain Warwick](https://twitter.com/kaiynne)\r\n*Founder of Synthetix*\r\n\r\n5. Reviewer: [Ashleigh Schap](https://twitter.com/ashleighschap)\r\n*Growth Lead, Uniswap (Company)*\r\n\r\n## Methodology\r\n\r\n**1.1 Budget**\r\n\r\nThis proposal recommends a max cap of $750K per quarter, with the ability to reevaluate biannually at each epoch (two fiscal quarters). While the UGP Grants Committee will be the decision makers around individual grants, respective budgets, roadmaps, and milestones, any top-level changes to UGP including epochs and max cap, will require full community quorum (4% approval).\r\n\r\nThe UGP will be funded by the UNI treasury according to the[ release schedule](https://uniswap.org/blog/uni/) set out by the Uniswap team, whereby 43% of the UNI treasury is released over a four-year timeline. In Year 1 this will total to 172,000,000 UNI (~$344M as of writing).\r\n\r\nTaking into consideration the current landscape of ecosystem funding across Ethereum, the community would be hard-pressed to allocate even 5% of Year 1’s treasury. For context Gitcoin CLR Round 7 distributed $725k ($450k in matched) across 857 projects and YTD, Moloch has granted just under $200k but in contrast, the EF has committed to somewhere in the 8 figure range.\r\n\r\n**1.2 Committee Compensation**\r\n\r\nOperating a successful grants program takes considerable time and effort. Take, for instance, the EF Ecosystem Support Program, which has awarded grants since 2018, consists of an internal team at the Foundation as well as an ever increasing roster of community advisors in order to keep expanding and adapting to best serve the needs of the Ethereum ecosystem. While the structure of the allocation committee has six members, we propose that only the lead will be remunerated for their work in establishing the initial processes, vetting applications, and managing the program overall as this role is expected to be time consuming if the program is to be succesful. We propose that the other committee members be unpaid UNI ecosystem stakeholders who have an interest in seeing the protocol ecosystem continue to operate and grow.\r\n\r\n**We propose the lead be compensated 25 UNI/hr (approximately $100 USD at time of this writing) capped at 30 hours/week. This compensation, along with the quarterly budget, will be allocated to the UGP multisig from the UNI treasury**. In keeping with the committee’s commitment to the community, hours and duties will be logged publicly and transparently .\r\n\r\n**2.1 Priorities**\r\n\r\nInitially, the program aims to start narrow in scope, funding peripheral ecosystem initiatives, such as targeted bounties, hackathon sponsorships, and other low-stakes means of building out the Uniswap developer ecosystem. Over time, if the program proves effective, the grant allocations can grow in scope to include, for example, improved frontends, trading interfaces, and eventually, core protocol development.\r\n\r\n![|624x199](upload://vNP0APCOjiwQMurCmYI47cTLklc.png)\r\n\r\nWith the initial priorities in mind, some effective measures for quick successes might look like:\r\n\r\n* Total number of projects funded\r\n* Quarterly increase in applications\r\n* Project engagement post-event/funding\r\n* Overall community engagement/sentiment\r\n\r\n**2.2 Timeline**\r\n\r\nIn keeping with the fast pace of the UNI ecosystem, we organize time in epochs, or two calendar quarters. Each epoch will see two funding rounds, one per quarter, after which the community can review and create proposals to improve or revamp the program as they deem fit.\r\n\r\n**![|624x245](upload://n56TSh5X3mt4TSqVVMFhbnZM0eM.png)**\r\n\r\n**Rolling Wave 1 & 2 Applications**\r\n\r\n* Starting in Q1 2021, UGP will start accepting applications for events looking for support in the form of bounties or prizes that in parallel can be proactively sourced. During these first two waves of funding projects, the allocation committee lead can begin laying out guardrails for continued funding\r\n\r\n* Considering the immediate feedback loops for the first epoch, we expect these allocation decisions to be discussed and reviewed by the larger community. Should this not be of value, the community can submit a formal governance proposal to change any piece of UGP that was not effective\r\n\r\n**Wave 3 & Beyond**\r\n\r\n* Beginning with Wave 3, there should have been enough time with impactful projects funded to be considered for follow-on funding, should it make sense. In the same vein, projects within scope will be expanded to also include those working on integrations and and other key components.\r\n\r\n* Beyond the second epoch, as the community helps to review and help adapt UGP to be most effective, the scope will continue to grow in order to accommodate the state of the ecosystem including that of core protocol improvements\r\n\r\n## Conclusion:\r\n\r\n**If this proposal is successfully approved, UGP will start accepting applications on a rolling basis beginning at the start of 2021.** With the phases and priorities laid out above, UGP will aim to make a significant impact by catalyzing growth and innovation in the UNI ecosystem.\r\n\r\n**This program is meant to be the simplest possible MVP of a Uniswap Ecosystem Grants initiative.** While the multi-sig committee comes with trust assumptions about the members, our hope is the community will approve this limited engagement to get the ball rolling in an efficient structure. **After the first epoch (2 fiscal quarters) the burden of proof will be on UGP to show empirical evidence that the program is worth continuing in its existing form and will submit to governance to renew treasury funding.**\r\n\r\nIf this program proves successful, we hope it will inspire others to follow suit and create their own funding committees for allocating treasury capital—ideally with different specializations.\r\n`\r\n","export const UNISWAP_GRANTS_START_BLOCK = 11473815\r\nexport const BRAVO_START_BLOCK = 13059344\r\nexport const ONE_BIP_START_BLOCK = 13551293\r\nexport const POLYGON_START_BLOCK = 13786993\r\nexport const MOONBEAN_START_BLOCK = 14732457\r\n","import type { Filter } from '@ethersproject/providers'\r\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useChainId } from 'wagmi'\r\n\r\nimport { useAppDispatch, useAppSelector } from '../hooks'\r\nimport { addListener, removeListener } from './slice'\r\nimport { Log, filterToKey, isHistoricalLog } from './utils'\r\n\r\nenum LogsState {\r\n  // The filter is invalid\r\n  INVALID,\r\n  // The logs are being loaded\r\n  LOADING,\r\n  // Logs are from a previous block number\r\n  SYNCING,\r\n  // Tried to fetch logs but received an error\r\n  ERROR,\r\n  // Logs have been fetched as of the latest block number\r\n  SYNCED,\r\n}\r\n\r\ninterface UseLogsResult {\r\n  logs?: Log[]\r\n  state: LogsState\r\n}\r\n\r\n/**\r\n * Returns the logs for the given filter as of the latest block, re-fetching from the library every block.\r\n * @param filter The logs filter, with `fromBlock` or `toBlock` optionally specified.\r\n * The filter parameter should _always_ be memoized, or else will trigger constant refetching\r\n */\r\nexport function useLogs(filter: Filter | undefined): UseLogsResult {\r\n  const chainId = useChainId()\r\n  const blockNumber = useBlockNumber()\r\n\r\n  const logs = useAppSelector((state) => state.logs)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!filter || !chainId) return\r\n\r\n    dispatch(addListener({ chainId, filter }))\r\n    return () => {\r\n      dispatch(removeListener({ chainId, filter }))\r\n    }\r\n  }, [chainId, dispatch, filter])\r\n\r\n  return useMemo(() => {\r\n    if (!chainId || !filter || !blockNumber)\r\n      return {\r\n        logs: undefined,\r\n        state: LogsState.INVALID,\r\n      }\r\n\r\n    const state = logs[chainId]?.[filterToKey(filter)]\r\n    const result = state?.results\r\n\r\n    if (!result) {\r\n      return {\r\n        state: LogsState.LOADING,\r\n        logs: undefined,\r\n      }\r\n    }\r\n\r\n    if (result.error) {\r\n      return {\r\n        state: LogsState.ERROR,\r\n        logs: undefined,\r\n      }\r\n    }\r\n\r\n    return {\r\n      // if we're only fetching logs until a block that has already elapsed, we're synced regardless of result.blockNumber\r\n      state: isHistoricalLog(filter, blockNumber)\r\n        ? LogsState.SYNCED\r\n        : result.blockNumber >= blockNumber\r\n        ? LogsState.SYNCED\r\n        : LogsState.SYNCING,\r\n      logs: result.logs,\r\n    }\r\n  }, [blockNumber, chainId, filter, logs])\r\n}\r\n","import { defaultAbiCoder, Interface } from '@ethersproject/abi'\r\nimport { isAddress } from '@ethersproject/address'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport type { TransactionResponse } from '@ethersproject/providers'\r\nimport { toUtf8String, Utf8ErrorFuncs, Utf8ErrorReason } from '@ethersproject/strings'\r\nimport { useChainId } from 'wagmi'\r\n// eslint-disable-next-line no-restricted-imports\r\nimport GovernorAlphaJSON from '@uniswap/governance/build/GovernorAlpha.json'\r\nimport UniJSON from '@uniswap/governance/build/Uni.json'\r\nimport {\r\n  ChainId,\r\n  CurrencyAmount,\r\n  GOVERNANCE_ALPHA_V0_ADDRESSES,\r\n  GOVERNANCE_ALPHA_V1_ADDRESSES,\r\n  GOVERNANCE_BRAVO_ADDRESSES,\r\n  Token,\r\n} from '@uniswap/sdk-core'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { LATEST_GOVERNOR_INDEX } from 'constants/governance'\r\nimport { POLYGON_PROPOSAL_TITLE } from 'constants/proposals/polygon_proposal_title'\r\nimport { UNISWAP_GRANTS_PROPOSAL_DESCRIPTION } from 'constants/proposals/uniswap_grants_proposal_description'\r\nimport { useContract } from 'hooks/useContract'\r\nimport { t } from 'i18n'\r\nimport { useSingleCallResult, useSingleContractMultipleData } from 'lib/hooks/multicall'\r\nimport { useCallback, useMemo } from 'react'\r\nimport GOVERNOR_BRAVO_ABI from 'uniswap/src/abis/governor-bravo.json'\r\nimport { calculateGasMargin } from 'utils/calculateGasMargin'\r\n\r\nimport {\r\n  BRAVO_START_BLOCK,\r\n  MOONBEAN_START_BLOCK,\r\n  ONE_BIP_START_BLOCK,\r\n  POLYGON_START_BLOCK,\r\n  UNISWAP_GRANTS_START_BLOCK,\r\n} from '../../constants/proposals'\r\nimport { UNI } from '../../constants/tokens'\r\nimport { useLogs } from '../logs/hooks'\r\nimport { useTransactionAdder } from '../transactions/hooks'\r\nimport { TransactionType } from '../transactions/types'\r\nimport { VoteOption } from './types'\r\n\r\nfunction useGovernanceV0Contract(): Contract | null {\r\n  return useContract(GOVERNANCE_ALPHA_V0_ADDRESSES, GovernorAlphaJSON.abi, false)\r\n}\r\n\r\nfunction useGovernanceV1Contract(): Contract | null {\r\n  return useContract(GOVERNANCE_ALPHA_V1_ADDRESSES, GovernorAlphaJSON.abi, false)\r\n}\r\n\r\nfunction useGovernanceBravoContract(): Contract | null {\r\n  return useContract(GOVERNANCE_BRAVO_ADDRESSES, GOVERNOR_BRAVO_ABI, true)\r\n}\r\n\r\nconst useLatestGovernanceContract = useGovernanceBravoContract\r\n\r\nfunction useUniContract() {\r\n  const chainId = useChainId()\r\n  const uniAddress = useMemo(() => (chainId ? UNI[chainId]?.address : undefined), [chainId])\r\n  return useContract(uniAddress, UniJSON.abi, true)\r\n}\r\n\r\ninterface ProposalDetail {\r\n  target: string\r\n  functionSig: string\r\n  callData: string\r\n}\r\n\r\nexport interface ProposalData {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  proposer: string\r\n  status: ProposalState\r\n  forCount: CurrencyAmount<Token>\r\n  againstCount: CurrencyAmount<Token>\r\n  startBlock: number\r\n  endBlock: number\r\n  eta: BigNumber\r\n  details: ProposalDetail[]\r\n  governorIndex: number // index in the governance address array for which this proposal pertains\r\n}\r\n\r\nexport interface CreateProposalData {\r\n  targets: string[]\r\n  values: string[]\r\n  signatures: string[]\r\n  calldatas: string[]\r\n  description: string\r\n}\r\n\r\nexport enum ProposalState {\r\n  UNDETERMINED = -1,\r\n  PENDING,\r\n  ACTIVE,\r\n  CANCELED,\r\n  DEFEATED,\r\n  SUCCEEDED,\r\n  QUEUED,\r\n  EXPIRED,\r\n  EXECUTED,\r\n}\r\n\r\nconst GovernanceInterface = new Interface(GovernorAlphaJSON.abi)\r\n\r\n// get count of all proposals made in the latest governor contract\r\nfunction useProposalCount(contract: Contract | null): number | undefined {\r\n  // @ts-ignore\r\n  const { result } = useSingleCallResult(contract, 'proposalCount')\r\n\r\n  return result?.[0]?.toNumber()\r\n}\r\n\r\ninterface FormattedProposalLog {\r\n  description: string\r\n  details: { target: string; functionSig: string; callData: string }[]\r\n}\r\n\r\nconst FOUR_BYTES_DIR: { [sig: string]: string } = {\r\n  '0x5ef2c7f0': 'setSubnodeRecord(bytes32,bytes32,address,address,uint64)',\r\n  '0x10f13a8c': 'setText(bytes32,string,string)',\r\n  '0xb4720477': 'sendMessageToChild(address,bytes)',\r\n  '0xa9059cbb': 'transfer(address,uint256)',\r\n  '0x095ea7b3': 'approve(address,uint256)',\r\n  '0x7b1837de': 'fund(address,uint256)',\r\n}\r\n\r\n/**\r\n * Need proposal events to get description data emitted from\r\n * new proposal event.\r\n */\r\nfunction useFormattedProposalCreatedLogs(\r\n  contract: Contract | null,\r\n  indices: number[][],\r\n  fromBlock?: number,\r\n  toBlock?: number\r\n): FormattedProposalLog[] | undefined {\r\n  // create filters for ProposalCreated events\r\n  const filter = useMemo(() => {\r\n    const filter = contract?.filters?.ProposalCreated()\r\n    if (!filter) return undefined\r\n    return {\r\n      ...filter,\r\n      fromBlock,\r\n      toBlock,\r\n    }\r\n  }, [contract, fromBlock, toBlock])\r\n\r\n  const useLogsResult = useLogs(filter)\r\n\r\n  return useMemo(() => {\r\n    return useLogsResult?.logs\r\n      ?.map((log) => {\r\n        const parsed = GovernanceInterface.parseLog(log).args\r\n        return parsed\r\n      })\r\n      ?.filter((parsed) => indices.flat().some((i) => i === parsed.id.toNumber()))\r\n      ?.map((parsed) => {\r\n        let description!: string\r\n\r\n        const startBlock = parseInt(parsed.startBlock?.toString())\r\n        try {\r\n          description = parsed.description\r\n        } catch (error) {\r\n          // replace invalid UTF-8 in the description with replacement characters\r\n          let onError = Utf8ErrorFuncs.replace\r\n\r\n          // Bravo proposal reverses the codepoints for U+2018 (‘) and U+2026 (…)\r\n          if (startBlock === BRAVO_START_BLOCK) {\r\n            const U2018 = [0xe2, 0x80, 0x98].toString()\r\n            const U2026 = [0xe2, 0x80, 0xa6].toString()\r\n            onError = (reason, offset, bytes, output) => {\r\n              if (reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\r\n                const charCode = [bytes[offset], bytes[offset + 1], bytes[offset + 2]].reverse().toString()\r\n                if (charCode === U2018) {\r\n                  output.push(0x2018)\r\n                  return 2\r\n                } else if (charCode === U2026) {\r\n                  output.push(0x2026)\r\n                  return 2\r\n                }\r\n              }\r\n              return Utf8ErrorFuncs.replace(reason, offset, bytes, output)\r\n            }\r\n          }\r\n\r\n          description = JSON.parse(toUtf8String(error.error.value, onError)) || ''\r\n        }\r\n\r\n        // some proposals omit newlines\r\n        if (\r\n          startBlock === BRAVO_START_BLOCK ||\r\n          startBlock === ONE_BIP_START_BLOCK ||\r\n          startBlock === MOONBEAN_START_BLOCK\r\n        ) {\r\n          description = description.replace(/ {2}/g, '\\n').replace(/\\d\\. /g, '\\n$&')\r\n        }\r\n\r\n        return {\r\n          description,\r\n          details: parsed.targets.map((target: string, i: number) => {\r\n            const signature = parsed.signatures[i]\r\n            let calldata = parsed.calldatas[i]\r\n            let name: string\r\n            let types: string\r\n            if (signature === '') {\r\n              const fourbyte = calldata.slice(0, 10)\r\n              const sig = FOUR_BYTES_DIR[fourbyte] ?? 'UNKNOWN()'\r\n              if (!sig) throw new Error('Missing four byte sig')\r\n              ;[name, types] = sig.substring(0, sig.length - 1).split('(')\r\n              calldata = `0x${calldata.slice(10)}`\r\n            } else {\r\n              ;[name, types] = signature.substring(0, signature.length - 1).split('(')\r\n            }\r\n            const decoded = defaultAbiCoder.decode(types.split(','), calldata)\r\n            return {\r\n              target,\r\n              functionSig: name,\r\n              callData: decoded.join(', '),\r\n            }\r\n          }),\r\n        }\r\n      })\r\n  }, [indices, useLogsResult])\r\n}\r\n\r\nconst V0_PROPOSAL_IDS = [[1], [2], [3], [4]]\r\nconst V1_PROPOSAL_IDS = [[1], [2], [3]]\r\n\r\nfunction countToIndices(count: number | undefined, skip = 0) {\r\n  return typeof count === 'number' ? new Array(count - skip).fill(0).map((_, i) => [i + 1 + skip]) : []\r\n}\r\n\r\n// get data for all past and active proposals\r\nexport function useAllProposalData(): { data: ProposalData[]; loading: boolean } {\r\n  const chainId = useChainId()\r\n  const gov0 = useGovernanceV0Contract()\r\n  const gov1 = useGovernanceV1Contract()\r\n  const gov2 = useGovernanceBravoContract()\r\n\r\n  const proposalCount0 = useProposalCount(gov0)\r\n  const proposalCount1 = useProposalCount(gov1)\r\n  const proposalCount2 = useProposalCount(gov2)\r\n\r\n  const gov0ProposalIndexes = useMemo(() => {\r\n    return chainId === ChainId.MAINNET ? V0_PROPOSAL_IDS : countToIndices(proposalCount0)\r\n  }, [chainId, proposalCount0])\r\n  const gov1ProposalIndexes = useMemo(() => {\r\n    return chainId === ChainId.MAINNET ? V1_PROPOSAL_IDS : countToIndices(proposalCount1)\r\n  }, [chainId, proposalCount1])\r\n  const gov2ProposalIndexes = useMemo(() => {\r\n    return countToIndices(proposalCount2, 8)\r\n  }, [proposalCount2])\r\n\r\n  // @ts-ignore\r\n  const proposalsV0 = useSingleContractMultipleData(gov0, 'proposals', gov0ProposalIndexes)\r\n  // @ts-ignore\r\n  const proposalsV1 = useSingleContractMultipleData(gov1, 'proposals', gov1ProposalIndexes)\r\n  // @ts-ignore\r\n  const proposalsV2 = useSingleContractMultipleData(gov2, 'proposals', gov2ProposalIndexes)\r\n\r\n  // get all proposal states\r\n  // @ts-ignore\r\n  const proposalStatesV0 = useSingleContractMultipleData(gov0, 'state', gov0ProposalIndexes)\r\n  // @ts-ignore\r\n  const proposalStatesV1 = useSingleContractMultipleData(gov1, 'state', gov1ProposalIndexes)\r\n  // @ts-ignore\r\n  const proposalStatesV2 = useSingleContractMultipleData(gov2, 'state', gov2ProposalIndexes)\r\n\r\n  // get metadata from past events\r\n  const formattedLogsV0 = useFormattedProposalCreatedLogs(gov0, gov0ProposalIndexes, 11042287, 12563484)\r\n  const formattedLogsV1 = useFormattedProposalCreatedLogs(gov1, gov1ProposalIndexes, 12686656, 13059343)\r\n  const formattedLogsV2 = useFormattedProposalCreatedLogs(gov2, gov2ProposalIndexes, 13538153)\r\n\r\n  const uni = useMemo(() => (chainId ? UNI[chainId] : undefined), [chainId])\r\n\r\n  // early return until events are fetched\r\n  return useMemo(() => {\r\n    const proposalsCallData = [...proposalsV0, ...proposalsV1, ...proposalsV2]\r\n    const proposalStatesCallData = [...proposalStatesV0, ...proposalStatesV1, ...proposalStatesV2]\r\n    const formattedLogs = [...(formattedLogsV0 ?? []), ...(formattedLogsV1 ?? []), ...(formattedLogsV2 ?? [])]\r\n\r\n    if (\r\n      !uni ||\r\n      proposalsCallData.some((p) => p.loading) ||\r\n      proposalStatesCallData.some((p) => p.loading) ||\r\n      (gov0 && !formattedLogsV0) ||\r\n      (gov1 && !formattedLogsV1) ||\r\n      (gov2 && !formattedLogsV2)\r\n    ) {\r\n      return { data: [], loading: true }\r\n    }\r\n\r\n    return {\r\n      data: proposalsCallData.map((proposal, i) => {\r\n        const startBlock = parseInt(proposal?.result?.startBlock?.toString())\r\n\r\n        let description = formattedLogs[i]?.description ?? ''\r\n        if (startBlock === UNISWAP_GRANTS_START_BLOCK) {\r\n          description = UNISWAP_GRANTS_PROPOSAL_DESCRIPTION\r\n        }\r\n\r\n        let title = description?.split(/#+\\s|\\n/g)[1]\r\n        if (startBlock === POLYGON_START_BLOCK) {\r\n          title = POLYGON_PROPOSAL_TITLE\r\n        }\r\n\r\n        return {\r\n          id: proposal?.result?.id.toString(),\r\n          title: title ?? t`Untitled`,\r\n          description: description ?? t`No description.`,\r\n          proposer: proposal?.result?.proposer,\r\n          status: proposalStatesCallData[i]?.result?.[0] ?? ProposalState.UNDETERMINED,\r\n          forCount: CurrencyAmount.fromRawAmount(uni, proposal?.result?.forVotes),\r\n          againstCount: CurrencyAmount.fromRawAmount(uni, proposal?.result?.againstVotes),\r\n          startBlock,\r\n          endBlock: parseInt(proposal?.result?.endBlock?.toString()),\r\n          eta: proposal?.result?.eta,\r\n          details: formattedLogs[i]?.details,\r\n          governorIndex: i >= proposalsV0.length + proposalsV1.length ? 2 : i >= proposalsV0.length ? 1 : 0,\r\n        }\r\n      }),\r\n      loading: false,\r\n    }\r\n  }, [\r\n    formattedLogsV0,\r\n    formattedLogsV1,\r\n    formattedLogsV2,\r\n    gov0,\r\n    gov1,\r\n    gov2,\r\n    proposalStatesV0,\r\n    proposalStatesV1,\r\n    proposalStatesV2,\r\n    proposalsV0,\r\n    proposalsV1,\r\n    proposalsV2,\r\n    uni,\r\n  ])\r\n}\r\n\r\nexport function useProposalData(governorIndex: number, id: string): ProposalData | undefined {\r\n  const { data } = useAllProposalData()\r\n  return data.filter((p) => p.governorIndex === governorIndex)?.find((p) => p.id === id)\r\n}\r\n\r\nexport function useQuorum(governorIndex: number): CurrencyAmount<Token> | undefined {\r\n  const latestGovernanceContract = useLatestGovernanceContract()\r\n  // @ts-ignore\r\n  const quorumVotes = useSingleCallResult(latestGovernanceContract, 'quorumVotes')?.result?.[0]\r\n  const chainId = useChainId()\r\n  const uni = useMemo(() => (chainId ? UNI[chainId] : undefined), [chainId])\r\n\r\n  if (\r\n    !latestGovernanceContract ||\r\n    !quorumVotes ||\r\n    chainId !== ChainId.MAINNET ||\r\n    !uni ||\r\n    governorIndex !== LATEST_GOVERNOR_INDEX\r\n  )\r\n    return undefined\r\n\r\n  return CurrencyAmount.fromRawAmount(uni, quorumVotes)\r\n}\r\n\r\n// get the users delegatee if it exists\r\nexport function useUserDelegatee(): string {\r\n  const { account } = useWeb3React()\r\n  const uniContract = useUniContract()\r\n  // @ts-ignore\r\n  const { result } = useSingleCallResult(uniContract, 'delegates', [account ?? undefined])\r\n  return result?.[0] ?? undefined\r\n}\r\n\r\n// gets the users current votes\r\nexport function useUserVotes(): { loading: boolean; votes?: CurrencyAmount<Token> } {\r\n  const { account, chainId } = useWeb3React()\r\n  const uniContract = useUniContract()\r\n\r\n  // check for available votes\r\n  // @ts-ignore\r\n  const { result, loading } = useSingleCallResult(uniContract, 'getCurrentVotes', [account ?? undefined])\r\n  return useMemo(() => {\r\n    const uni = chainId ? UNI[chainId] : undefined\r\n    return { loading, votes: uni && result ? CurrencyAmount.fromRawAmount(uni, result?.[0]) : undefined }\r\n  }, [chainId, loading, result])\r\n}\r\n\r\n// fetch available votes as of block (usually proposal start block)\r\nexport function useUserVotesAsOfBlock(block: number | undefined): CurrencyAmount<Token> | undefined {\r\n  const { account, chainId } = useWeb3React()\r\n  const uniContract = useUniContract()\r\n\r\n  // check for available votes\r\n  const uni = useMemo(() => (chainId ? UNI[chainId] : undefined), [chainId])\r\n  // @ts-ignore\r\n  const votes = useSingleCallResult(uniContract, 'getPriorVotes', [account ?? undefined, block ?? undefined])\r\n    ?.result?.[0]\r\n  return votes && uni ? CurrencyAmount.fromRawAmount(uni, votes) : undefined\r\n}\r\n\r\nexport function useDelegateCallback(): (delegatee: string | undefined) => undefined | Promise<string> {\r\n  const { account, chainId, provider } = useWeb3React()\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const uniContract = useUniContract()\r\n\r\n  return useCallback(\r\n    (delegatee: string | undefined) => {\r\n      if (!provider || !chainId || !account || !delegatee || !isAddress(delegatee ?? '')) return undefined\r\n      const args = [delegatee]\r\n      if (!uniContract) throw new Error('No UNI Contract!')\r\n      return uniContract.estimateGas.delegate(...args, {}).then((estimatedGasLimit) => {\r\n        return uniContract\r\n          .delegate(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\r\n          .then((response: TransactionResponse) => {\r\n            addTransaction(response, {\r\n              type: TransactionType.DELEGATE,\r\n              delegatee,\r\n            })\r\n            return response.hash\r\n          })\r\n      })\r\n    },\r\n    [account, addTransaction, chainId, provider, uniContract]\r\n  )\r\n}\r\n\r\nexport function useVoteCallback(): (\r\n  proposalId: string | undefined,\r\n  voteOption: VoteOption\r\n) => undefined | Promise<string> {\r\n  const { account, chainId } = useWeb3React()\r\n  const latestGovernanceContract = useLatestGovernanceContract()\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  return useCallback(\r\n    (proposalId: string | undefined, voteOption: VoteOption) => {\r\n      if (!account || !latestGovernanceContract || !proposalId || !chainId) return\r\n      const args = [proposalId, voteOption === VoteOption.Against ? 0 : voteOption === VoteOption.For ? 1 : 2]\r\n      return latestGovernanceContract.estimateGas.castVote(...args, {}).then((estimatedGasLimit) => {\r\n        return latestGovernanceContract\r\n          .castVote(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\r\n          .then((response: TransactionResponse) => {\r\n            addTransaction(response, {\r\n              type: TransactionType.VOTE,\r\n              decision: voteOption,\r\n              governorAddress: latestGovernanceContract.address,\r\n              proposalId: parseInt(proposalId),\r\n              reason: '',\r\n            })\r\n            return response.hash\r\n          })\r\n      })\r\n    },\r\n    [account, addTransaction, latestGovernanceContract, chainId]\r\n  )\r\n}\r\n\r\nexport function useQueueCallback(): (proposalId: string | undefined) => undefined | Promise<string> {\r\n  const { account, chainId } = useWeb3React()\r\n  const latestGovernanceContract = useLatestGovernanceContract()\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  return useCallback(\r\n    (proposalId: string | undefined) => {\r\n      if (!account || !latestGovernanceContract || !proposalId || !chainId) return\r\n      const args = [proposalId]\r\n      return latestGovernanceContract.estimateGas.queue(...args, {}).then((estimatedGasLimit) => {\r\n        return latestGovernanceContract\r\n          .queue(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\r\n          .then((response: TransactionResponse) => {\r\n            addTransaction(response, {\r\n              type: TransactionType.QUEUE,\r\n              governorAddress: latestGovernanceContract.address,\r\n              proposalId: parseInt(proposalId),\r\n            })\r\n            return response.hash\r\n          })\r\n      })\r\n    },\r\n    [account, addTransaction, latestGovernanceContract, chainId]\r\n  )\r\n}\r\n\r\nexport function useExecuteCallback(): (proposalId: string | undefined) => undefined | Promise<string> {\r\n  const { account, chainId } = useWeb3React()\r\n  const latestGovernanceContract = useLatestGovernanceContract()\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  return useCallback(\r\n    (proposalId: string | undefined) => {\r\n      if (!account || !latestGovernanceContract || !proposalId || !chainId) return\r\n      const args = [proposalId]\r\n      return latestGovernanceContract.estimateGas.execute(...args, {}).then((estimatedGasLimit) => {\r\n        return latestGovernanceContract\r\n          .execute(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\r\n          .then((response: TransactionResponse) => {\r\n            addTransaction(response, {\r\n              type: TransactionType.EXECUTE,\r\n              governorAddress: latestGovernanceContract.address,\r\n              proposalId: parseInt(proposalId),\r\n            })\r\n            return response.hash\r\n          })\r\n      })\r\n    },\r\n    [account, addTransaction, latestGovernanceContract, chainId]\r\n  )\r\n}\r\n\r\nexport function useCreateProposalCallback(): (\r\n  createProposalData: CreateProposalData | undefined\r\n) => undefined | Promise<string> {\r\n  const { account, chainId } = useWeb3React()\r\n  const latestGovernanceContract = useLatestGovernanceContract()\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  return useCallback(\r\n    (createProposalData: CreateProposalData | undefined) => {\r\n      if (!account || !latestGovernanceContract || !createProposalData || !chainId) return undefined\r\n\r\n      const args = [\r\n        createProposalData.targets,\r\n        createProposalData.values,\r\n        createProposalData.signatures,\r\n        createProposalData.calldatas,\r\n        createProposalData.description,\r\n      ]\r\n\r\n      return latestGovernanceContract.estimateGas.propose(...args).then((estimatedGasLimit) => {\r\n        return latestGovernanceContract\r\n          .propose(...args, { gasLimit: calculateGasMargin(estimatedGasLimit) })\r\n          .then((response: TransactionResponse) => {\r\n            addTransaction(response, {\r\n              type: TransactionType.SUBMIT_PROPOSAL,\r\n            })\r\n            return response.hash\r\n          })\r\n      })\r\n    },\r\n    [account, addTransaction, latestGovernanceContract, chainId]\r\n  )\r\n}\r\n\r\nexport function useLatestProposalId(address: string | undefined): string | undefined {\r\n  const latestGovernanceContract = useLatestGovernanceContract()\r\n  // @ts-ignore\r\n  const res = useSingleCallResult(latestGovernanceContract, 'latestProposalIds', [address])\r\n  return res?.result?.[0]?.toString()\r\n}\r\n\r\nexport function useProposalThreshold(): CurrencyAmount<Token> | undefined {\r\n  const chainId = useChainId()\r\n\r\n  const latestGovernanceContract = useLatestGovernanceContract()\r\n  // @ts-ignore\r\n  const res = useSingleCallResult(latestGovernanceContract, 'proposalThreshold')\r\n  const uni = useMemo(() => (chainId ? UNI[chainId] : undefined), [chainId])\r\n\r\n  if (res?.result?.[0] && uni) {\r\n    return CurrencyAmount.fromRawAmount(uni, res.result[0])\r\n  }\r\n\r\n  return undefined\r\n}\r\n","import { ButtonDropdown } from 'components/Button'\r\nimport Column from 'components/Column'\r\nimport Modal from 'components/Modal'\r\nimport { RowBetween } from 'components/Row'\r\nimport { MenuItem, PaddedColumn, Separator } from 'components/SearchModal/styled'\r\nimport { Trans } from 'i18n'\r\nimport { useCallback } from 'react'\r\nimport { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\nimport { CloseIcon } from 'theme/components'\r\n\r\nexport enum ProposalAction {\r\n  TRANSFER_TOKEN = 'Transfer Token',\r\n  APPROVE_TOKEN = 'Approve Token',\r\n}\r\n\r\ninterface ProposalActionSelectorModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  onProposalActionSelect: (proposalAction: ProposalAction) => void\r\n}\r\n\r\nconst ContentWrapper = styled(Column)`\r\n  width: 100%;\r\n  flex: 1 1;\r\n  position: relative;\r\n`\r\nconst ActionSelectorHeader = styled.div`\r\n  font-size: 14px;\r\n  font-weight: 535;\r\n  color: ${({ theme }) => theme.neutral2};\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst ActionDropdown = styled(ButtonDropdown)`\r\n  padding: 0px;\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.neutral1};\r\n  font-size: 1.25rem;\r\n\r\n  :hover,\r\n  :active,\r\n  :focus {\r\n    outline: 0px;\r\n    box-shadow: none;\r\n    background-color: transparent;\r\n  }\r\n`\r\n\r\nconst ProposalActionSelectorFlex = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  border-radius: 20px;\r\n  border: 1px solid ${({ theme }) => theme.surface3};\r\n  background-color: ${({ theme }) => theme.surface1};\r\n`\r\n\r\nconst ProposalActionSelectorContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  padding: 1em;\r\n`\r\n\r\nexport const ProposalActionSelector = ({\r\n  className,\r\n  onClick,\r\n  proposalAction,\r\n}: {\r\n  className?: string\r\n  onClick: () => void\r\n  proposalAction: ProposalAction\r\n}) => {\r\n  return (\r\n    <ProposalActionSelectorFlex>\r\n      <ProposalActionSelectorContainer className={className}>\r\n        <ActionSelectorHeader>\r\n          <Trans>Proposed action</Trans>\r\n        </ActionSelectorHeader>\r\n        <ActionDropdown onClick={onClick}>{proposalAction}</ActionDropdown>\r\n      </ProposalActionSelectorContainer>\r\n    </ProposalActionSelectorFlex>\r\n  )\r\n}\r\n\r\nexport function ProposalActionSelectorModal({\r\n  isOpen,\r\n  onDismiss,\r\n  onProposalActionSelect,\r\n}: ProposalActionSelectorModalProps) {\r\n  const handleProposalActionSelect = useCallback(\r\n    (proposalAction: ProposalAction) => {\r\n      onProposalActionSelect(proposalAction)\r\n      onDismiss()\r\n    },\r\n    [onDismiss, onProposalActionSelect]\r\n  )\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={onDismiss}>\r\n      <ContentWrapper>\r\n        <PaddedColumn gap=\"16px\">\r\n          <RowBetween>\r\n            <Text fontWeight={535} fontSize={16}>\r\n              <Trans>Select an action</Trans>\r\n            </Text>\r\n            <CloseIcon onClick={onDismiss} />\r\n          </RowBetween>\r\n        </PaddedColumn>\r\n        <Separator />\r\n        <MenuItem onClick={() => handleProposalActionSelect(ProposalAction.TRANSFER_TOKEN)}>\r\n          <Column>\r\n            <Text fontWeight={535}>\r\n              <Trans>Transfer token</Trans>\r\n            </Text>\r\n          </Column>\r\n        </MenuItem>\r\n        <MenuItem onClick={() => handleProposalActionSelect(ProposalAction.APPROVE_TOKEN)}>\r\n          <Column>\r\n            <Text fontWeight={535}>\r\n              <Trans>Approve token</Trans>\r\n            </Text>\r\n          </Column>\r\n        </MenuItem>\r\n      </ContentWrapper>\r\n    </Modal>\r\n  )\r\n}\r\n","import { Currency } from '@uniswap/sdk-core'\r\nimport AddressInputPanel from 'components/AddressInputPanel'\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\r\nimport { Trans } from 'i18n'\r\nimport styled from 'styled-components'\r\n\r\nimport { CurrencySearchFilters } from 'components/SearchModal/CurrencySearch'\r\nimport { ProposalAction } from './ProposalActionSelector'\r\n\r\nenum ProposalActionDetailField {\r\n  ADDRESS,\r\n  CURRENCY,\r\n}\r\n\r\nconst ProposalActionDetailContainer = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 10px;\r\n  > * {\r\n    width: 100%;\r\n  }\r\n  > :not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\n\r\nconst CREATE_PROPOSAL_CURRENCY_SEARCH_FILTERS: CurrencySearchFilters = {\r\n  disableNonToken: true,\r\n  showCommonBases: false,\r\n}\r\n\r\nexport const ProposalActionDetail = ({\r\n  className,\r\n  proposalAction,\r\n  currency,\r\n  amount,\r\n  toAddress,\r\n  onCurrencySelect,\r\n  onAmountInput,\r\n  onToAddressInput,\r\n}: {\r\n  className?: string\r\n  proposalAction: ProposalAction\r\n  currency?: Currency\r\n  amount: string\r\n  toAddress: string\r\n  onCurrencySelect: (currency: Currency) => void\r\n  onAmountInput: (amount: string) => void\r\n  onToAddressInput: (address: string) => void\r\n}) => {\r\n  const proposalActionsData = {\r\n    [ProposalAction.TRANSFER_TOKEN]: [\r\n      {\r\n        type: ProposalActionDetailField.ADDRESS,\r\n        label: <Trans>To</Trans>,\r\n      },\r\n      {\r\n        type: ProposalActionDetailField.CURRENCY,\r\n      },\r\n    ],\r\n    [ProposalAction.APPROVE_TOKEN]: [\r\n      {\r\n        type: ProposalActionDetailField.ADDRESS,\r\n        label: <Trans>To</Trans>,\r\n      },\r\n      {\r\n        type: ProposalActionDetailField.CURRENCY,\r\n      },\r\n    ],\r\n  }\r\n\r\n  return (\r\n    <ProposalActionDetailContainer className={className}>\r\n      {proposalActionsData[proposalAction].map((field, i) =>\r\n        field.type === ProposalActionDetailField.ADDRESS ? (\r\n          <AddressInputPanel key={i} label={field.label} value={toAddress} onChange={onToAddressInput} />\r\n        ) : field.type === ProposalActionDetailField.CURRENCY ? (\r\n          <CurrencyInputPanel\r\n            key={i}\r\n            value={amount}\r\n            currency={currency}\r\n            onUserInput={(amount: string) => onAmountInput(amount)}\r\n            onCurrencySelect={(currency: Currency) => onCurrencySelect(currency)}\r\n            showMaxButton={false}\r\n            showCurrencyAmount={false}\r\n            hideBalance\r\n            id=\"currency-input\"\r\n            currencySearchFilters={CREATE_PROPOSAL_CURRENCY_SEARCH_FILTERS}\r\n          />\r\n        ) : null\r\n      )}\r\n    </ProposalActionDetailContainer>\r\n  )\r\n}\r\n","import { ChangeEvent, memo, useCallback, useRef } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Input = styled.input<{ error?: boolean; fontSize?: string }>`\r\n  font-size: ${({ fontSize }) => fontSize || '1.25rem'};\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  background-color: ${({ theme }) => theme.surface1};\r\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  color: ${({ error, theme }) => (error ? theme.critical : theme.neutral1)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-weight: 535;\r\n  width: 100%;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.neutral3};\r\n  }\r\n`\r\n\r\nconst TextAreaInput = styled.textarea<{ error?: boolean; fontSize?: string }>`\r\n  font-size: ${({ fontSize }) => fontSize || '1.25rem'};\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  resize: none;\r\n  background-color: ${({ theme }) => theme.surface1};\r\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  color: ${({ error, theme }) => (error ? theme.critical : theme.neutral1)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-weight: 535;\r\n  width: 100%;\r\n  line-height: 1.2;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.neutral2};\r\n  }\r\n`\r\n\r\nexport const TextInput = ({\r\n  className,\r\n  value,\r\n  onUserInput,\r\n  placeholder,\r\n  fontSize,\r\n}: {\r\n  className?: string\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  placeholder: string\r\n  fontSize: string\r\n}) => {\r\n  const handleInput = useCallback(\r\n    (event: ChangeEvent<HTMLInputElement>) => {\r\n      onUserInput(event.target.value)\r\n    },\r\n    [onUserInput]\r\n  )\r\n\r\n  return (\r\n    <div className={className}>\r\n      <Input\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoCorrect=\"off\"\r\n        autoCapitalize=\"off\"\r\n        spellCheck=\"false\"\r\n        placeholder={placeholder || ''}\r\n        onChange={handleInput}\r\n        value={value}\r\n        fontSize={fontSize}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const ResizingTextArea = memo(\r\n  ({\r\n    className,\r\n    value,\r\n    onUserInput,\r\n    placeholder,\r\n    fontSize,\r\n  }: {\r\n    className?: string\r\n    value: string\r\n    onUserInput: (value: string) => void\r\n    placeholder: string\r\n    fontSize: string\r\n  }) => {\r\n    const inputRef = useRef<HTMLTextAreaElement>(document.createElement('textarea'))\r\n\r\n    const handleInput = useCallback(\r\n      (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        inputRef.current.style.height = 'auto'\r\n        inputRef.current.style.height = inputRef.current.scrollHeight + 'px'\r\n        onUserInput(event.target.value)\r\n      },\r\n      [onUserInput]\r\n    )\r\n\r\n    return (\r\n      <TextAreaInput\r\n        style={{ height: 'auto', minHeight: '535px' }}\r\n        className={className}\r\n        autoComplete=\"off\"\r\n        autoCorrect=\"off\"\r\n        autoCapitalize=\"off\"\r\n        spellCheck=\"false\"\r\n        placeholder={placeholder || ''}\r\n        onChange={handleInput}\r\n        value={value}\r\n        fontSize={fontSize}\r\n        ref={inputRef}\r\n      />\r\n    )\r\n  }\r\n)\r\n\r\nResizingTextArea.displayName = 'ResizingTextArea'\r\n","// eslint-disable-next-line no-restricted-imports\r\nimport { ResizingTextArea, TextInput } from 'components/TextInput'\r\nimport { Trans, t } from 'i18n'\r\nimport { memo } from 'react'\r\nimport { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nconst ProposalEditorHeader = styled(Text)`\r\n  font-size: 14px;\r\n  font-weight: 535;\r\n  color: ${({ theme }) => theme.neutral2};\r\n`\r\n\r\nconst ProposalTitle = memo(styled(TextInput)`\r\n  margin-top: 10.5px;\r\n  margin-bottom: 7.5px;\r\n`)\r\n\r\nconst ProposalEditorContainer = styled.div`\r\n  margin-top: 10px;\r\n  padding: 0.75rem 1rem 0.75rem 1rem;\r\n  border-radius: 20px;\r\n  border: 1px solid ${({ theme }) => theme.surface3};\r\n  background-color: ${({ theme }) => theme.surface1};\r\n`\r\n\r\nexport const ProposalEditor = ({\r\n  className,\r\n  title,\r\n  body,\r\n  onTitleInput,\r\n  onBodyInput,\r\n}: {\r\n  className?: string\r\n  title: string\r\n  body: string\r\n  onTitleInput: (title: string) => void\r\n  onBodyInput: (body: string) => void\r\n}) => {\r\n  const bodyPlaceholder = `## Summary\r\n\r\nInsert your summary here\r\n\r\n## Methodology\r\n  \r\nInsert your methodology here\r\n\r\n## Conclusion\r\n  \r\nInsert your conclusion here\r\n  \r\n  `\r\n\r\n  return (\r\n    <ProposalEditorContainer className={className}>\r\n      <ProposalEditorHeader>\r\n        <Trans>Proposal</Trans>\r\n      </ProposalEditorHeader>\r\n      <ProposalTitle value={title} onUserInput={onTitleInput} placeholder={t`Proposal Title`} fontSize=\"1.25rem\" />\r\n      <hr />\r\n      <ResizingTextArea value={body} onUserInput={onBodyInput} placeholder={bodyPlaceholder} fontSize=\"1rem\" />\r\n    </ProposalEditorContainer>\r\n  )\r\n}\r\n","import { Trans } from 'i18n'\r\nimport { ArrowUpCircle } from 'react-feather'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { CloseIcon, CustomLightSpinner, ThemedText } from 'theme/components'\r\nimport { useChainId } from 'wagmi'\r\n\r\nimport Circle from '../../assets/images/blue-loader.svg'\r\nimport { ExternalLink } from '../../theme/components'\r\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\r\nimport { AutoColumn, ColumnCenter } from '../Column'\r\nimport { RowBetween } from '../Row'\r\n\r\nconst ConfirmOrLoadingWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 24px;\r\n`\r\n\r\nconst ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 60px 0;\r\n`\r\n\r\nexport function LoadingView({ children, onDismiss }: { children: any; onDismiss: () => void }) {\r\n  return (\r\n    <ConfirmOrLoadingWrapper>\r\n      <RowBetween>\r\n        <div />\r\n        <CloseIcon onClick={onDismiss} />\r\n      </RowBetween>\r\n      <ConfirmedIcon>\r\n        <CustomLightSpinner src={Circle} alt=\"loader\" size=\"90px\" />\r\n      </ConfirmedIcon>\r\n      <AutoColumn gap=\"100px\" justify=\"center\">\r\n        {children}\r\n        <ThemedText.DeprecatedSubHeader>\r\n          <Trans>Confirm this transaction in your wallet</Trans>\r\n        </ThemedText.DeprecatedSubHeader>\r\n      </AutoColumn>\r\n    </ConfirmOrLoadingWrapper>\r\n  )\r\n}\r\n\r\nexport function SubmittedView({ children, onDismiss, hash }: { children: any; onDismiss: () => void; hash?: string }) {\r\n  const theme = useTheme()\r\n  const chainId = useChainId()\r\n\r\n  return (\r\n    <ConfirmOrLoadingWrapper>\r\n      <RowBetween>\r\n        <div />\r\n        <CloseIcon onClick={onDismiss} />\r\n      </RowBetween>\r\n      <ConfirmedIcon>\r\n        <ArrowUpCircle strokeWidth={0.5} size={90} color={theme.accent1} />\r\n      </ConfirmedIcon>\r\n      <AutoColumn gap=\"100px\" justify=\"center\">\r\n        {children}\r\n        {chainId && hash && (\r\n          <ExternalLink\r\n            href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}\r\n            style={{ marginLeft: '4px' }}\r\n          >\r\n            <ThemedText.DeprecatedSubHeader>\r\n              <Trans>View transaction on Explorer</Trans>\r\n            </ThemedText.DeprecatedSubHeader>\r\n          </ExternalLink>\r\n        )}\r\n      </AutoColumn>\r\n    </ConfirmOrLoadingWrapper>\r\n  )\r\n}\r\n","import { ButtonPrimary } from 'components/Button'\r\nimport { AutoColumn } from 'components/Column'\r\nimport Modal from 'components/Modal'\r\nimport { LoadingView, SubmittedView } from 'components/ModalViews'\r\nimport { Trans } from 'i18n'\r\nimport { Link } from 'react-router-dom'\r\nimport { Text } from 'rebass'\r\nimport { useTheme } from 'styled-components'\r\nimport { ExternalLink, ThemedText } from 'theme/components'\r\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\r\n\r\nexport const ProposalSubmissionModal = ({\r\n  isOpen,\r\n  hash,\r\n  onDismiss,\r\n}: {\r\n  isOpen: boolean\r\n  hash?: string\r\n  onDismiss: () => void\r\n}) => {\r\n  const theme = useTheme()\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={onDismiss}>\r\n      {!hash ? (\r\n        <LoadingView onDismiss={onDismiss}>\r\n          <AutoColumn gap=\"md\" justify=\"center\">\r\n            <ThemedText.DeprecatedLargeHeader>\r\n              <Trans>Submitting proposal</Trans>\r\n            </ThemedText.DeprecatedLargeHeader>\r\n          </AutoColumn>\r\n        </LoadingView>\r\n      ) : (\r\n        <SubmittedView onDismiss={onDismiss} hash={hash}>\r\n          <AutoColumn gap=\"md\" justify=\"center\">\r\n            <Text fontWeight={535} fontSize={20} textAlign=\"center\">\r\n              <Trans>Proposal submitted</Trans>\r\n            </Text>\r\n            {hash && (\r\n              <ExternalLink href={getExplorerLink(1, hash, ExplorerDataType.TRANSACTION)}>\r\n                <Text fontWeight={535} fontSize={14} color={theme.accent1}>\r\n                  <Trans>View on Etherscan</Trans>\r\n                </Text>\r\n              </ExternalLink>\r\n            )}\r\n            <ButtonPrimary as={Link} to=\"/vote\" onClick={onDismiss} style={{ margin: '20px 0 0 0' }}>\r\n              <Text fontWeight={535} fontSize={20}>\r\n                <Trans>Return</Trans>\r\n              </Text>\r\n            </ButtonPrimary>\r\n          </AutoColumn>\r\n        </SubmittedView>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n","import { defaultAbiCoder } from '@ethersproject/abi'\r\nimport { getAddress, isAddress } from '@ethersproject/address'\r\nimport { InterfacePageName } from '@uniswap/analytics-events'\r\nimport { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Trace } from 'analytics'\r\nimport { ButtonError } from 'components/Button'\r\nimport { BlueCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { Trans } from 'i18n'\r\nimport JSBI from 'jsbi'\r\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\r\nimport { Wrapper } from 'pages/Pool/styled'\r\nimport { useCallback, useMemo, useState } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  CreateProposalData,\r\n  ProposalState,\r\n  useCreateProposalCallback,\r\n  useLatestProposalId,\r\n  useProposalData,\r\n  useProposalThreshold,\r\n  useUserVotes,\r\n} from 'state/governance/hooks'\r\nimport styled from 'styled-components'\r\nimport { ExternalLink, ThemedText } from 'theme/components'\r\n\r\nimport { LATEST_GOVERNOR_INDEX } from '../../constants/governance'\r\nimport { UNI } from '../../constants/tokens'\r\nimport AppBody from '../AppBody'\r\nimport { ProposalActionDetail } from './ProposalActionDetail'\r\nimport { ProposalAction, ProposalActionSelector, ProposalActionSelectorModal } from './ProposalActionSelector'\r\nimport { ProposalEditor } from './ProposalEditor'\r\nimport { ProposalSubmissionModal } from './ProposalSubmissionModal'\r\n\r\nconst PageWrapper = styled(AutoColumn)`\r\n  padding: 68px 8px 0px;\r\n\r\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\r\n    padding: 48px 8px 0px;\r\n  }\r\n\r\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\r\n    padding-top: 20px;\r\n  }\r\n`\r\n\r\nconst BackArrow = styled(ArrowLeft)`\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.neutral1};\r\n`\r\nconst Nav = styled(Link)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  margin: 1em 0 0 1em;\r\n  text-decoration: none;\r\n`\r\n\r\nconst HeaderText = styled(ThemedText.H1Small)`\r\n  margin: auto !important;\r\n`\r\n\r\nconst CreateProposalButton = ({\r\n  proposalThreshold,\r\n  hasActiveOrPendingProposal,\r\n  hasEnoughVote,\r\n  isFormInvalid,\r\n  handleCreateProposal,\r\n}: {\r\n  proposalThreshold?: CurrencyAmount<Token>\r\n  hasActiveOrPendingProposal: boolean\r\n  hasEnoughVote: boolean\r\n  isFormInvalid: boolean\r\n  handleCreateProposal: () => void\r\n}) => {\r\n  const formattedProposalThreshold = proposalThreshold\r\n    ? JSBI.divide(\r\n        proposalThreshold.quotient,\r\n        JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(proposalThreshold.currency.decimals))\r\n      ).toLocaleString()\r\n    : undefined\r\n\r\n  return (\r\n    <ButtonError\r\n      style={{ marginTop: '18px' }}\r\n      error={hasActiveOrPendingProposal || !hasEnoughVote}\r\n      disabled={isFormInvalid || hasActiveOrPendingProposal || !hasEnoughVote}\r\n      onClick={handleCreateProposal}\r\n    >\r\n      {hasActiveOrPendingProposal ? (\r\n        <Trans>You already have an active or pending proposal</Trans>\r\n      ) : !hasEnoughVote ? (\r\n        <>\r\n          {formattedProposalThreshold ? (\r\n            <Trans>You must have {{ formattedProposalThreshold }} votes to submit a proposal</Trans>\r\n          ) : (\r\n            <Trans>You don&apos;t have enough votes to submit a proposal</Trans>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Trans>Create proposal</Trans>\r\n      )}\r\n    </ButtonError>\r\n  )\r\n}\r\n\r\nconst CreateProposalWrapper = styled(Wrapper)`\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n`\r\n\r\nconst AutonomousProposalCTA = styled.div`\r\n  text-align: center;\r\n  margin-top: 10px;\r\n`\r\n\r\nexport default function CreateProposal() {\r\n  const { account, chainId } = useWeb3React()\r\n\r\n  const latestProposalId = useLatestProposalId(account ?? undefined) ?? '0'\r\n  const latestProposalData = useProposalData(LATEST_GOVERNOR_INDEX, latestProposalId)\r\n  const { votes: availableVotes } = useUserVotes()\r\n  const proposalThreshold: CurrencyAmount<Token> | undefined = useProposalThreshold()\r\n\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const [hash, setHash] = useState<string | undefined>()\r\n  const [attempting, setAttempting] = useState(false)\r\n  const [proposalAction, setProposalAction] = useState(ProposalAction.TRANSFER_TOKEN)\r\n  const [toAddressValue, setToAddressValue] = useState('')\r\n  const [currencyValue, setCurrencyValue] = useState<Currency>(UNI[chainId ?? 1])\r\n  const [amountValue, setAmountValue] = useState('')\r\n  const [titleValue, setTitleValue] = useState('')\r\n  const [bodyValue, setBodyValue] = useState('')\r\n\r\n  const handleActionSelectorClick = useCallback(() => {\r\n    setModalOpen(true)\r\n  }, [setModalOpen])\r\n\r\n  const handleActionChange = useCallback(\r\n    (proposalAction: ProposalAction) => {\r\n      setProposalAction(proposalAction)\r\n    },\r\n    [setProposalAction]\r\n  )\r\n\r\n  const handleDismissActionSelector = useCallback(() => {\r\n    setModalOpen(false)\r\n  }, [setModalOpen])\r\n\r\n  const handleDismissSubmissionModal = useCallback(() => {\r\n    setHash(undefined)\r\n    setAttempting(false)\r\n  }, [setHash, setAttempting])\r\n\r\n  const handleToAddressInput = useCallback(\r\n    (toAddress: string) => {\r\n      setToAddressValue(toAddress)\r\n    },\r\n    [setToAddressValue]\r\n  )\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      setCurrencyValue(currency)\r\n    },\r\n    [setCurrencyValue]\r\n  )\r\n\r\n  const handleAmountInput = useCallback(\r\n    (amount: string) => {\r\n      setAmountValue(amount)\r\n    },\r\n    [setAmountValue]\r\n  )\r\n\r\n  const handleTitleInput = useCallback(\r\n    (title: string) => {\r\n      setTitleValue(title)\r\n    },\r\n    [setTitleValue]\r\n  )\r\n\r\n  const handleBodyInput = useCallback(\r\n    (body: string) => {\r\n      setBodyValue(body)\r\n    },\r\n    [setBodyValue]\r\n  )\r\n\r\n  const isFormInvalid = useMemo(\r\n    () =>\r\n      Boolean(\r\n        !proposalAction ||\r\n          !isAddress(toAddressValue) ||\r\n          !currencyValue?.isToken ||\r\n          amountValue === '' ||\r\n          titleValue === '' ||\r\n          bodyValue === ''\r\n      ),\r\n    [proposalAction, toAddressValue, currencyValue, amountValue, titleValue, bodyValue]\r\n  )\r\n\r\n  const hasEnoughVote = Boolean(\r\n    availableVotes && proposalThreshold && JSBI.greaterThanOrEqual(availableVotes.quotient, proposalThreshold.quotient)\r\n  )\r\n\r\n  const createProposalCallback = useCreateProposalCallback()\r\n\r\n  const handleCreateProposal = async () => {\r\n    setAttempting(true)\r\n\r\n    const createProposalData: CreateProposalData = {} as CreateProposalData\r\n\r\n    if (!createProposalCallback || !proposalAction || !currencyValue.isToken) return\r\n\r\n    const tokenAmount = tryParseCurrencyAmount(amountValue, currencyValue)\r\n    if (!tokenAmount) return\r\n\r\n    createProposalData.targets = [currencyValue.address]\r\n    createProposalData.values = ['0']\r\n    createProposalData.description = `# ${titleValue}\r\n\r\n${bodyValue}\r\n`\r\n\r\n    let types: string[][]\r\n    let values: string[][]\r\n    switch (proposalAction) {\r\n      case ProposalAction.TRANSFER_TOKEN: {\r\n        types = [['address', 'uint256']]\r\n        values = [[getAddress(toAddressValue), tokenAmount.quotient.toString()]]\r\n        createProposalData.signatures = [`transfer(${types[0].join(',')})`]\r\n        break\r\n      }\r\n\r\n      case ProposalAction.APPROVE_TOKEN: {\r\n        types = [['address', 'uint256']]\r\n        values = [[getAddress(toAddressValue), tokenAmount.quotient.toString()]]\r\n        createProposalData.signatures = [`approve(${types[0].join(',')})`]\r\n        break\r\n      }\r\n    }\r\n\r\n    createProposalData.calldatas = []\r\n    for (let i = 0; i < createProposalData.signatures.length; i++) {\r\n      createProposalData.calldatas[i] = defaultAbiCoder.encode(types[i], values[i])\r\n    }\r\n\r\n    const hash = await createProposalCallback(createProposalData ?? undefined)?.catch(() => {\r\n      setAttempting(false)\r\n    })\r\n\r\n    if (hash) setHash(hash)\r\n  }\r\n\r\n  return (\r\n    <Trace page={InterfacePageName.VOTE_PAGE} shouldLogImpression>\r\n      <PageWrapper>\r\n        <AppBody $maxWidth=\"800px\">\r\n          <Nav to=\"/vote\">\r\n            <BackArrow />\r\n            <HeaderText>Create Proposal</HeaderText>\r\n          </Nav>\r\n          <CreateProposalWrapper>\r\n            <BlueCard>\r\n              <AutoColumn gap=\"10px\">\r\n                <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\r\n                  <Trans>\r\n                    <strong>Tip:</strong> Select an action and describe your proposal for the community. The proposal\r\n                    cannot be modified after submission, so please verify all information before submitting. The voting\r\n                    period will begin immediately and last for 7 days. To propose a custom action,{' '}\r\n                    <ExternalLink href=\"https://docs.uniswap.org/protocol/reference/Governance/governance-reference#propose\">\r\n                      read the docs\r\n                    </ExternalLink>\r\n                    .\r\n                  </Trans>\r\n                </ThemedText.DeprecatedLink>\r\n              </AutoColumn>\r\n            </BlueCard>\r\n\r\n            <ProposalActionSelector onClick={handleActionSelectorClick} proposalAction={proposalAction} />\r\n            <ProposalActionDetail\r\n              proposalAction={proposalAction}\r\n              currency={currencyValue}\r\n              amount={amountValue}\r\n              toAddress={toAddressValue}\r\n              onCurrencySelect={handleCurrencySelect}\r\n              onAmountInput={handleAmountInput}\r\n              onToAddressInput={handleToAddressInput}\r\n            />\r\n            <ProposalEditor\r\n              title={titleValue}\r\n              body={bodyValue}\r\n              onTitleInput={handleTitleInput}\r\n              onBodyInput={handleBodyInput}\r\n            />\r\n            <CreateProposalButton\r\n              proposalThreshold={proposalThreshold}\r\n              hasActiveOrPendingProposal={\r\n                latestProposalData?.status === ProposalState.ACTIVE ||\r\n                latestProposalData?.status === ProposalState.PENDING\r\n              }\r\n              hasEnoughVote={hasEnoughVote}\r\n              isFormInvalid={isFormInvalid}\r\n              handleCreateProposal={handleCreateProposal}\r\n            />\r\n            {!hasEnoughVote ? (\r\n              <AutonomousProposalCTA>\r\n                Don’t have 2.5M votes? Anyone can create an autonomous proposal using{' '}\r\n                <ExternalLink href=\"https://fish.vote\">fish.vote</ExternalLink>\r\n              </AutonomousProposalCTA>\r\n            ) : null}\r\n          </CreateProposalWrapper>\r\n          <ProposalActionSelectorModal\r\n            isOpen={modalOpen}\r\n            onDismiss={handleDismissActionSelector}\r\n            onProposalActionSelect={(proposalAction: ProposalAction) => handleActionChange(proposalAction)}\r\n          />\r\n          <ProposalSubmissionModal isOpen={attempting} hash={hash} onDismiss={handleDismissSubmissionModal} />\r\n        </AppBody>\r\n      </PageWrapper>\r\n    </Trace>\r\n  )\r\n}\r\n","import { isAddress } from '@ethersproject/address'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Trans } from 'i18n'\r\nimport { ReactNode, useState } from 'react'\r\nimport { X } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\r\n\r\nimport { Text } from 'ui/src'\r\nimport { UNI } from '../../constants/tokens'\r\nimport useENS from '../../hooks/useENS'\r\nimport { useTokenBalance } from '../../state/connection/hooks'\r\nimport { useDelegateCallback } from '../../state/governance/hooks'\r\nimport AddressInputPanel from '../AddressInputPanel'\r\nimport { ButtonPrimary } from '../Button'\r\nimport { AutoColumn } from '../Column'\r\nimport Modal from '../Modal'\r\nimport { LoadingView, SubmittedView } from '../ModalViews'\r\nimport { RowBetween } from '../Row'\r\n\r\nconst ContentWrapper = styled(AutoColumn)`\r\n  width: 100%;\r\n  padding: 24px;\r\n`\r\n\r\nconst StyledClosed = styled(X)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst TextButton = styled.div`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\ninterface VoteModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  title: ReactNode\r\n}\r\n\r\nexport default function DelegateModal({ isOpen, onDismiss, title }: VoteModalProps) {\r\n  const { account, chainId } = useWeb3React()\r\n\r\n  // state for delegate input\r\n  const [usingDelegate, setUsingDelegate] = useState(false)\r\n  const [typed, setTyped] = useState('')\r\n  function handleRecipientType(val: string) {\r\n    setTyped(val)\r\n  }\r\n\r\n  // monitor for self delegation or input for third part delegate\r\n  // default is self delegation\r\n  const activeDelegate = usingDelegate ? typed : account\r\n  const { address: parsedAddress } = useENS(activeDelegate)\r\n\r\n  // get the number of votes available to delegate\r\n  const uniBalance = useTokenBalance(account ?? undefined, chainId ? UNI[chainId] : undefined)\r\n\r\n  const delegateCallback = useDelegateCallback()\r\n\r\n  // monitor call to help UI loading state\r\n  const [hash, setHash] = useState<string | undefined>()\r\n  const [attempting, setAttempting] = useState(false)\r\n\r\n  // wrapper to reset state on modal close\r\n  function wrappedOnDismiss() {\r\n    setHash(undefined)\r\n    setAttempting(false)\r\n    onDismiss()\r\n  }\r\n\r\n  async function onDelegate() {\r\n    setAttempting(true)\r\n\r\n    // if callback not returned properly ignore\r\n    if (!delegateCallback) return\r\n\r\n    // try delegation and store hash\r\n    const hash = await delegateCallback(parsedAddress ?? undefined)?.catch((error) => {\r\n      setAttempting(false)\r\n      console.log(error)\r\n    })\r\n\r\n    if (hash) {\r\n      setHash(hash)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={wrappedOnDismiss} maxHeight={90}>\r\n      {!attempting && !hash && (\r\n        <ContentWrapper gap=\"lg\">\r\n          <AutoColumn gap=\"lg\" justify=\"center\">\r\n            <RowBetween>\r\n              <ThemedText.DeprecatedMediumHeader fontWeight={535}>{title}</ThemedText.DeprecatedMediumHeader>\r\n              <StyledClosed stroke=\"black\" onClick={wrappedOnDismiss} />\r\n            </RowBetween>\r\n            <ThemedText.DeprecatedBody>\r\n              <Trans>Earned UNI tokens represent voting shares in Uniswap governance.</Trans>\r\n            </ThemedText.DeprecatedBody>\r\n            <ThemedText.DeprecatedBody>\r\n              <Trans>You can either vote on each proposal yourself or delegate your votes to a third party.</Trans>\r\n            </ThemedText.DeprecatedBody>\r\n            {usingDelegate && <AddressInputPanel value={typed} onChange={handleRecipientType} />}\r\n            <ButtonPrimary disabled={!isAddress(parsedAddress ?? '')} onClick={onDelegate}>\r\n              <ThemedText.DeprecatedMediumHeader color=\"white\">\r\n                {usingDelegate ? <Trans>Delegate votes</Trans> : <Trans>Self-delegate</Trans>}\r\n              </ThemedText.DeprecatedMediumHeader>\r\n            </ButtonPrimary>\r\n            <TextButton onClick={() => setUsingDelegate(!usingDelegate)}>\r\n              <Text color=\"$accent1\">\r\n                {usingDelegate ? <Trans>Remove delegate</Trans> : <Trans>Add delegate +</Trans>}\r\n              </Text>\r\n            </TextButton>\r\n          </AutoColumn>\r\n        </ContentWrapper>\r\n      )}\r\n      {attempting && !hash && (\r\n        <LoadingView onDismiss={wrappedOnDismiss}>\r\n          <AutoColumn gap=\"md\" justify=\"center\">\r\n            <ThemedText.DeprecatedLargeHeader>\r\n              {usingDelegate ? <Trans>Delegating votes</Trans> : <Trans>Unlocking votes</Trans>}\r\n            </ThemedText.DeprecatedLargeHeader>\r\n            <ThemedText.DeprecatedMain fontSize={36}> {formatCurrencyAmount(uniBalance, 4)}</ThemedText.DeprecatedMain>\r\n          </AutoColumn>\r\n        </LoadingView>\r\n      )}\r\n      {hash && (\r\n        <SubmittedView onDismiss={wrappedOnDismiss} hash={hash}>\r\n          <AutoColumn gap=\"md\" justify=\"center\">\r\n            <ThemedText.DeprecatedLargeHeader>\r\n              <Trans>Transaction submitted</Trans>\r\n            </ThemedText.DeprecatedLargeHeader>\r\n            <ThemedText.DeprecatedMain fontSize={36}>{formatCurrencyAmount(uniBalance, 4)}</ThemedText.DeprecatedMain>\r\n          </AutoColumn>\r\n        </SubmittedView>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n","import { ChainId } from '@uniswap/sdk-core'\r\nimport { Trans } from 'i18n'\r\nimport styled from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { useChainId } from 'wagmi'\r\n\r\nconst EmptyProposals = styled.div`\r\n  border: 1px solid ${({ theme }) => theme.neutral2};\r\n  padding: 16px 12px;\r\n  border-radius: 12px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst Sub = styled.i`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\ninterface EmptyStateProps {\r\n  HeaderContent: () => JSX.Element\r\n  SubHeaderContent: () => JSX.Element\r\n}\r\nconst EmptyState = ({ HeaderContent, SubHeaderContent }: EmptyStateProps) => (\r\n  <EmptyProposals>\r\n    <ThemedText.DeprecatedBody style={{ marginBottom: '8px' }}>\r\n      <HeaderContent />\r\n    </ThemedText.DeprecatedBody>\r\n    <ThemedText.DeprecatedSubHeader>\r\n      <Sub>\r\n        <SubHeaderContent />\r\n      </Sub>\r\n    </ThemedText.DeprecatedSubHeader>\r\n  </EmptyProposals>\r\n)\r\n\r\nexport default function ProposalEmptyState() {\r\n  const chainId = useChainId()\r\n  if (chainId && chainId !== ChainId.MAINNET) {\r\n    return (\r\n      <EmptyState\r\n        HeaderContent={() => <Trans>Please connect to Layer 1 Ethereum</Trans>}\r\n        SubHeaderContent={() => (\r\n          <Trans>\r\n            Uniswap governance is only available on Layer 1. Switch your network to Ethereum Mainnet to view Proposals\r\n            and Vote.\r\n          </Trans>\r\n        )}\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <EmptyState\r\n      HeaderContent={() => <Trans>No proposals found.</Trans>}\r\n      SubHeaderContent={() => <Trans>Proposals submitted by community members will appear here.</Trans>}\r\n    />\r\n  )\r\n}\r\n","import { Trans } from 'i18n'\r\nimport styled, { DefaultTheme } from 'styled-components'\r\n\r\nimport { ProposalState } from '../../state/governance/hooks'\r\n\r\nconst handleColorType = (status: ProposalState, theme: DefaultTheme) => {\r\n  switch (status) {\r\n    case ProposalState.PENDING:\r\n    case ProposalState.ACTIVE:\r\n      return theme.accent1\r\n    case ProposalState.SUCCEEDED:\r\n    case ProposalState.EXECUTED:\r\n      return theme.success\r\n    case ProposalState.DEFEATED:\r\n      return theme.critical\r\n    case ProposalState.QUEUED:\r\n    case ProposalState.CANCELED:\r\n    case ProposalState.EXPIRED:\r\n    default:\r\n      return theme.neutral3\r\n  }\r\n}\r\n\r\nfunction StatusText({ status }: { status: ProposalState }) {\r\n  switch (status) {\r\n    case ProposalState.PENDING:\r\n      return <Trans>Pending</Trans>\r\n    case ProposalState.ACTIVE:\r\n      return <Trans>Active</Trans>\r\n    case ProposalState.SUCCEEDED:\r\n      return <Trans>Succeeded</Trans>\r\n    case ProposalState.EXECUTED:\r\n      return <Trans>Executed</Trans>\r\n    case ProposalState.DEFEATED:\r\n      return <Trans>Defeated</Trans>\r\n    case ProposalState.QUEUED:\r\n      return <Trans>Queued</Trans>\r\n    case ProposalState.CANCELED:\r\n      return <Trans>Canceled</Trans>\r\n    case ProposalState.EXPIRED:\r\n      return <Trans>Expired</Trans>\r\n    default:\r\n      return <Trans>Undetermined</Trans>\r\n  }\r\n}\r\n\r\nconst StyledProposalContainer = styled.span<{ status: ProposalState }>`\r\n  font-size: 0.825rem;\r\n  font-weight: 535;\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  color: ${({ status, theme }) => handleColorType(status, theme)};\r\n  border: 1px solid ${({ status, theme }) => handleColorType(status, theme)};\r\n  width: fit-content;\r\n  justify-self: flex-end;\r\n  text-transform: uppercase;\r\n  flex: 0 0 100px;\r\n  text-align: center;\r\n`\r\n\r\nexport function ProposalStatus({ status }: { status: ProposalState }) {\r\n  return (\r\n    <StyledProposalContainer status={status}>\r\n      <StatusText status={status} />\r\n    </StyledProposalContainer>\r\n  )\r\n}\r\n","import { InterfacePageName } from '@uniswap/analytics-events'\r\nimport { CurrencyAmount, Token } from '@uniswap/sdk-core'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Trace } from 'analytics'\r\nimport { ButtonPrimary } from 'components/Button'\r\nimport { AutoColumn } from 'components/Column'\r\nimport FormattedCurrencyAmount from 'components/FormattedCurrencyAmount'\r\nimport Loader from 'components/Icons/LoadingSpinner'\r\nimport { AutoRow, RowBetween, RowFixed } from 'components/Row'\r\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink'\r\nimport Toggle from 'components/Toggle'\r\nimport { CardBGImage, CardNoise, CardSection, DataCard } from 'components/earn/styled'\r\nimport DelegateModal from 'components/vote/DelegateModal'\r\nimport ProposalEmptyState from 'components/vote/ProposalEmptyState'\r\nimport { Trans } from 'i18n'\r\nimport JSBI from 'jsbi'\r\nimport { darken } from 'polished'\r\nimport { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'rebass/styled-components'\r\nimport { useModalIsOpen, useToggleDelegateModal } from 'state/application/hooks'\r\nimport { ApplicationModal } from 'state/application/reducer'\r\nimport { useTokenBalance } from 'state/connection/hooks'\r\nimport { ProposalData, ProposalState, useAllProposalData, useUserDelegatee, useUserVotes } from 'state/governance/hooks'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { ExternalLink, ThemedText } from 'theme/components'\r\nimport { shortenAddress } from 'utilities/src/addresses'\r\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\r\n\r\nimport { ZERO_ADDRESS } from '../../constants/misc'\r\nimport { UNI } from '../../constants/tokens'\r\nimport { ProposalStatus } from './styled'\r\n\r\nconst PageWrapper = styled(AutoColumn)`\r\n  padding-top: 68px;\r\n\r\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\r\n    padding: 48px 8px 0px;\r\n  }\r\n\r\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\r\n    padding-top: 20px;\r\n  }\r\n`\r\n\r\nconst TopSection = styled(AutoColumn)`\r\n  max-width: 640px;\r\n  width: 100%;\r\n`\r\n\r\nconst Proposal = styled(Button)`\r\n  padding: 0.75rem 1rem;\r\n  width: 100%;\r\n  margin-top: 1rem;\r\n  border-radius: 12px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-align: left;\r\n  outline: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.neutral1};\r\n  text-decoration: none;\r\n  background-color: ${({ theme }) => theme.surface1};\r\n  &:focus {\r\n    background-color: ${({ theme }) => darken(0.05, theme.surface1)};\r\n  }\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.surface3};\r\n  }\r\n`\r\n\r\nconst ProposalNumber = styled.span`\r\n  opacity: ${({ theme }) => theme.opacity.hover};\r\n  flex: 0 0 40px;\r\n`\r\n\r\nconst ProposalTitle = styled.span`\r\n  font-weight: 535;\r\n  flex: 1;\r\n  max-width: 420px;\r\n  white-space: initial;\r\n  word-wrap: break-word;\r\n  padding-right: 10px;\r\n`\r\n\r\nconst VoteCard = styled(DataCard)`\r\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\r\n  overflow: hidden;\r\n`\r\n\r\nconst WrapSmall = styled(RowBetween)`\r\n  margin-bottom: 1rem;\r\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\r\n    flex-wrap: wrap;\r\n  `};\r\n`\r\n\r\nconst TextButton = styled(ThemedText.DeprecatedMain)`\r\n  color: ${({ theme }) => theme.accent1};\r\n  :hover {\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n  }\r\n`\r\n\r\nconst AddressButton = styled.div`\r\n  padding: 2px 4px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.accent1};\r\n`\r\n\r\nconst StyledExternalLink = styled(ExternalLink)`\r\n  color: ${({ theme }) => theme.neutral1};\r\n`\r\n\r\nconst Header = styled(ThemedText.H1Small)`\r\n  color: white;\r\n  font-weight: 535;\r\n  font-size: inherit;\r\n  line-height: inherit;\r\n`\r\n\r\nexport default function Landing() {\r\n  const theme = useTheme()\r\n  const { account, chainId } = useWeb3React()\r\n\r\n  const [hideCancelled, setHideCancelled] = useState(true)\r\n\r\n  // toggle for showing delegation modal\r\n  const showDelegateModal = useModalIsOpen(ApplicationModal.DELEGATE)\r\n  const toggleDelegateModal = useToggleDelegateModal()\r\n\r\n  // get data to list all proposals\r\n  const { data: allProposals, loading: loadingProposals } = useAllProposalData()\r\n\r\n  // user data\r\n  const { loading: loadingAvailableVotes, votes: availableVotes } = useUserVotes()\r\n  const uniBalance: CurrencyAmount<Token> | undefined = useTokenBalance(\r\n    account ?? undefined,\r\n    chainId ? UNI[chainId] : undefined\r\n  )\r\n  const userDelegatee: string | undefined = useUserDelegatee()\r\n\r\n  // show delegation option if they have have a balance, but have not delegated\r\n  const showUnlockVoting = Boolean(\r\n    uniBalance && JSBI.notEqual(uniBalance.quotient, JSBI.BigInt(0)) && userDelegatee === ZERO_ADDRESS\r\n  )\r\n  return (\r\n    <>\r\n      <Trace page={InterfacePageName.VOTE_PAGE} shouldLogImpression>\r\n        <PageWrapper gap=\"lg\" justify=\"center\">\r\n          <DelegateModal\r\n            isOpen={showDelegateModal}\r\n            onDismiss={toggleDelegateModal}\r\n            title={showUnlockVoting ? <Trans>Unlock votes</Trans> : <Trans>Update delegation</Trans>}\r\n          />\r\n          <TopSection gap=\"md\">\r\n            <VoteCard>\r\n              <CardBGImage />\r\n              <CardNoise />\r\n              <CardSection>\r\n                <AutoColumn gap=\"md\">\r\n                  <RowBetween>\r\n                    <Header>\r\n                      <Trans>Uniswap governance</Trans>\r\n                    </Header>\r\n                  </RowBetween>\r\n                  <RowBetween>\r\n                    <ThemedText.DeprecatedWhite fontSize={14}>\r\n                      <Trans>\r\n                        UNI tokens represent voting shares in Uniswap governance. You can vote on each proposal yourself\r\n                        or delegate your votes to a third party.\r\n                      </Trans>\r\n                    </ThemedText.DeprecatedWhite>\r\n                  </RowBetween>\r\n                  <ExternalLink\r\n                    style={{\r\n                      color: theme.white,\r\n                      textDecoration: 'underline',\r\n                    }}\r\n                    href=\"https://uniswap.org/blog/uni\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <ThemedText.DeprecatedWhite fontSize={14}>\r\n                      <Trans>Read more about Uniswap governance</Trans>\r\n                    </ThemedText.DeprecatedWhite>\r\n                  </ExternalLink>\r\n                </AutoColumn>\r\n              </CardSection>\r\n              <CardBGImage />\r\n              <CardNoise />\r\n            </VoteCard>\r\n          </TopSection>\r\n          <TopSection gap=\"2px\">\r\n            <WrapSmall>\r\n              <ThemedText.DeprecatedMediumHeader style={{ margin: '0.5rem 0.5rem 0.5rem 0', flexShrink: 0 }}>\r\n                <Trans>Proposals</Trans>\r\n              </ThemedText.DeprecatedMediumHeader>\r\n              <AutoRow gap=\"6px\" justify=\"flex-end\">\r\n                {loadingProposals || loadingAvailableVotes ? <Loader /> : null}\r\n                {showUnlockVoting ? (\r\n                  <ButtonPrimary\r\n                    style={{ width: 'fit-content', height: '40px' }}\r\n                    padding=\"8px\"\r\n                    $borderRadius=\"8px\"\r\n                    onClick={toggleDelegateModal}\r\n                  >\r\n                    <Trans>Unlock voting</Trans>\r\n                  </ButtonPrimary>\r\n                ) : availableVotes && JSBI.notEqual(JSBI.BigInt(0), availableVotes?.quotient) ? (\r\n                  <ThemedText.DeprecatedBody fontWeight={535} mr=\"6px\">\r\n                    <Trans>\r\n                      <FormattedCurrencyAmount currencyAmount={availableVotes} /> Votes\r\n                    </Trans>\r\n                  </ThemedText.DeprecatedBody>\r\n                ) : uniBalance &&\r\n                  userDelegatee &&\r\n                  userDelegatee !== ZERO_ADDRESS &&\r\n                  JSBI.notEqual(JSBI.BigInt(0), uniBalance?.quotient) ? (\r\n                  <ThemedText.DeprecatedBody fontWeight={535} mr=\"6px\">\r\n                    <Trans>\r\n                      <FormattedCurrencyAmount currencyAmount={uniBalance} /> Votes\r\n                    </Trans>\r\n                  </ThemedText.DeprecatedBody>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <ButtonPrimary\r\n                  as={Link}\r\n                  to=\"/create-proposal\"\r\n                  style={{ width: 'fit-content', borderRadius: '8px', height: '40px' }}\r\n                  padding=\"8px\"\r\n                >\r\n                  <Trans>Create proposal</Trans>\r\n                </ButtonPrimary>\r\n              </AutoRow>\r\n            </WrapSmall>\r\n            {!showUnlockVoting && (\r\n              <RowBetween>\r\n                <div />\r\n                {userDelegatee && userDelegatee !== ZERO_ADDRESS ? (\r\n                  <RowFixed>\r\n                    <ThemedText.DeprecatedBody fontWeight={535} mr=\"4px\">\r\n                      <Trans>Delegated to:</Trans>\r\n                    </ThemedText.DeprecatedBody>\r\n                    <AddressButton>\r\n                      <StyledExternalLink\r\n                        href={getExplorerLink(1, userDelegatee, ExplorerDataType.ADDRESS)}\r\n                        style={{ margin: '0 4px' }}\r\n                      >\r\n                        {userDelegatee === account ? <Trans>Self</Trans> : shortenAddress(userDelegatee)}\r\n                      </StyledExternalLink>\r\n                      <TextButton onClick={toggleDelegateModal} style={{ marginLeft: '4px' }}>\r\n                        <Trans>(edit)</Trans>\r\n                      </TextButton>\r\n                    </AddressButton>\r\n                  </RowFixed>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </RowBetween>\r\n            )}\r\n\r\n            {allProposals?.length === 0 && <ProposalEmptyState />}\r\n\r\n            {allProposals?.length > 0 && (\r\n              <AutoColumn gap=\"md\">\r\n                <RowBetween></RowBetween>\r\n                <RowBetween>\r\n                  <ThemedText.DeprecatedMain>\r\n                    <Trans>Show cancelled</Trans>\r\n                  </ThemedText.DeprecatedMain>\r\n                  <Toggle\r\n                    isActive={!hideCancelled}\r\n                    toggle={() => setHideCancelled((hideCancelled) => !hideCancelled)}\r\n                  />\r\n                </RowBetween>\r\n              </AutoColumn>\r\n            )}\r\n\r\n            {allProposals\r\n              ?.slice(0)\r\n              ?.reverse()\r\n              ?.filter((p: ProposalData) => (hideCancelled ? p.status !== ProposalState.CANCELED : true))\r\n              ?.map((p: ProposalData) => {\r\n                return (\r\n                  <Proposal as={Link} to={`/vote/${p.governorIndex}/${p.id}`} key={`${p.governorIndex}${p.id}`}>\r\n                    <ProposalNumber>\r\n                      {p.governorIndex}.{p.id}\r\n                    </ProposalNumber>\r\n                    <ProposalTitle>{p.title}</ProposalTitle>\r\n                    <ProposalStatus status={p.status} />\r\n                  </Proposal>\r\n                )\r\n              })}\r\n          </TopSection>\r\n\r\n          <ThemedText.DeprecatedSubHeader color=\"text3\">\r\n            <Trans>A minimum threshold of 0.25% of the total UNI supply is required to submit proposals</Trans>\r\n          </ThemedText.DeprecatedSubHeader>\r\n        </PageWrapper>\r\n      </Trace>\r\n      <SwitchLocaleLink />\r\n    </>\r\n  )\r\n}\r\n","import { Trans } from 'i18n'\r\nimport { useState } from 'react'\r\nimport { ArrowUpCircle, X } from 'react-feather'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { CustomLightSpinner, ExternalLink, ThemedText } from 'theme/components'\r\nimport { useChainId } from 'wagmi'\r\n\r\nimport Circle from '../../assets/images/blue-loader.svg'\r\nimport { useExecuteCallback } from '../../state/governance/hooks'\r\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\r\nimport { ButtonPrimary } from '../Button'\r\nimport { AutoColumn, ColumnCenter } from '../Column'\r\nimport Modal from '../Modal'\r\nimport { RowBetween } from '../Row'\r\n\r\nconst ContentWrapper = styled(AutoColumn)`\r\n  width: 100%;\r\n  padding: 24px;\r\n`\r\n\r\nconst StyledClosed = styled(X)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ConfirmOrLoadingWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 24px;\r\n`\r\n\r\nconst ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 60px 0;\r\n`\r\n\r\ninterface ExecuteModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  proposalId?: string // id for the proposal to execute\r\n}\r\n\r\nexport default function ExecuteModal({ isOpen, onDismiss, proposalId }: ExecuteModalProps) {\r\n  const chainId = useChainId()\r\n  const executeCallback = useExecuteCallback()\r\n\r\n  // monitor call to help UI loading state\r\n  const [hash, setHash] = useState<string | undefined>()\r\n  const [attempting, setAttempting] = useState<boolean>(false)\r\n\r\n  // get theme for colors\r\n  const theme = useTheme()\r\n\r\n  // wrapper to reset state on modal close\r\n  function wrappedOnDismiss() {\r\n    setHash(undefined)\r\n    setAttempting(false)\r\n    onDismiss()\r\n  }\r\n\r\n  async function onExecute() {\r\n    setAttempting(true)\r\n\r\n    // if callback not returned properly ignore\r\n    if (!executeCallback) return\r\n\r\n    // try delegation and store hash\r\n    const hash = await executeCallback(proposalId)?.catch((error) => {\r\n      setAttempting(false)\r\n      console.log(error)\r\n    })\r\n\r\n    if (hash) {\r\n      setHash(hash)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={wrappedOnDismiss} maxHeight={90}>\r\n      {!attempting && !hash && (\r\n        <ContentWrapper gap=\"lg\">\r\n          <AutoColumn gap=\"lg\" justify=\"center\">\r\n            <RowBetween>\r\n              <ThemedText.DeprecatedMediumHeader fontWeight={535}>\r\n                <Trans>Execute proposal {{ proposalId }}</Trans>\r\n              </ThemedText.DeprecatedMediumHeader>\r\n              <StyledClosed onClick={wrappedOnDismiss} />\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <ThemedText.DeprecatedBody>\r\n                <Trans>Executing this proposal will enact the calldata on-chain.</Trans>\r\n              </ThemedText.DeprecatedBody>\r\n            </RowBetween>\r\n            <ButtonPrimary onClick={onExecute}>\r\n              <ThemedText.DeprecatedMediumHeader color=\"white\">\r\n                <Trans>Execute</Trans>\r\n              </ThemedText.DeprecatedMediumHeader>\r\n            </ButtonPrimary>\r\n          </AutoColumn>\r\n        </ContentWrapper>\r\n      )}\r\n      {attempting && !hash && (\r\n        <ConfirmOrLoadingWrapper>\r\n          <RowBetween>\r\n            <div />\r\n            <StyledClosed onClick={wrappedOnDismiss} />\r\n          </RowBetween>\r\n          <ConfirmedIcon>\r\n            <CustomLightSpinner src={Circle} alt=\"loader\" size=\"90px\" />\r\n          </ConfirmedIcon>\r\n          <AutoColumn gap=\"100px\" justify=\"center\">\r\n            <AutoColumn gap=\"md\" justify=\"center\">\r\n              <ThemedText.DeprecatedLargeHeader>\r\n                <Trans>Executing</Trans>\r\n              </ThemedText.DeprecatedLargeHeader>\r\n            </AutoColumn>\r\n            <ThemedText.DeprecatedSubHeader>\r\n              <Trans>Confirm this transaction in your wallet</Trans>\r\n            </ThemedText.DeprecatedSubHeader>\r\n          </AutoColumn>\r\n        </ConfirmOrLoadingWrapper>\r\n      )}\r\n      {hash && (\r\n        <ConfirmOrLoadingWrapper>\r\n          <RowBetween>\r\n            <div />\r\n            <StyledClosed onClick={wrappedOnDismiss} />\r\n          </RowBetween>\r\n          <ConfirmedIcon>\r\n            <ArrowUpCircle strokeWidth={0.5} size={90} color={theme.accent1} />\r\n          </ConfirmedIcon>\r\n          <AutoColumn gap=\"100px\" justify=\"center\">\r\n            <AutoColumn gap=\"md\" justify=\"center\">\r\n              <ThemedText.DeprecatedLargeHeader>\r\n                <Trans>Execution submitted</Trans>\r\n              </ThemedText.DeprecatedLargeHeader>\r\n            </AutoColumn>\r\n            {chainId && (\r\n              <ExternalLink\r\n                href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}\r\n                style={{ marginLeft: '4px' }}\r\n              >\r\n                <ThemedText.DeprecatedSubHeader>\r\n                  <Trans>View transaction on Explorer</Trans>\r\n                </ThemedText.DeprecatedSubHeader>\r\n              </ExternalLink>\r\n            )}\r\n          </AutoColumn>\r\n        </ConfirmOrLoadingWrapper>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n","import { Trans } from 'i18n'\r\nimport { useState } from 'react'\r\nimport { ArrowUpCircle, X } from 'react-feather'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { CustomLightSpinner, ExternalLink, ThemedText } from 'theme/components'\r\nimport { useChainId } from 'wagmi'\r\n\r\nimport Circle from '../../assets/images/blue-loader.svg'\r\nimport { useQueueCallback } from '../../state/governance/hooks'\r\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\r\nimport { ButtonPrimary } from '../Button'\r\nimport { AutoColumn, ColumnCenter } from '../Column'\r\nimport Modal from '../Modal'\r\nimport { RowBetween } from '../Row'\r\n\r\nconst ContentWrapper = styled(AutoColumn)`\r\n  width: 100%;\r\n  padding: 24px;\r\n`\r\n\r\nconst StyledClosed = styled(X)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ConfirmOrLoadingWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 24px;\r\n`\r\n\r\nconst ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 60px 0;\r\n`\r\n\r\ninterface QueueModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  proposalId?: string // id for the proposal to queue\r\n}\r\n\r\nexport default function QueueModal({ isOpen, onDismiss, proposalId }: QueueModalProps) {\r\n  const chainId = useChainId()\r\n  const queueCallback = useQueueCallback()\r\n\r\n  // monitor call to help UI loading state\r\n  const [hash, setHash] = useState<string | undefined>()\r\n  const [attempting, setAttempting] = useState<boolean>(false)\r\n\r\n  // get theme for colors\r\n  const theme = useTheme()\r\n\r\n  // wrapper to reset state on modal close\r\n  function wrappedOnDismiss() {\r\n    setHash(undefined)\r\n    setAttempting(false)\r\n    onDismiss()\r\n  }\r\n\r\n  async function onQueue() {\r\n    setAttempting(true)\r\n\r\n    // if callback not returned properly ignore\r\n    if (!queueCallback) return\r\n\r\n    // try delegation and store hash\r\n    const hash = await queueCallback(proposalId)?.catch((error) => {\r\n      setAttempting(false)\r\n      console.log(error)\r\n    })\r\n\r\n    if (hash) {\r\n      setHash(hash)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={wrappedOnDismiss} maxHeight={90}>\r\n      {!attempting && !hash && (\r\n        <ContentWrapper gap=\"lg\">\r\n          <AutoColumn gap=\"lg\" justify=\"center\">\r\n            <RowBetween>\r\n              <ThemedText.DeprecatedMediumHeader fontWeight={535}>\r\n                <Trans>Queue proposal {{ proposalId }}</Trans>\r\n              </ThemedText.DeprecatedMediumHeader>\r\n              <StyledClosed onClick={wrappedOnDismiss} />\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <ThemedText.DeprecatedBody>\r\n                <Trans>Adding this proposal to the queue will allow it to be executed, after a delay.</Trans>\r\n              </ThemedText.DeprecatedBody>\r\n            </RowBetween>\r\n            <ButtonPrimary onClick={onQueue}>\r\n              <ThemedText.DeprecatedMediumHeader color=\"white\">\r\n                <Trans>Queue</Trans>\r\n              </ThemedText.DeprecatedMediumHeader>\r\n            </ButtonPrimary>\r\n          </AutoColumn>\r\n        </ContentWrapper>\r\n      )}\r\n      {attempting && !hash && (\r\n        <ConfirmOrLoadingWrapper>\r\n          <RowBetween>\r\n            <div />\r\n            <StyledClosed onClick={wrappedOnDismiss} />\r\n          </RowBetween>\r\n          <ConfirmedIcon>\r\n            <CustomLightSpinner src={Circle} alt=\"loader\" size=\"90px\" />\r\n          </ConfirmedIcon>\r\n          <AutoColumn gap=\"100px\" justify=\"center\">\r\n            <AutoColumn gap=\"md\" justify=\"center\">\r\n              <ThemedText.DeprecatedLargeHeader>\r\n                <Trans>Queueing</Trans>\r\n              </ThemedText.DeprecatedLargeHeader>\r\n            </AutoColumn>\r\n            <ThemedText.DeprecatedSubHeader>\r\n              <Trans>Confirm this transaction in your wallet</Trans>\r\n            </ThemedText.DeprecatedSubHeader>\r\n          </AutoColumn>\r\n        </ConfirmOrLoadingWrapper>\r\n      )}\r\n      {hash && (\r\n        <ConfirmOrLoadingWrapper>\r\n          <RowBetween>\r\n            <div />\r\n            <StyledClosed onClick={wrappedOnDismiss} />\r\n          </RowBetween>\r\n          <ConfirmedIcon>\r\n            <ArrowUpCircle strokeWidth={0.5} size={90} color={theme.accent1} />\r\n          </ConfirmedIcon>\r\n          <AutoColumn gap=\"100px\" justify=\"center\">\r\n            <AutoColumn gap=\"md\" justify=\"center\">\r\n              <ThemedText.DeprecatedLargeHeader>\r\n                <Trans>Transaction submitted</Trans>\r\n              </ThemedText.DeprecatedLargeHeader>\r\n            </AutoColumn>\r\n            {chainId && (\r\n              <ExternalLink\r\n                href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}\r\n                style={{ marginLeft: '4px' }}\r\n              >\r\n                <ThemedText.DeprecatedSubHeader>\r\n                  <Trans>View transaction on Explorer</Trans>\r\n                </ThemedText.DeprecatedSubHeader>\r\n              </ExternalLink>\r\n            )}\r\n          </AutoColumn>\r\n        </ConfirmOrLoadingWrapper>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n","import { Trans } from 'i18n'\r\nimport { useState } from 'react'\r\nimport { ArrowUpCircle, X } from 'react-feather'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { CustomLightSpinner, ExternalLink, ThemedText } from 'theme/components'\r\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\r\nimport { useChainId } from 'wagmi'\r\n\r\nimport Circle from '../../assets/images/blue-loader.svg'\r\nimport { useUserVotes, useVoteCallback } from '../../state/governance/hooks'\r\nimport { VoteOption } from '../../state/governance/types'\r\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\r\nimport { ButtonPrimary } from '../Button'\r\nimport { AutoColumn, ColumnCenter } from '../Column'\r\nimport Modal from '../Modal'\r\nimport { RowBetween } from '../Row'\r\n\r\nconst ContentWrapper = styled(AutoColumn)`\r\n  width: 100%;\r\n  padding: 24px;\r\n`\r\n\r\nconst StyledClosed = styled(X)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ConfirmOrLoadingWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 24px;\r\n`\r\n\r\nconst ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 60px 0;\r\n`\r\n\r\ninterface VoteModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  voteOption?: VoteOption\r\n  proposalId?: string // id for the proposal to vote on\r\n}\r\n\r\nexport default function VoteModal({ isOpen, onDismiss, proposalId, voteOption }: VoteModalProps) {\r\n  const chainId = useChainId()\r\n  const voteCallback = useVoteCallback()\r\n  const { votes: availableVotes } = useUserVotes()\r\n\r\n  // monitor call to help UI loading state\r\n  const [hash, setHash] = useState<string | undefined>()\r\n  const [attempting, setAttempting] = useState<boolean>(false)\r\n\r\n  // get theme for colors\r\n  const theme = useTheme()\r\n\r\n  // wrapper to reset state on modal close\r\n  function wrappedOnDismiss() {\r\n    setHash(undefined)\r\n    setAttempting(false)\r\n    onDismiss()\r\n  }\r\n\r\n  async function onVote() {\r\n    setAttempting(true)\r\n\r\n    // if callback not returned properly ignore\r\n    if (!voteCallback || voteOption === undefined) return\r\n\r\n    // try delegation and store hash\r\n    const hash = await voteCallback(proposalId, voteOption)?.catch((error) => {\r\n      setAttempting(false)\r\n      console.log(error)\r\n    })\r\n\r\n    if (hash) {\r\n      setHash(hash)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={wrappedOnDismiss} maxHeight={90}>\r\n      {!attempting && !hash && (\r\n        <ContentWrapper gap=\"lg\">\r\n          <AutoColumn gap=\"lg\" justify=\"center\">\r\n            <RowBetween>\r\n              <ThemedText.DeprecatedMediumHeader fontWeight={535}>\r\n                {voteOption === VoteOption.Against ? (\r\n                  <Trans>Vote against proposal {{ proposalId }}</Trans>\r\n                ) : voteOption === VoteOption.For ? (\r\n                  <Trans>Vote for proposal {{ proposalId }}</Trans>\r\n                ) : (\r\n                  <Trans>Vote to abstain on proposal {{ proposalId }}</Trans>\r\n                )}\r\n              </ThemedText.DeprecatedMediumHeader>\r\n              <StyledClosed onClick={wrappedOnDismiss} />\r\n            </RowBetween>\r\n            <ThemedText.DeprecatedLargeHeader>\r\n              <Trans>{{ amt: formatCurrencyAmount(availableVotes, 4) }} Votes</Trans>\r\n            </ThemedText.DeprecatedLargeHeader>\r\n            <ButtonPrimary onClick={onVote}>\r\n              <ThemedText.DeprecatedMediumHeader color=\"white\">\r\n                {voteOption === VoteOption.Against ? (\r\n                  <Trans>Vote against proposal {{ proposalId }}</Trans>\r\n                ) : voteOption === VoteOption.For ? (\r\n                  <Trans>Vote for proposal {{ proposalId }}</Trans>\r\n                ) : (\r\n                  <Trans>Vote to abstain on proposal {{ proposalId }}</Trans>\r\n                )}\r\n              </ThemedText.DeprecatedMediumHeader>\r\n            </ButtonPrimary>\r\n          </AutoColumn>\r\n        </ContentWrapper>\r\n      )}\r\n      {attempting && !hash && (\r\n        <ConfirmOrLoadingWrapper>\r\n          <RowBetween>\r\n            <div />\r\n            <StyledClosed onClick={wrappedOnDismiss} />\r\n          </RowBetween>\r\n          <ConfirmedIcon>\r\n            <CustomLightSpinner src={Circle} alt=\"loader\" size=\"90px\" />\r\n          </ConfirmedIcon>\r\n          <AutoColumn gap=\"100px\" justify=\"center\">\r\n            <AutoColumn gap=\"md\" justify=\"center\">\r\n              <ThemedText.DeprecatedLargeHeader>\r\n                <Trans>Submitting vote</Trans>\r\n              </ThemedText.DeprecatedLargeHeader>\r\n            </AutoColumn>\r\n            <ThemedText.DeprecatedSubHeader>\r\n              <Trans>Confirm this transaction in your wallet</Trans>\r\n            </ThemedText.DeprecatedSubHeader>\r\n          </AutoColumn>\r\n        </ConfirmOrLoadingWrapper>\r\n      )}\r\n      {hash && (\r\n        <ConfirmOrLoadingWrapper>\r\n          <RowBetween>\r\n            <div />\r\n            <StyledClosed onClick={wrappedOnDismiss} />\r\n          </RowBetween>\r\n          <ConfirmedIcon>\r\n            <ArrowUpCircle strokeWidth={0.5} size={90} color={theme.accent1} />\r\n          </ConfirmedIcon>\r\n          <AutoColumn gap=\"100px\" justify=\"center\">\r\n            <AutoColumn gap=\"md\" justify=\"center\">\r\n              <ThemedText.DeprecatedLargeHeader>\r\n                <Trans>Transaction Submitted</Trans>\r\n              </ThemedText.DeprecatedLargeHeader>\r\n            </AutoColumn>\r\n            {chainId && (\r\n              <ExternalLink\r\n                href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}\r\n                style={{ marginLeft: '4px' }}\r\n              >\r\n                <ThemedText.DeprecatedSubHeader>\r\n                  <Trans>View transaction on Explorer</Trans>\r\n                </ThemedText.DeprecatedSubHeader>\r\n              </ExternalLink>\r\n            )}\r\n          </AutoColumn>\r\n        </ConfirmOrLoadingWrapper>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { InterfacePageName } from '@uniswap/analytics-events'\r\nimport { CurrencyAmount, Fraction, Token } from '@uniswap/sdk-core'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Trace } from 'analytics'\r\nimport ExecuteModal from 'components/vote/ExecuteModal'\r\nimport QueueModal from 'components/vote/QueueModal'\r\nimport { useActiveLocale } from 'hooks/useActiveLocale'\r\nimport useCurrentBlockTimestamp from 'hooks/useCurrentBlockTimestamp'\r\nimport { Trans } from 'i18n'\r\nimport JSBI from 'jsbi'\r\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\r\nimport ms from 'ms'\r\nimport { useState } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ExternalLink, StyledInternalLink, ThemedText } from 'theme/components'\r\n\r\nimport { NEVER_RELOAD } from '@uniswap/redux-multicall'\r\nimport { isAddress } from 'utilities/src/addresses'\r\nimport { ButtonPrimary } from '../../components/Button'\r\nimport { GrayCard } from '../../components/Card'\r\nimport { AutoColumn } from '../../components/Column'\r\nimport { RowBetween, RowFixed } from '../../components/Row'\r\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink'\r\nimport { CardSection, DataCard } from '../../components/earn/styled'\r\nimport DelegateModal from '../../components/vote/DelegateModal'\r\nimport VoteModal from '../../components/vote/VoteModal'\r\nimport {\r\n  AVERAGE_BLOCK_TIME_IN_SECS,\r\n  COMMON_CONTRACT_NAMES,\r\n  DEFAULT_AVERAGE_BLOCK_TIME_IN_SECS,\r\n} from '../../constants/governance'\r\nimport { ZERO_ADDRESS } from '../../constants/misc'\r\nimport { UNI } from '../../constants/tokens'\r\nimport {\r\n  useModalIsOpen,\r\n  useToggleDelegateModal,\r\n  useToggleExecuteModal,\r\n  useToggleQueueModal,\r\n  useToggleVoteModal,\r\n} from '../../state/application/hooks'\r\nimport { ApplicationModal } from '../../state/application/reducer'\r\nimport { useTokenBalance } from '../../state/connection/hooks'\r\nimport {\r\n  ProposalData,\r\n  ProposalState,\r\n  useProposalData,\r\n  useQuorum,\r\n  useUserDelegatee,\r\n  useUserVotesAsOfBlock,\r\n} from '../../state/governance/hooks'\r\nimport { VoteOption } from '../../state/governance/types'\r\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\r\nimport { ProposalStatus } from './styled'\r\n\r\nconst PageWrapper = styled(AutoColumn)`\r\n  padding-top: 68px;\r\n  width: 100%;\r\n\r\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\r\n    padding: 48px 8px 0px;\r\n  }\r\n\r\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\r\n    padding-top: 20px;\r\n  }\r\n`\r\n\r\nconst ProposalInfo = styled(AutoColumn)`\r\n  background: ${({ theme }) => theme.surface1};\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  position: relative;\r\n  max-width: 640px;\r\n  width: 100%;\r\n`\r\n\r\nconst ArrowWrapper = styled(StyledInternalLink)`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  height: 24px;\r\n  color: ${({ theme }) => theme.neutral1};\r\n\r\n  a {\r\n    color: ${({ theme }) => theme.neutral1};\r\n    text-decoration: none;\r\n  }\r\n  :hover {\r\n    text-decoration: none;\r\n  }\r\n`\r\nconst CardWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 12px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledDataCard = styled(DataCard)`\r\n  width: 100%;\r\n  background: none;\r\n  background-color: ${({ theme }) => theme.surface1};\r\n  height: fit-content;\r\n  z-index: 2;\r\n`\r\n\r\nconst ProgressWrapper = styled.div`\r\n  width: 100%;\r\n  margin-top: 1rem;\r\n  height: 4px;\r\n  border-radius: 4px;\r\n  background-color: ${({ theme }) => theme.surface2};\r\n  position: relative;\r\n`\r\n\r\nconst Progress = styled.div<{ status: 'for' | 'against'; percentageString?: string }>`\r\n  height: 4px;\r\n  border-radius: 4px;\r\n  background-color: ${({ theme, status }) => (status === 'for' ? theme.success : theme.critical)};\r\n  width: ${({ percentageString }) => percentageString ?? '0%'};\r\n`\r\n\r\nconst MarkDownWrapper = styled.div`\r\n  max-width: 640px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst WrapSmall = styled(RowBetween)`\r\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n  `};\r\n`\r\n\r\nconst DetailText = styled.div`\r\n  word-break: break-all;\r\n`\r\n\r\nconst ProposerAddressLink = styled(ExternalLink)`\r\n  word-break: break-all;\r\n`\r\n\r\nfunction getDateFromBlock(\r\n  targetBlock: number | undefined,\r\n  currentBlock: number | undefined,\r\n  averageBlockTimeInSeconds: number | undefined,\r\n  currentTimestamp: BigNumber | undefined\r\n): Date | undefined {\r\n  if (targetBlock && currentBlock && averageBlockTimeInSeconds && currentTimestamp) {\r\n    const date = new Date()\r\n    date.setTime(\r\n      currentTimestamp\r\n        .add(BigNumber.from(averageBlockTimeInSeconds).mul(BigNumber.from(targetBlock - currentBlock)))\r\n        .toNumber() * ms(`1s`)\r\n    )\r\n    return date\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport default function VotePage() {\r\n  // see https://github.com/remix-run/react-router/issues/8200#issuecomment-962520661\r\n  const { governorIndex, id } = useParams() as { governorIndex: string; id: string }\r\n  const parsedGovernorIndex = Number.parseInt(governorIndex)\r\n\r\n  const { chainId, account } = useWeb3React()\r\n\r\n  const quorumAmount = useQuorum(parsedGovernorIndex)\r\n\r\n  // get data for this specific proposal\r\n  const proposalData: ProposalData | undefined = useProposalData(parsedGovernorIndex, id)\r\n\r\n  // update vote option based on button interactions\r\n  const [voteOption, setVoteOption] = useState<VoteOption | undefined>(undefined)\r\n\r\n  // modal for casting votes\r\n  const showVoteModal = useModalIsOpen(ApplicationModal.VOTE)\r\n  const toggleVoteModal = useToggleVoteModal()\r\n\r\n  // toggle for showing delegation modal\r\n  const showDelegateModal = useModalIsOpen(ApplicationModal.DELEGATE)\r\n  const toggleDelegateModal = useToggleDelegateModal()\r\n\r\n  // toggle for showing queue modal\r\n  const showQueueModal = useModalIsOpen(ApplicationModal.QUEUE)\r\n  const toggleQueueModal = useToggleQueueModal()\r\n\r\n  // toggle for showing execute modal\r\n  const showExecuteModal = useModalIsOpen(ApplicationModal.EXECUTE)\r\n  const toggleExecuteModal = useToggleExecuteModal()\r\n\r\n  // get and format date from data\r\n  const currentTimestamp = useCurrentBlockTimestamp(NEVER_RELOAD)\r\n  const currentBlock = useBlockNumber()\r\n  const startDate = getDateFromBlock(\r\n    proposalData?.startBlock,\r\n    currentBlock,\r\n    (chainId && AVERAGE_BLOCK_TIME_IN_SECS[chainId]) ?? DEFAULT_AVERAGE_BLOCK_TIME_IN_SECS,\r\n    currentTimestamp\r\n  )\r\n  const endDate = getDateFromBlock(\r\n    proposalData?.endBlock,\r\n    currentBlock,\r\n    (chainId && AVERAGE_BLOCK_TIME_IN_SECS[chainId]) ?? DEFAULT_AVERAGE_BLOCK_TIME_IN_SECS,\r\n    currentTimestamp\r\n  )\r\n  const now = new Date()\r\n  const locale = useActiveLocale()\r\n  const dateFormat: Intl.DateTimeFormatOptions = {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    timeZoneName: 'short',\r\n  }\r\n  // convert the eta to milliseconds before it's a date\r\n  const eta = proposalData?.eta ? new Date(proposalData.eta.mul(ms(`1s`)).toNumber()) : undefined\r\n\r\n  // get total votes and format percentages for UI\r\n  const totalVotes = proposalData?.forCount?.add(proposalData.againstCount)\r\n  const forPercentage = totalVotes\r\n    ? proposalData?.forCount?.asFraction?.divide(totalVotes.asFraction)?.multiply(100)\r\n    : undefined\r\n  const againstPercentage = forPercentage ? new Fraction(100).subtract(forPercentage) : undefined\r\n\r\n  // only count available votes as of the proposal start block\r\n  const availableVotes: CurrencyAmount<Token> | undefined = useUserVotesAsOfBlock(proposalData?.startBlock ?? undefined)\r\n\r\n  // only show voting if user has > 0 votes at proposal start block and proposal is active,\r\n  const showVotingButtons =\r\n    availableVotes &&\r\n    JSBI.greaterThan(availableVotes.quotient, JSBI.BigInt(0)) &&\r\n    proposalData &&\r\n    proposalData.status === ProposalState.ACTIVE\r\n\r\n  // we only show the button if there's an account connected and the proposal state is correct\r\n  const showQueueButton = account && proposalData?.status === ProposalState.SUCCEEDED\r\n\r\n  // we only show the button if there's an account connected and the proposal state is correct\r\n  const showExecuteButton = account && proposalData?.status === ProposalState.QUEUED\r\n\r\n  const uniBalance: CurrencyAmount<Token> | undefined = useTokenBalance(\r\n    account ?? undefined,\r\n    chainId ? UNI[chainId] : undefined\r\n  )\r\n  const userDelegatee: string | undefined = useUserDelegatee()\r\n\r\n  // in blurb link to home page if they are able to unlock\r\n  const showLinkForUnlock = Boolean(\r\n    uniBalance && JSBI.notEqual(uniBalance.quotient, JSBI.BigInt(0)) && userDelegatee === ZERO_ADDRESS\r\n  )\r\n\r\n  // show links in propsoal details if content is an address\r\n  // if content is contract with common name, replace address with common name\r\n  const linkIfAddress = (content: string) => {\r\n    if (isAddress(content) && chainId) {\r\n      const commonName = COMMON_CONTRACT_NAMES[chainId]?.[content] ?? content\r\n      return (\r\n        <ExternalLink href={getExplorerLink(chainId, content, ExplorerDataType.ADDRESS)}>{commonName}</ExternalLink>\r\n      )\r\n    }\r\n    return <span>{content}</span>\r\n  }\r\n\r\n  function MarkdownImage({ ...rest }) {\r\n    return <img {...rest} style={{ width: '100%', height: '100$', objectFit: 'cover' }} alt=\"\" />\r\n  }\r\n\r\n  return (\r\n    <Trace page={InterfacePageName.VOTE_PAGE} shouldLogImpression>\r\n      <>\r\n        <PageWrapper gap=\"lg\" justify=\"center\">\r\n          <VoteModal\r\n            isOpen={showVoteModal}\r\n            onDismiss={toggleVoteModal}\r\n            proposalId={proposalData?.id}\r\n            voteOption={voteOption}\r\n          />\r\n          <DelegateModal\r\n            isOpen={showDelegateModal}\r\n            onDismiss={toggleDelegateModal}\r\n            title={<Trans>Unlock votes</Trans>}\r\n          />\r\n          <QueueModal isOpen={showQueueModal} onDismiss={toggleQueueModal} proposalId={proposalData?.id} />\r\n          <ExecuteModal isOpen={showExecuteModal} onDismiss={toggleExecuteModal} proposalId={proposalData?.id} />\r\n          <ProposalInfo gap=\"lg\" justify=\"start\">\r\n            <RowBetween style={{ width: '100%' }}>\r\n              <ArrowWrapper to=\"/vote\">\r\n                <Trans>\r\n                  <ArrowLeft size={20} /> All Proposals\r\n                </Trans>\r\n              </ArrowWrapper>\r\n              {proposalData && <ProposalStatus status={proposalData.status} />}\r\n            </RowBetween>\r\n            <AutoColumn gap=\"10px\" style={{ width: '100%' }}>\r\n              <ThemedText.DeprecatedLargeHeader style={{ marginBottom: '.5rem' }}>\r\n                {proposalData?.title}\r\n              </ThemedText.DeprecatedLargeHeader>\r\n              <RowBetween>\r\n                <ThemedText.DeprecatedMain>\r\n                  {startDate && startDate > now ? (\r\n                    <Trans>Voting starts approximately {{ date: startDate.toLocaleString(locale, dateFormat) }}</Trans>\r\n                  ) : null}\r\n                </ThemedText.DeprecatedMain>\r\n              </RowBetween>\r\n              <RowBetween>\r\n                <ThemedText.DeprecatedMain>\r\n                  {endDate &&\r\n                    (endDate < now ? (\r\n                      <Trans>Voting ended {{ date: endDate.toLocaleString(locale, dateFormat) }}</Trans>\r\n                    ) : (\r\n                      <Trans>Voting ends approximately {{ date: endDate.toLocaleString(locale, dateFormat) }}</Trans>\r\n                    ))}\r\n                </ThemedText.DeprecatedMain>\r\n              </RowBetween>\r\n              {proposalData && proposalData.status === ProposalState.ACTIVE && !showVotingButtons && (\r\n                <GrayCard>\r\n                  <ThemedText.DeprecatedBlack>\r\n                    <Trans>\r\n                      Only UNI votes that were self delegated or delegated to another address before block{' '}\r\n                      {{ startBlock: proposalData.startBlock }} are eligible for voting.\r\n                    </Trans>{' '}\r\n                    {showLinkForUnlock && (\r\n                      <span>\r\n                        <Trans>\r\n                          <StyledInternalLink to=\"/vote\">Unlock voting</StyledInternalLink> to prepare for the next\r\n                          proposal.\r\n                        </Trans>\r\n                      </span>\r\n                    )}\r\n                  </ThemedText.DeprecatedBlack>\r\n                </GrayCard>\r\n              )}\r\n            </AutoColumn>\r\n            {showVotingButtons && (\r\n              <RowFixed style={{ width: '100%', gap: '12px' }}>\r\n                <ButtonPrimary\r\n                  padding=\"8px\"\r\n                  $borderRadius=\"8px\"\r\n                  onClick={() => {\r\n                    setVoteOption(VoteOption.For)\r\n                    toggleVoteModal()\r\n                  }}\r\n                >\r\n                  <Trans>Vote for</Trans>\r\n                </ButtonPrimary>\r\n                <ButtonPrimary\r\n                  padding=\"8px\"\r\n                  $borderRadius=\"8px\"\r\n                  onClick={() => {\r\n                    setVoteOption(VoteOption.Against)\r\n                    toggleVoteModal()\r\n                  }}\r\n                >\r\n                  <Trans>Vote against</Trans>\r\n                </ButtonPrimary>\r\n              </RowFixed>\r\n            )}\r\n            {showQueueButton && (\r\n              <RowFixed style={{ width: '100%', gap: '12px' }}>\r\n                <ButtonPrimary\r\n                  padding=\"8px\"\r\n                  $borderRadius=\"8px\"\r\n                  onClick={() => {\r\n                    toggleQueueModal()\r\n                  }}\r\n                >\r\n                  <Trans>Queue</Trans>\r\n                </ButtonPrimary>\r\n              </RowFixed>\r\n            )}\r\n            {showExecuteButton && (\r\n              <>\r\n                {eta && (\r\n                  <RowBetween>\r\n                    <ThemedText.DeprecatedBlack>\r\n                      <Trans>\r\n                        This proposal may be executed after {{ eta: eta.toLocaleString(locale, dateFormat) }}.\r\n                      </Trans>\r\n                    </ThemedText.DeprecatedBlack>\r\n                  </RowBetween>\r\n                )}\r\n                <RowFixed style={{ width: '100%', gap: '12px' }}>\r\n                  <ButtonPrimary\r\n                    padding=\"8px\"\r\n                    $borderRadius=\"8px\"\r\n                    onClick={() => {\r\n                      toggleExecuteModal()\r\n                    }}\r\n                    // can't execute until the eta has arrived\r\n                    disabled={!currentTimestamp || !proposalData?.eta || currentTimestamp.lt(proposalData.eta)}\r\n                  >\r\n                    <Trans>Execute</Trans>\r\n                  </ButtonPrimary>\r\n                </RowFixed>\r\n              </>\r\n            )}\r\n            <CardWrapper>\r\n              <StyledDataCard>\r\n                <CardSection>\r\n                  <AutoColumn gap=\"md\">\r\n                    <WrapSmall>\r\n                      <ThemedText.DeprecatedBlack fontWeight={535}>\r\n                        <Trans>For</Trans>\r\n                      </ThemedText.DeprecatedBlack>\r\n                      {proposalData && (\r\n                        <ThemedText.DeprecatedBlack fontWeight={535}>\r\n                          {proposalData.forCount.toFixed(0, { groupSeparator: ',' })}\r\n                          {quorumAmount && (\r\n                            <span style={{ fontWeight: 485 }}>{` / ${quorumAmount.toExact({\r\n                              groupSeparator: ',',\r\n                            })}`}</span>\r\n                          )}\r\n                        </ThemedText.DeprecatedBlack>\r\n                      )}\r\n                    </WrapSmall>\r\n                  </AutoColumn>\r\n                  <ProgressWrapper>\r\n                    <Progress\r\n                      status=\"for\"\r\n                      percentageString={\r\n                        proposalData?.forCount.greaterThan(0) ? `${forPercentage?.toFixed(0) ?? 0}%` : '0%'\r\n                      }\r\n                    />\r\n                  </ProgressWrapper>\r\n                </CardSection>\r\n              </StyledDataCard>\r\n              <StyledDataCard>\r\n                <CardSection>\r\n                  <AutoColumn gap=\"md\">\r\n                    <WrapSmall>\r\n                      <ThemedText.DeprecatedBlack fontWeight={535}>\r\n                        <Trans>Against</Trans>\r\n                      </ThemedText.DeprecatedBlack>\r\n                      {proposalData && (\r\n                        <ThemedText.DeprecatedBlack fontWeight={535}>\r\n                          {proposalData.againstCount.toFixed(0, { groupSeparator: ',' })}\r\n                        </ThemedText.DeprecatedBlack>\r\n                      )}\r\n                    </WrapSmall>\r\n                  </AutoColumn>\r\n                  <ProgressWrapper>\r\n                    <Progress\r\n                      status=\"against\"\r\n                      percentageString={\r\n                        proposalData?.againstCount?.greaterThan(0) ? `${againstPercentage?.toFixed(0) ?? 0}%` : '0%'\r\n                      }\r\n                    />\r\n                  </ProgressWrapper>\r\n                </CardSection>\r\n              </StyledDataCard>\r\n            </CardWrapper>\r\n            <AutoColumn gap=\"md\">\r\n              <ThemedText.DeprecatedMediumHeader fontWeight={535}>\r\n                <Trans>Details</Trans>\r\n              </ThemedText.DeprecatedMediumHeader>\r\n              {proposalData?.details?.map((d, i) => {\r\n                return (\r\n                  <DetailText key={i}>\r\n                    {i + 1}: {linkIfAddress(d.target)}.{d.functionSig}(\r\n                    {d.callData.split(',').map((content, i) => {\r\n                      return (\r\n                        <span key={i}>\r\n                          {linkIfAddress(content)}\r\n                          {d.callData.split(',').length - 1 === i ? '' : ','}\r\n                        </span>\r\n                      )\r\n                    })}\r\n                    )\r\n                  </DetailText>\r\n                )\r\n              })}\r\n            </AutoColumn>\r\n            <AutoColumn gap=\"md\">\r\n              <ThemedText.DeprecatedMediumHeader fontWeight={535}>\r\n                <Trans>Description</Trans>\r\n              </ThemedText.DeprecatedMediumHeader>\r\n              <MarkDownWrapper>\r\n                <ReactMarkdown\r\n                  source={proposalData?.description}\r\n                  renderers={{\r\n                    image: MarkdownImage,\r\n                  }}\r\n                />\r\n              </MarkDownWrapper>\r\n            </AutoColumn>\r\n            <AutoColumn gap=\"md\">\r\n              <ThemedText.DeprecatedMediumHeader fontWeight={535}>\r\n                <Trans>Proposer</Trans>\r\n              </ThemedText.DeprecatedMediumHeader>\r\n              <ProposerAddressLink\r\n                href={\r\n                  proposalData?.proposer && chainId\r\n                    ? getExplorerLink(chainId, proposalData?.proposer, ExplorerDataType.ADDRESS)\r\n                    : ''\r\n                }\r\n              >\r\n                <ReactMarkdown source={proposalData?.proposer} />\r\n              </ProposerAddressLink>\r\n            </AutoColumn>\r\n          </ProposalInfo>\r\n        </PageWrapper>\r\n        <SwitchLocaleLink />\r\n      </>\r\n    </Trace>\r\n  )\r\n}\r\n","import CreateProposal from 'pages/CreateProposal'\r\nimport { Route, Routes } from 'react-router-dom'\r\n\r\nimport Landing from './Landing'\r\nimport VotePage from './VotePage'\r\n\r\nexport default function Vote() {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Landing />} />\r\n      <Route path=\":governorIndex/:id\" element={<VotePage />} />\r\n      <Route path=\"create-proposal\" element={<CreateProposal />} />\r\n    </Routes>\r\n  )\r\n}\r\n","export enum VoteOption {\r\n  Against,\r\n  For,\r\n  Abstain,\r\n}\r\n","import { Currency, CurrencyAmount, Price } from '@uniswap/sdk-core'\r\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from 'constants/locales'\r\n\r\ninterface FormatLocaleNumberArgs {\r\n  number: CurrencyAmount<Currency> | Price<Currency, Currency> | number\r\n  locale?: string | null\r\n  options?: Intl.NumberFormatOptions\r\n  sigFigs?: number\r\n  fixedDecimals?: number\r\n}\r\n\r\nexport default function formatLocaleNumber({\r\n  number,\r\n  locale,\r\n  sigFigs,\r\n  fixedDecimals,\r\n  options = {},\r\n}: FormatLocaleNumberArgs): string {\r\n  let localeArg: string | string[]\r\n  if (!locale || (locale && !SUPPORTED_LOCALES.includes(locale))) {\r\n    localeArg = DEFAULT_LOCALE\r\n  } else {\r\n    localeArg = [locale, DEFAULT_LOCALE]\r\n  }\r\n  options.minimumFractionDigits = options.minimumFractionDigits || fixedDecimals\r\n  options.maximumFractionDigits = options.maximumFractionDigits || fixedDecimals\r\n\r\n  // Fixed decimals should override significant figures.\r\n  options.maximumSignificantDigits = options.maximumSignificantDigits || fixedDecimals ? undefined : sigFigs\r\n\r\n  let numberString: number\r\n  if (typeof number === 'number') {\r\n    numberString = fixedDecimals ? parseFloat(number.toFixed(fixedDecimals)) : number\r\n  } else {\r\n    const baseString = parseFloat(number.toSignificant(sigFigs))\r\n    numberString = fixedDecimals ? parseFloat(baseString.toFixed(fixedDecimals)) : baseString\r\n  }\r\n\r\n  return numberString.toLocaleString(localeArg, options)\r\n}\r\n","import { Currency, CurrencyAmount, Fraction } from '@uniswap/sdk-core'\r\nimport { DEFAULT_LOCALE, SupportedLocale } from 'constants/locales'\r\nimport JSBI from 'jsbi'\r\nimport formatLocaleNumber from 'lib/utils/formatLocaleNumber'\r\n\r\nexport function formatCurrencyAmount(\r\n  amount: CurrencyAmount<Currency> | undefined,\r\n  sigFigs: number,\r\n  locale: SupportedLocale = DEFAULT_LOCALE,\r\n  fixedDecimals?: number\r\n): string {\r\n  if (!amount) {\r\n    return '-'\r\n  }\r\n\r\n  if (JSBI.equal(amount.quotient, JSBI.BigInt(0))) {\r\n    return '0'\r\n  }\r\n\r\n  if (amount.divide(amount.decimalScale).lessThan(new Fraction(1, 100000))) {\r\n    return `<${formatLocaleNumber({ number: 0.00001, locale })}`\r\n  }\r\n\r\n  return formatLocaleNumber({ number: amount, locale, sigFigs, fixedDecimals })\r\n}\r\n"],"names":["InputPanel","styled","div","flexColumnNoWrap","theme","surface1","ContainerRow","error","critical","surface3","InputContainer","Input","input","neutral1","neutral3","AddressInputPanel","id","className","label","placeholder","value","onChange","chainId","useChainId","useTheme","address","loading","name","useENS","handleInput","useCallback","event","withoutSpaces","target","replace","Boolean","length","AutoColumn","gap","RowBetween","ThemedText","DeprecatedBlack","color","neutral2","fontWeight","fontSize","Trans","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","style","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","t","pattern","hideInput","surface2","Container","disabled","CurrencySelect","ButtonGray","selected","accent1","deprecated_shallowShadow","white","darken","visible","pointerEvents","InputRow","flexRowNoWrap","LabelRow","FiatRow","Aligner","span","StyledDropDown","DropDown","StyledTokenName","active","BREAKPOINTS","sm","StyledBalanceMax","button","accent2","StyledNumericalInput","NumericalInput","loadingOpacityMixin","StyledPrefetchBalancesWrapper","PrefetchBalancesWrapper","$fullWidth","CurrencyInputPanel","onUserInput","onMax","showMaxButton","onCurrencySelect","currency","otherCurrency","currencySearchFilters","showCurrencyAmount","renderBalance","fiatValue","hideBalance","pair","locked","rest","modalOpen","setModalOpen","useState","account","useWeb3React","chainAllowed","useIsSupportedChainId","selectedCurrencyBalance","useCurrencyBalance","undefined","formatCurrencyAmount","useFormatter","handleDismissSearch","padding","borderRadius","$loading","maxDecimals","decimals","onClick","RowFixed","marginRight","DoubleCurrencyLogo","currencies","token0","token1","size","CurrencyLogo","symbol","slice","LoadingOpacityContainer","FiatValue","height","DeprecatedBody","display","cursor","amount","NumberType","TokenNonTx","TraceEvent","events","BrowserEvent","SwapEventName","SWAP_MAX_TOKEN_AMOUNT_SELECTED","element","InterfaceElementName","MAX_TOKEN_AMOUNT_BUTTON","CurrencySearchModal","isOpen","onDismiss","selectedCurrency","otherSelectedCurrency","CURRENCY_AMOUNT_MIN","Fraction","JSBI","FormattedCurrencyAmount","currencyAmount","significantDigits","equalTo","greaterThan","toSignificant","DataCard","CardBGImage","uImage","desaturate","CardBGImageSmaller","xlUnicorn","CardNoise","noise","CardSection","Break","nameOrAddress","validated","isAddress","reverseLookup","useENSName","lookup","useENSAddress","useMemo","ENSName","BodyWrapper","main","$margin","$maxWidth","Z_INDEX","default","AppBody","props","Wrapper","ClickableText","Text","MaxButton","deprecated_mediaWidth","deprecated_upToSmall","Dots","LoadingRows","BaseLoadingRows","COMMON_CONTRACT_NAMES","ChainId","MAINNET","UNI_ADDRESSES","TIMELOCK_ADDRESSES","GOVERNANCE_ALPHA_V0_ADDRESSES","GOVERNANCE_ALPHA_V1_ADDRESSES","GOVERNANCE_BRAVO_ADDRESSES","DEFAULT_AVERAGE_BLOCK_TIME_IN_SECS","AVERAGE_BLOCK_TIME_IN_SECS","LATEST_GOVERNOR_INDEX","POLYGON_PROPOSAL_TITLE","UNISWAP_GRANTS_PROPOSAL_DESCRIPTION","UNISWAP_GRANTS_START_BLOCK","BRAVO_START_BLOCK","ONE_BIP_START_BLOCK","POLYGON_START_BLOCK","MOONBEAN_START_BLOCK","LogsState","INVALID","LOADING","SYNCING","ERROR","SYNCED","useGovernanceBravoContract","useContract","GOVERNOR_BRAVO_ABI","useLatestGovernanceContract","useUniContract","uniAddress","UNI","UniJSON","ProposalState","UNDETERMINED","PENDING","ACTIVE","CANCELED","DEFEATED","SUCCEEDED","QUEUED","EXPIRED","EXECUTED","GovernanceInterface","Interface","GovernorAlphaJSON","useProposalCount","contract","result","useSingleCallResult","toNumber","FOUR_BYTES_DIR","useFormattedProposalCreatedLogs","indices","fromBlock","toBlock","useLogsResult","filter","blockNumber","useBlockNumber","logs","useAppSelector","state","dispatch","useAppDispatch","useEffect","addListener","removeListener","filterToKey","results","isHistoricalLog","useLogs","filters","ProposalCreated","map","log","parseLog","args","parsed","flat","some","i","description","startBlock","parseInt","toString","onError","Utf8ErrorFuncs","U2018","U2026","reason","offset","bytes","output","Utf8ErrorReason","UNEXPECTED_CONTINUE","charCode","reverse","push","JSON","parse","toUtf8String","details","targets","signature","signatures","types","calldata","calldatas","fourbyte","sig","Error","substring","split","functionSig","callData","defaultAbiCoder","decode","join","V0_PROPOSAL_IDS","V1_PROPOSAL_IDS","countToIndices","count","skip","Array","fill","_","useAllProposalData","gov0","gov1","gov2","proposalCount0","proposalCount1","proposalCount2","gov0ProposalIndexes","gov1ProposalIndexes","gov2ProposalIndexes","proposalsV0","useSingleContractMultipleData","proposalsV1","proposalsV2","proposalStatesV0","proposalStatesV1","proposalStatesV2","formattedLogsV0","formattedLogsV1","formattedLogsV2","uni","proposalsCallData","proposalStatesCallData","formattedLogs","p","data","proposal","title","proposer","status","forCount","CurrencyAmount","fromRawAmount","forVotes","againstCount","againstVotes","endBlock","eta","governorIndex","useProposalData","find","useUserDelegatee","uniContract","useUserVotes","votes","ProposalAction","TRANSFER_TOKEN","APPROVE_TOKEN","ContentWrapper","Column","ActionSelectorHeader","ActionDropdown","ButtonDropdown","ProposalActionSelectorFlex","ProposalActionSelectorContainer","ProposalActionSelector","proposalAction","ProposalActionSelectorModal","onProposalActionSelect","handleProposalActionSelect","Modal","PaddedColumn","CloseIcon","Separator","MenuItem","ProposalActionDetailField","CURRENCY","ProposalActionDetailContainer","CREATE_PROPOSAL_CURRENCY_SEARCH_FILTERS","disableNonToken","showCommonBases","ProposalActionDetail","toAddress","onAmountInput","onToAddressInput","proposalActionsData","field","TextAreaInput","textarea","ResizingTextArea","memo","inputRef","useRef","document","createElement","current","scrollHeight","minHeight","ref","displayName","ProposalEditorHeader","ProposalTitle","TextInput","ProposalEditorContainer","ProposalEditor","body","onTitleInput","onBodyInput","hr","ConfirmOrLoadingWrapper","ConfirmedIcon","ColumnCenter","LoadingView","children","CustomLightSpinner","src","Circle","alt","justify","DeprecatedSubHeader","SubmittedView","hash","ArrowUpCircle","strokeWidth","TRANSACTION","marginLeft","ProposalSubmissionModal","textAlign","ButtonPrimary","as","Link","to","margin","DeprecatedLargeHeader","PageWrapper","breakpoint","md","BackArrow","ArrowLeft","Nav","HeaderText","H1Small","CreateProposalButton","proposalThreshold","hasActiveOrPendingProposal","hasEnoughVote","isFormInvalid","handleCreateProposal","formattedProposalThreshold","quotient","toLocaleString","ButtonError","marginTop","CreateProposalWrapper","AutonomousProposalCTA","CreateProposal","latestProposalData","latestProposalId","res","latestGovernanceContract","useLatestProposalId","availableVotes","useProposalThreshold","setHash","attempting","setAttempting","setProposalAction","toAddressValue","setToAddressValue","currencyValue","setCurrencyValue","amountValue","setAmountValue","titleValue","setTitleValue","bodyValue","setBodyValue","handleActionSelectorClick","handleActionChange","handleDismissActionSelector","handleDismissSubmissionModal","handleToAddressInput","handleCurrencySelect","handleAmountInput","handleTitleInput","handleBodyInput","isToken","createProposalCallback","addTransaction","useTransactionAdder","createProposalData","values","estimateGas","propose","then","estimatedGasLimit","gasLimit","calculateGasMargin","response","TransactionType","SUBMIT_PROPOSAL","useCreateProposalCallback","tokenAmount","tryParseCurrencyAmount","getAddress","encode","catch","Trace","page","InterfacePageName","VOTE_PAGE","shouldLogImpression","BlueCard","DeprecatedLink","strong","StyledClosed","X","TextButton","DelegateModal","usingDelegate","setUsingDelegate","typed","setTyped","activeDelegate","parsedAddress","uniBalance","useTokenBalance","delegateCallback","provider","delegatee","delegate","DELEGATE","useDelegateCallback","wrappedOnDismiss","onDelegate","console","maxHeight","DeprecatedMediumHeader","stroke","val","DeprecatedMain","EmptyProposals","Sub","EmptyState","HeaderContent","SubHeaderContent","marginBottom","ProposalEmptyState","handleColorType","success","StatusText","StyledProposalContainer","ProposalStatus","TopSection","Proposal","Button","ProposalNumber","opacity","hover","VoteCard","WrapSmall","AddressButton","StyledExternalLink","Header","Landing","allProposals","hideCancelled","setHideCancelled","showDelegateModal","useModalIsOpen","ApplicationModal","toggleDelegateModal","useToggleDelegateModal","loadingProposals","loadingAvailableVotes","userDelegatee","showUnlockVoting","ZERO_ADDRESS","DeprecatedWhite","textDecoration","flexShrink","AutoRow","Loader","width","$borderRadius","mr","shortenAddress","Toggle","isActive","toggle","SwitchLocaleLink","ExecuteModal","proposalId","executeCallback","execute","EXECUTE","governorAddress","useExecuteCallback","onExecute","QueueModal","queueCallback","queue","QUEUE","useQueueCallback","onQueue","VoteModal","voteOption","voteCallback","VoteOption","Against","For","castVote","VOTE","decision","useVoteCallback","onVote","amt","ProposalInfo","ArrowWrapper","StyledInternalLink","CardWrapper","StyledDataCard","ProgressWrapper","Progress","percentageString","MarkDownWrapper","DetailText","ProposerAddressLink","getDateFromBlock","targetBlock","currentBlock","averageBlockTimeInSeconds","currentTimestamp","date","Date","setTime","add","BigNumber","from","mul","ms","VotePage","proposalData","forPercentage","againstPercentage","useParams","parsedGovernorIndex","Number","quorumAmount","quorumVotes","useQuorum","setVoteOption","showVoteModal","toggleVoteModal","useToggleVoteModal","showQueueModal","toggleQueueModal","useToggleQueueModal","showExecuteModal","toggleExecuteModal","useToggleExecuteModal","useCurrentBlockTimestamp","NEVER_RELOAD","startDate","endDate","now","locale","useActiveLocale","dateFormat","year","month","day","hour","minute","timeZoneName","totalVotes","asFraction","divide","multiply","subtract","block","useUserVotesAsOfBlock","showVotingButtons","showQueueButton","showExecuteButton","showLinkForUnlock","linkIfAddress","content","commonName","GrayCard","lt","toFixed","groupSeparator","toExact","d","ReactMarkdown","source","renderers","image","img","objectFit","Vote","Routes","Route","path","Abstain","formatLocaleNumber","number","sigFigs","fixedDecimals","options","localeArg","numberString","SUPPORTED_LOCALES","includes","DEFAULT_LOCALE","minimumFractionDigits","maximumFractionDigits","maximumSignificantDigits","parseFloat","baseString","decimalScale","lessThan"],"sourceRoot":""}