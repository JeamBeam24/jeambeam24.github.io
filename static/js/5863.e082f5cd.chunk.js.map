{"version":3,"file":"static/js/5863.e082f5cd.chunk.js","mappings":"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","sources":["components/NavigationTabs/index.tsx","components/Slider/index.tsx","components/earn/styled.tsx","hooks/useDebouncedChangeHandler.tsx","pages/AppBody.tsx","state/burn/v3/hooks.tsx","pages/RemoveLiquidity/styled.tsx","pages/RemoveLiquidity/V3.tsx","utils/unwrappedToken.ts"],"sourcesContent":["import { Percent } from '@uniswap/sdk-core'\r\nimport SettingsTab from 'components/Settings'\r\nimport { Trans } from 'i18n'\r\nimport { ReactNode } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Box } from 'rebass'\r\nimport { useAppDispatch } from 'state/hooks'\r\nimport { resetMintState } from 'state/mint/actions'\r\nimport { resetMintState as resetMintV3State } from 'state/mint/v3/actions'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { flexRowNoWrap } from 'theme/styles'\r\nimport { useChainId } from 'wagmi'\r\n\r\nimport { RowBetween } from '../Row'\r\n\r\nconst Tabs = styled.div`\r\n  ${flexRowNoWrap};\r\n  align-items: center;\r\n  border-radius: 3rem;\r\n  justify-content: space-evenly;\r\n`\r\n\r\nconst StyledLink = styled(Link)<{ flex?: string }>`\r\n  flex: ${({ flex }) => flex ?? 'none'};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\r\n    flex: none;\r\n    margin-right: 10px;\r\n  `};\r\n`\r\n\r\nconst FindPoolTabsText = styled(ThemedText.H1Small)`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`\r\n\r\nconst StyledArrowLeft = styled(ArrowLeft)`\r\n  color: ${({ theme }) => theme.neutral1};\r\n`\r\n\r\nexport function FindPoolTabs({ origin }: { origin: string }) {\r\n  return (\r\n    <Tabs>\r\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem', position: 'relative' }}>\r\n        <Link to={origin}>\r\n          <StyledArrowLeft />\r\n        </Link>\r\n        <FindPoolTabsText>\r\n          <Trans>Import V2 pool</Trans>\r\n        </FindPoolTabsText>\r\n      </RowBetween>\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nconst AddRemoveTitleText = styled(ThemedText.H1Small)<{ $center: boolean }>`\r\n  flex: 1;\r\n  margin: auto;\r\n  text-align: ${({ $center }) => ($center ? 'center' : 'start')};\r\n`\r\n\r\nexport function AddRemoveTabs({\r\n  adding,\r\n  creating,\r\n  autoSlippage,\r\n  children,\r\n}: {\r\n  adding: boolean\r\n  creating: boolean\r\n  autoSlippage: Percent\r\n  showBackLink?: boolean\r\n  children?: ReactNode\r\n}) {\r\n  const chainId = useChainId()\r\n  const theme = useTheme()\r\n  // reset states on back\r\n  const dispatch = useAppDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <Tabs>\r\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }} align=\"center\">\r\n        <StyledLink\r\n          to=\"..\"\r\n          onClick={(e) => {\r\n            e.preventDefault()\r\n            navigate(-1)\r\n\r\n            if (adding) {\r\n              // not 100% sure both of these are needed\r\n              dispatch(resetMintState())\r\n              dispatch(resetMintV3State())\r\n            }\r\n          }}\r\n          flex={children ? '1' : undefined}\r\n        >\r\n          <StyledArrowLeft stroke={theme.neutral2} />\r\n        </StyledLink>\r\n        <AddRemoveTitleText $center={!children}>\r\n          {creating ? (\r\n            <Trans>Create a pair</Trans>\r\n          ) : adding ? (\r\n            <Trans>Add liquidity</Trans>\r\n          ) : (\r\n            <Trans>Remove liquidity</Trans>\r\n          )}\r\n        </AddRemoveTitleText>\r\n        {children && <Box style={{ marginRight: '.5rem' }}>{children}</Box>}\r\n        <SettingsTab autoSlippage={autoSlippage} chainId={chainId} hideRoutingSettings />\r\n      </RowBetween>\r\n    </Tabs>\r\n  )\r\n}\r\n","import { ChangeEvent, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRangeInput = styled.input<{ size: number }>`\r\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\r\n  width: 100%; /* Specific width is required for Firefox. */\r\n  background: transparent; /* Otherwise white in Chrome */\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &::-moz-focus-outer {\r\n    border: 0;\r\n  }\r\n\r\n  &::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: ${({ theme }) => theme.accent1};\r\n    border-radius: 100%;\r\n    border: none;\r\n    transform: translateY(-50%);\r\n    color: ${({ theme }) => theme.surface1};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-moz-range-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: #565a69;\r\n    border-radius: 100%;\r\n    border: none;\r\n    color: ${({ theme }) => theme.surface1};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-ms-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: #565a69;\r\n    border-radius: 100%;\r\n    color: ${({ theme }) => theme.surface1};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-webkit-slider-runnable-track {\r\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}, ${({ theme }) => theme.accent1});\r\n    height: 2px;\r\n  }\r\n\r\n  &::-moz-range-track {\r\n    background: linear-gradient(90deg, ${({ theme }) => theme.surface4}, ${({ theme }) => theme.surface2});\r\n    height: 2px;\r\n  }\r\n\r\n  &::-ms-track {\r\n    width: 100%;\r\n    border-color: transparent;\r\n    color: transparent;\r\n\r\n    background: ${({ theme }) => theme.surface4};\r\n    height: 2px;\r\n  }\r\n  &::-ms-fill-lower {\r\n    background: ${({ theme }) => theme.surface4};\r\n  }\r\n  &::-ms-fill-upper {\r\n    background: ${({ theme }) => theme.surface2};\r\n  }\r\n`\r\n\r\ninterface InputSliderProps {\r\n  value: number\r\n  onChange: (value: number) => void\r\n  step?: number\r\n  min?: number\r\n  max?: number\r\n  size?: number\r\n}\r\n\r\nexport default function Slider({\r\n  value,\r\n  onChange,\r\n  min = 0,\r\n  step = 1,\r\n  max = 100,\r\n  size = 28,\r\n  ...rest\r\n}: InputSliderProps) {\r\n  const changeCallback = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange(parseInt(e.target.value))\r\n    },\r\n    [onChange]\r\n  )\r\n\r\n  return (\r\n    <StyledRangeInput\r\n      size={size}\r\n      {...rest}\r\n      type=\"range\"\r\n      value={value}\r\n      style={{ padding: '15px 0' }}\r\n      onChange={changeCallback}\r\n      aria-labelledby=\"input slider\"\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n    />\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nimport uImage from '../../assets/images/big_unicorn.png'\r\nimport noise from '../../assets/images/noise.png'\r\nimport xlUnicorn from '../../assets/images/xl_uni.png'\r\nimport { AutoColumn } from '../Column'\r\n\r\nexport const DataCard = styled(AutoColumn)<{ disabled?: boolean }>`\r\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #2172e5 100%);\r\n  border-radius: 12px;\r\n  width: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const CardBGImage = styled.span<{ desaturate?: boolean }>`\r\n  background: url(${uImage});\r\n  width: 1000px;\r\n  height: 600px;\r\n  position: absolute;\r\n  border-radius: 12px;\r\n  opacity: 0.4;\r\n  top: -100px;\r\n  left: -100px;\r\n  transform: rotate(-15deg);\r\n  user-select: none;\r\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\r\n`\r\n\r\nexport const CardBGImageSmaller = styled.span<{ desaturate?: boolean }>`\r\n  background: url(${xlUnicorn});\r\n  width: 1200px;\r\n  height: 1200px;\r\n  position: absolute;\r\n  border-radius: 12px;\r\n  top: -300px;\r\n  left: -300px;\r\n  opacity: 0.4;\r\n  user-select: none;\r\n\r\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\r\n`\r\n\r\nexport const CardNoise = styled.span`\r\n  background: url(${noise});\r\n  background-size: cover;\r\n  mix-blend-mode: overlay;\r\n  border-radius: 12px;\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0.15;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  user-select: none;\r\n`\r\n\r\nexport const CardSection = styled(AutoColumn)<{ disabled?: boolean }>`\r\n  padding: 1rem;\r\n  z-index: 1;\r\n  opacity: ${({ disabled }) => disabled && '0.4'};\r\n`\r\n\r\nexport const Break = styled.div`\r\n  width: 100%;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  height: 1px;\r\n`\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n/**\r\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\r\n * @param value value that is rapidly changing\r\n * @param onChange change handler that should receive the debounced updates to the value\r\n * @param debouncedMs how long we should wait for changes to be applied\r\n */\r\nexport default function useDebouncedChangeHandler<T>(\r\n  value: T,\r\n  onChange: (newValue: T) => void,\r\n  debouncedMs = 100\r\n): [T, (value: T) => void] {\r\n  const [inner, setInner] = useState<T>(() => value)\r\n  const timer = useRef<ReturnType<typeof setTimeout>>()\r\n\r\n  const onChangeInner = useCallback(\r\n    (newValue: T) => {\r\n      setInner(newValue)\r\n      if (timer.current) {\r\n        clearTimeout(timer.current)\r\n      }\r\n      timer.current = setTimeout(() => {\r\n        onChange(newValue)\r\n        timer.current = undefined\r\n      }, debouncedMs)\r\n    },\r\n    [debouncedMs, onChange]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n      timer.current = undefined\r\n    }\r\n    setInner(value)\r\n  }, [value])\r\n\r\n  return [inner, onChangeInner]\r\n}\r\n","import { PropsWithChildren } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Z_INDEX } from 'theme/zIndex'\r\n\r\ninterface BodyWrapperProps {\r\n  $margin?: string\r\n  $maxWidth?: string\r\n}\r\n\r\nexport const BodyWrapper = styled.main<BodyWrapperProps>`\r\n  position: relative;\r\n  margin-top: ${({ $margin }) => $margin ?? '0px'};\r\n  max-width: ${({ $maxWidth }) => $maxWidth ?? '420px'};\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.surface1};\r\n  border-radius: 16px;\r\n  border: 1px solid ${({ theme }) => theme.surface3};\r\n  margin-top: 1rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  z-index: ${Z_INDEX.default};\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody(props: PropsWithChildren<BodyWrapperProps>) {\r\n  return <BodyWrapper {...props} />\r\n}\r\n","import { Currency, CurrencyAmount, Percent } from '@uniswap/sdk-core'\r\nimport { Position } from '@uniswap/v3-sdk'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useToken } from 'hooks/Tokens'\r\nimport { usePool } from 'hooks/usePools'\r\nimport { useV3PositionFees } from 'hooks/useV3PositionFees'\r\nimport { Trans } from 'i18n'\r\nimport { ReactNode, useCallback, useMemo } from 'react'\r\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\r\nimport { PositionDetails } from 'types/position'\r\nimport { unwrappedToken } from 'utils/unwrappedToken'\r\n\r\nimport { AppState } from '../../reducer'\r\nimport { selectPercent } from './actions'\r\n\r\nexport function useBurnV3State(): AppState['burnV3'] {\r\n  return useAppSelector((state) => state.burnV3)\r\n}\r\n\r\nexport function useDerivedV3BurnInfo(\r\n  position?: PositionDetails,\r\n  asWETH = false\r\n): {\r\n  position?: Position\r\n  liquidityPercentage?: Percent\r\n  liquidityValue0?: CurrencyAmount<Currency>\r\n  liquidityValue1?: CurrencyAmount<Currency>\r\n  feeValue0?: CurrencyAmount<Currency>\r\n  feeValue1?: CurrencyAmount<Currency>\r\n  outOfRange: boolean\r\n  error?: ReactNode\r\n} {\r\n  const { account } = useWeb3React()\r\n  const { percent } = useBurnV3State()\r\n\r\n  const token0 = useToken(position?.token0)\r\n  const token1 = useToken(position?.token1)\r\n\r\n  const [, pool] = usePool(token0 ?? undefined, token1 ?? undefined, position?.fee)\r\n\r\n  const positionSDK = useMemo(\r\n    () =>\r\n      pool && position?.liquidity && typeof position?.tickLower === 'number' && typeof position?.tickUpper === 'number'\r\n        ? new Position({\r\n            pool,\r\n            liquidity: position.liquidity.toString(),\r\n            tickLower: position.tickLower,\r\n            tickUpper: position.tickUpper,\r\n          })\r\n        : undefined,\r\n    [pool, position]\r\n  )\r\n\r\n  const liquidityPercentage = new Percent(percent, 100)\r\n\r\n  const discountedAmount0 = positionSDK\r\n    ? liquidityPercentage.multiply(positionSDK.amount0.quotient).quotient\r\n    : undefined\r\n  const discountedAmount1 = positionSDK\r\n    ? liquidityPercentage.multiply(positionSDK.amount1.quotient).quotient\r\n    : undefined\r\n\r\n  const liquidityValue0 =\r\n    token0 && discountedAmount0\r\n      ? CurrencyAmount.fromRawAmount(asWETH ? token0 : unwrappedToken(token0), discountedAmount0)\r\n      : undefined\r\n  const liquidityValue1 =\r\n    token1 && discountedAmount1\r\n      ? CurrencyAmount.fromRawAmount(asWETH ? token1 : unwrappedToken(token1), discountedAmount1)\r\n      : undefined\r\n\r\n  const [feeValue0, feeValue1] = useV3PositionFees(pool ?? undefined, position?.tokenId, asWETH)\r\n\r\n  const outOfRange =\r\n    pool && position ? pool.tickCurrent < position.tickLower || pool.tickCurrent > position.tickUpper : false\r\n\r\n  let error: ReactNode | undefined\r\n  if (!account) {\r\n    error = <Trans>Connect wallet</Trans>\r\n  }\r\n  if (percent === 0) {\r\n    error = error ?? <Trans>Enter a percent</Trans>\r\n  }\r\n  return {\r\n    position: positionSDK,\r\n    liquidityPercentage,\r\n    liquidityValue0,\r\n    liquidityValue1,\r\n    feeValue0,\r\n    feeValue1,\r\n    outOfRange,\r\n    error,\r\n  }\r\n}\r\n\r\nexport function useBurnV3ActionHandlers(): {\r\n  onPercentSelect: (percent: number) => void\r\n} {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const onPercentSelect = useCallback(\r\n    (percent: number) => {\r\n      dispatch(selectPercent({ percent }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return {\r\n    onPercentSelect,\r\n  }\r\n}\r\n","import { MaxButton } from 'pages/Pool/styled'\r\nimport { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  padding: 20px;\r\n  min-width: 460px;\r\n\r\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToExtraSmall`\r\n    min-width: 340px;\r\n  `};\r\n`\r\n\r\nexport const SmallMaxButton = styled(MaxButton)`\r\n  font-size: 12px;\r\n`\r\n\r\nexport const ResponsiveHeaderText = styled(Text)`\r\n  font-size: 40px;\r\n  font-weight: 535;\r\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToExtraSmall`\r\n     font-size: 24px\r\n  `};\r\n`\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport type { TransactionResponse } from '@ethersproject/providers'\r\nimport { LiquidityEventName, LiquiditySource } from '@uniswap/analytics-events'\r\nimport { CurrencyAmount, Percent } from '@uniswap/sdk-core'\r\nimport { NonfungiblePositionManager } from '@uniswap/v3-sdk'\r\nimport { sendAnalyticsEvent, useTrace } from 'analytics'\r\nimport RangeBadge from 'components/Badge/RangeBadge'\r\nimport { ButtonConfirmed, ButtonPrimary } from 'components/Button'\r\nimport { LightCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { DoubleCurrencyLogo } from 'components/DoubleLogo'\r\nimport Loader from 'components/Icons/LoadingSpinner'\r\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\r\nimport { AddRemoveTabs } from 'components/NavigationTabs'\r\nimport { AutoRow, RowBetween, RowFixed } from 'components/Row'\r\nimport Slider from 'components/Slider'\r\nimport Toggle from 'components/Toggle'\r\nimport { Break } from 'components/earn/styled'\r\nimport { useIsSupportedChainId } from 'constants/chains'\r\nimport { useV3NFTPositionManagerContract } from 'hooks/useContract'\r\nimport useDebouncedChangeHandler from 'hooks/useDebouncedChangeHandler'\r\nimport { useV3PositionFromTokenId } from 'hooks/useV3Positions'\r\nimport { Trans } from 'i18n'\r\nimport useNativeCurrency from 'lib/hooks/useNativeCurrency'\r\nimport { PositionPageUnsupportedContent } from 'pages/Pool/PositionPage'\r\nimport { useCallback, useMemo, useState } from 'react'\r\nimport { Navigate, useLocation, useParams } from 'react-router-dom'\r\nimport { useBurnV3ActionHandlers, useBurnV3State, useDerivedV3BurnInfo } from 'state/burn/v3/hooks'\r\nimport { useTransactionAdder } from 'state/transactions/hooks'\r\nimport { useUserSlippageToleranceWithDefault } from 'state/user/hooks'\r\nimport { ThemedText } from 'theme/components'\r\nimport { WrongChainError } from 'utils/errors'\r\nimport { useFormatter } from 'utils/formatNumbers'\r\n\r\nimport { useEthersSigner } from 'hooks/useEthersSigner'\r\nimport { useGetTransactionDeadline } from 'hooks/useTransactionDeadline'\r\nimport { Text } from 'ui/src'\r\nimport { useAccount } from 'wagmi'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\r\nimport { TransactionType } from '../../state/transactions/types'\r\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport AppBody from '../AppBody'\r\nimport { ResponsiveHeaderText, SmallMaxButton, Wrapper } from './styled'\r\n\r\nconst DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\r\n\r\n// redirect invalid tokenIds\r\nexport default function RemoveLiquidityV3() {\r\n  const account = useAccount()\r\n  const isSupportedChain = useIsSupportedChainId(account.chainId)\r\n  const { tokenId } = useParams<{ tokenId: string }>()\r\n  const location = useLocation()\r\n  const parsedTokenId = useMemo(() => {\r\n    try {\r\n      return BigNumber.from(tokenId)\r\n    } catch {\r\n      return null\r\n    }\r\n  }, [tokenId])\r\n\r\n  const { position, loading } = useV3PositionFromTokenId(parsedTokenId ?? undefined)\r\n  if (parsedTokenId === null || parsedTokenId.eq(0)) {\r\n    return <Navigate to={{ ...location, pathname: '/pools' }} replace />\r\n  }\r\n  if (isSupportedChain && (loading || position)) {\r\n    return <Remove tokenId={parsedTokenId} />\r\n  } else {\r\n    return <PositionPageUnsupportedContent />\r\n  }\r\n}\r\nfunction Remove({ tokenId }: { tokenId: BigNumber }) {\r\n  const { position } = useV3PositionFromTokenId(tokenId)\r\n  const account = useAccount()\r\n  const signer = useEthersSigner()\r\n  const trace = useTrace()\r\n  const { formatCurrencyAmount } = useFormatter()\r\n\r\n  // flag for receiving WETH\r\n  const [receiveWETH, setReceiveWETH] = useState(false)\r\n  const nativeCurrency = useNativeCurrency(account.chainId)\r\n  const nativeWrappedSymbol = nativeCurrency.wrapped.symbol\r\n\r\n  // burn state\r\n  const { percent } = useBurnV3State()\r\n  const {\r\n    position: positionSDK,\r\n    liquidityPercentage,\r\n    liquidityValue0,\r\n    liquidityValue1,\r\n    feeValue0,\r\n    feeValue1,\r\n    outOfRange,\r\n    error,\r\n  } = useDerivedV3BurnInfo(position, receiveWETH)\r\n  const { onPercentSelect } = useBurnV3ActionHandlers()\r\n\r\n  const removed = position?.liquidity?.eq(0)\r\n\r\n  // boilerplate for the slider\r\n  const [percentForSlider, onPercentSelectForSlider] = useDebouncedChangeHandler(percent, onPercentSelect)\r\n\r\n  const getDeadline = useGetTransactionDeadline() // custom from users settings\r\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE) // custom from users\r\n\r\n  const [showConfirm, setShowConfirm] = useState(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState(false)\r\n  const [txnHash, setTxnHash] = useState<string | undefined>()\r\n  const addTransaction = useTransactionAdder()\r\n  const positionManager = useV3NFTPositionManagerContract()\r\n  const burn = useCallback(async () => {\r\n    setAttemptingTxn(true)\r\n    if (\r\n      !positionManager ||\r\n      !liquidityValue0 ||\r\n      !liquidityValue1 ||\r\n      account.status !== 'connected' ||\r\n      !positionSDK ||\r\n      !liquidityPercentage ||\r\n      !signer\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const deadline = await getDeadline()\r\n    if (!deadline) throw new Error('could not get deadline')\r\n\r\n    // we fall back to expecting 0 fees in case the fetch fails, which is safe in the\r\n    // vast majority of cases\r\n    const { calldata, value } = NonfungiblePositionManager.removeCallParameters(positionSDK, {\r\n      tokenId: tokenId.toString(),\r\n      liquidityPercentage,\r\n      slippageTolerance: allowedSlippage,\r\n      deadline: deadline.toString(),\r\n      collectOptions: {\r\n        expectedCurrencyOwed0: feeValue0 ?? CurrencyAmount.fromRawAmount(liquidityValue0.currency, 0),\r\n        expectedCurrencyOwed1: feeValue1 ?? CurrencyAmount.fromRawAmount(liquidityValue1.currency, 0),\r\n        recipient: account.address,\r\n      },\r\n    })\r\n\r\n    const txn = {\r\n      to: positionManager.address,\r\n      data: calldata,\r\n      value,\r\n    }\r\n\r\n    const connectedChainId = await signer.getChainId()\r\n    if (account.chainId !== connectedChainId) throw new WrongChainError()\r\n\r\n    signer\r\n      .estimateGas(txn)\r\n      .then((estimate) => {\r\n        const newTxn = {\r\n          ...txn,\r\n          gasLimit: calculateGasMargin(estimate),\r\n        }\r\n\r\n        return signer.sendTransaction(newTxn).then((response: TransactionResponse) => {\r\n          sendAnalyticsEvent(LiquidityEventName.REMOVE_LIQUIDITY_SUBMITTED, {\r\n            source: LiquiditySource.V3,\r\n            label: [liquidityValue0.currency.symbol, liquidityValue1.currency.symbol].join('/'),\r\n            ...trace,\r\n          })\r\n          setTxnHash(response.hash)\r\n          setAttemptingTxn(false)\r\n          addTransaction(response, {\r\n            type: TransactionType.REMOVE_LIQUIDITY_V3,\r\n            baseCurrencyId: currencyId(liquidityValue0.currency),\r\n            quoteCurrencyId: currencyId(liquidityValue1.currency),\r\n            expectedAmountBaseRaw: liquidityValue0.quotient.toString(),\r\n            expectedAmountQuoteRaw: liquidityValue1.quotient.toString(),\r\n          })\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setAttemptingTxn(false)\r\n        console.error(error)\r\n      })\r\n  }, [\r\n    positionManager,\r\n    liquidityValue0,\r\n    liquidityValue1,\r\n    account.status,\r\n    account.address,\r\n    account.chainId,\r\n    positionSDK,\r\n    liquidityPercentage,\r\n    signer,\r\n    getDeadline,\r\n    tokenId,\r\n    allowedSlippage,\r\n    feeValue0,\r\n    feeValue1,\r\n    trace,\r\n    addTransaction,\r\n  ])\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txnHash) {\r\n      onPercentSelectForSlider(0)\r\n    }\r\n    setAttemptingTxn(false)\r\n    setTxnHash('')\r\n  }, [onPercentSelectForSlider, txnHash])\r\n\r\n  const pendingText = (\r\n    <Trans>\r\n      Removing {{ amt: liquidityValue0?.toSignificant(6) }} {{ sym: liquidityValue0?.currency?.symbol }} and{' '}\r\n      {{ amt2: liquidityValue1?.toSignificant(6) }} {{ sym2: liquidityValue1?.currency?.symbol }}\r\n    </Trans>\r\n  )\r\n\r\n  function modalHeader() {\r\n    return (\r\n      <AutoColumn gap=\"sm\" style={{ padding: '16px' }}>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize={16} fontWeight=\"$medium\">\r\n            <Trans>Pooled {{ sym: liquidityValue0?.currency?.symbol }}:</Trans>\r\n          </Text>\r\n          <RowFixed>\r\n            <Text fontSize={16} fontWeight=\"$medium\" ml={6}>\r\n              {liquidityValue0 && formatCurrencyAmount({ amount: liquidityValue0 })}\r\n            </Text>\r\n            <CurrencyLogo size={20} style={{ marginLeft: '8px' }} currency={liquidityValue0?.currency} />\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize={16} fontWeight=\"$medium\">\r\n            <Trans>Pooled {{ sym: liquidityValue1?.currency?.symbol }}:</Trans>\r\n          </Text>\r\n          <RowFixed>\r\n            <Text fontSize={16} fontWeight=\"$medium\" ml={6}>\r\n              {liquidityValue1 && formatCurrencyAmount({ amount: liquidityValue1 })}\r\n            </Text>\r\n            <CurrencyLogo size={20} style={{ marginLeft: '8px' }} currency={liquidityValue1?.currency} />\r\n          </RowFixed>\r\n        </RowBetween>\r\n        {feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) ? (\r\n          <>\r\n            <Text fontSize={12} color=\"$neutral2\" textAlign=\"left\" pt={8}>\r\n              <Trans>You will also collect fees earned from this position.</Trans>\r\n            </Text>\r\n            <RowBetween>\r\n              <Text fontSize={16} fontWeight=\"$medium\">\r\n                <Trans>{{ sym: feeValue0?.currency?.symbol }} Fees Earned:</Trans>\r\n              </Text>\r\n              <RowFixed>\r\n                <Text fontSize={16} fontWeight=\"$medium\" ml={6}>\r\n                  {feeValue0 && formatCurrencyAmount({ amount: feeValue0 })}\r\n                </Text>\r\n                <CurrencyLogo size={20} style={{ marginLeft: '8px' }} currency={feeValue0?.currency} />\r\n              </RowFixed>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <Text fontSize={16} fontWeight=\"$medium\">\r\n                <Trans>{{ sym: feeValue1?.currency?.symbol }} Fees Earned:</Trans>\r\n              </Text>\r\n              <RowFixed>\r\n                <Text fontSize={16} fontWeight=\"$medium\" ml={6}>\r\n                  {feeValue1 && formatCurrencyAmount({ amount: feeValue1 })}\r\n                </Text>\r\n                <CurrencyLogo size={20} style={{ marginLeft: '8px' }} currency={feeValue1?.currency} />\r\n              </RowFixed>\r\n            </RowBetween>\r\n          </>\r\n        ) : null}\r\n        <ButtonPrimary mt=\"16px\" onClick={burn}>\r\n          <Trans>Remove</Trans>\r\n        </ButtonPrimary>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  const showCollectAsWeth = Boolean(\r\n    liquidityValue0?.currency &&\r\n      liquidityValue1?.currency &&\r\n      (liquidityValue0.currency.isNative ||\r\n        liquidityValue1.currency.isNative ||\r\n        WRAPPED_NATIVE_CURRENCY[liquidityValue0.currency.chainId]?.equals(liquidityValue0.currency.wrapped) ||\r\n        WRAPPED_NATIVE_CURRENCY[liquidityValue1.currency.chainId]?.equals(liquidityValue1.currency.wrapped))\r\n  )\r\n  return (\r\n    <AutoColumn>\r\n      <TransactionConfirmationModal\r\n        isOpen={showConfirm}\r\n        onDismiss={handleDismissConfirmation}\r\n        attemptingTxn={attemptingTxn}\r\n        hash={txnHash ?? ''}\r\n        reviewContent={() => (\r\n          <ConfirmationModalContent\r\n            title={<Trans>Remove liquidity</Trans>}\r\n            onDismiss={handleDismissConfirmation}\r\n            topContent={modalHeader}\r\n          />\r\n        )}\r\n        pendingText={pendingText}\r\n      />\r\n      <AppBody $maxWidth=\"unset\">\r\n        <AddRemoveTabs creating={false} adding={false} autoSlippage={DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE} />\r\n        <Wrapper>\r\n          {position ? (\r\n            <AutoColumn gap=\"lg\">\r\n              <RowBetween>\r\n                <RowFixed>\r\n                  <DoubleCurrencyLogo currencies={[liquidityValue0?.currency, liquidityValue1?.currency]} size={20} />\r\n                  <ThemedText.DeprecatedLabel\r\n                    ml=\"10px\"\r\n                    fontSize=\"20px\"\r\n                    id=\"remove-liquidity-tokens\"\r\n                  >{`${liquidityValue0?.currency?.symbol}/${liquidityValue1?.currency?.symbol}`}</ThemedText.DeprecatedLabel>\r\n                </RowFixed>\r\n                <RangeBadge removed={removed} inRange={!outOfRange} />\r\n              </RowBetween>\r\n              <LightCard>\r\n                <AutoColumn gap=\"md\">\r\n                  <ThemedText.DeprecatedMain fontWeight={485}>\r\n                    <Trans>Amount</Trans>\r\n                  </ThemedText.DeprecatedMain>\r\n                  <RowBetween>\r\n                    <ResponsiveHeaderText>\r\n                      <Trans>{{ percentForSlider }}%</Trans>\r\n                    </ResponsiveHeaderText>\r\n                    <AutoRow gap=\"4px\" justify=\"flex-end\">\r\n                      <SmallMaxButton onClick={() => onPercentSelect(25)} width=\"20%\">\r\n                        <Trans>25%</Trans>\r\n                      </SmallMaxButton>\r\n                      <SmallMaxButton onClick={() => onPercentSelect(50)} width=\"20%\">\r\n                        <Trans>50%</Trans>\r\n                      </SmallMaxButton>\r\n                      <SmallMaxButton onClick={() => onPercentSelect(75)} width=\"20%\">\r\n                        <Trans>75%</Trans>\r\n                      </SmallMaxButton>\r\n                      <SmallMaxButton onClick={() => onPercentSelect(100)} width=\"20%\">\r\n                        <Trans>Max</Trans>\r\n                      </SmallMaxButton>\r\n                    </AutoRow>\r\n                  </RowBetween>\r\n                  <Slider value={percentForSlider} onChange={onPercentSelectForSlider} />\r\n                </AutoColumn>\r\n              </LightCard>\r\n              <LightCard>\r\n                <AutoColumn gap=\"md\">\r\n                  <RowBetween>\r\n                    <Text fontSize={16} fontWeight=\"$medium\" id=\"remove-pooled-tokena-symbol\">\r\n                      <Trans>Pooled {{ symbol: liquidityValue0?.currency?.symbol }}:</Trans>\r\n                    </Text>\r\n                    <RowFixed>\r\n                      <Text fontSize={16} fontWeight=\"$medium\" ml={6}>\r\n                        {liquidityValue0 && formatCurrencyAmount({ amount: liquidityValue0 })}\r\n                      </Text>\r\n                      <CurrencyLogo size={20} style={{ marginLeft: '8px' }} currency={liquidityValue0?.currency} />\r\n                    </RowFixed>\r\n                  </RowBetween>\r\n                  <RowBetween>\r\n                    <Text fontSize={16} fontWeight=\"$medium\" id=\"remove-pooled-tokenb-symbol\">\r\n                      <Trans>Pooled {{ symbol: liquidityValue1?.currency?.symbol }}:</Trans>\r\n                    </Text>\r\n                    <RowFixed>\r\n                      <Text fontSize={16} fontWeight=\"$medium\" ml={6}>\r\n                        {liquidityValue1 && formatCurrencyAmount({ amount: liquidityValue1 })}\r\n                      </Text>\r\n                      <CurrencyLogo size={20} style={{ marginLeft: '8px' }} currency={liquidityValue1?.currency} />\r\n                    </RowFixed>\r\n                  </RowBetween>\r\n                  {feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) ? (\r\n                    <>\r\n                      <Break />\r\n                      <RowBetween>\r\n                        <Text fontSize={16} fontWeight=\"$medium\">\r\n                          <Trans>{{ symbol: feeValue0?.currency?.symbol }} Fees Earned:</Trans>\r\n                        </Text>\r\n                        <RowFixed>\r\n                          <Text fontSize={16} fontWeight=\"$medium\" ml={6}>\r\n                            {feeValue0 && formatCurrencyAmount({ amount: feeValue0 })}\r\n                          </Text>\r\n                          <CurrencyLogo size={20} style={{ marginLeft: '8px' }} currency={feeValue0?.currency} />\r\n                        </RowFixed>\r\n                      </RowBetween>\r\n                      <RowBetween>\r\n                        <Text fontSize={16} fontWeight=\"$medium\">\r\n                          <Trans>{{ symbol: feeValue1?.currency?.symbol }} Fees Earned:</Trans>\r\n                        </Text>\r\n                        <RowFixed>\r\n                          <Text fontSize={16} fontWeight=\"$medium\" ml={6}>\r\n                            {feeValue1 && formatCurrencyAmount({ amount: feeValue1 })}\r\n                          </Text>\r\n                          <CurrencyLogo size={20} style={{ marginLeft: '8px' }} currency={feeValue1?.currency} />\r\n                        </RowFixed>\r\n                      </RowBetween>\r\n                    </>\r\n                  ) : null}\r\n                </AutoColumn>\r\n              </LightCard>\r\n\r\n              {showCollectAsWeth && (\r\n                <RowBetween>\r\n                  <ThemedText.DeprecatedMain>\r\n                    <Trans>Collect as {{ nativeWrappedSymbol }}</Trans>\r\n                  </ThemedText.DeprecatedMain>\r\n                  <Toggle\r\n                    id=\"receive-as-weth\"\r\n                    isActive={receiveWETH}\r\n                    toggle={() => setReceiveWETH((receiveWETH) => !receiveWETH)}\r\n                  />\r\n                </RowBetween>\r\n              )}\r\n\r\n              <div style={{ display: 'flex' }}>\r\n                <AutoColumn gap=\"md\" style={{ flex: '1' }}>\r\n                  <ButtonConfirmed\r\n                    confirmed={false}\r\n                    disabled={removed || percent === 0 || !liquidityValue0}\r\n                    onClick={() => setShowConfirm(true)}\r\n                  >\r\n                    {removed ? <Trans>Closed</Trans> : error ?? <Trans>Remove</Trans>}\r\n                  </ButtonConfirmed>\r\n                </AutoColumn>\r\n              </div>\r\n            </AutoColumn>\r\n          ) : (\r\n            <Loader />\r\n          )}\r\n        </Wrapper>\r\n      </AppBody>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import { Currency } from '@uniswap/sdk-core'\r\n\r\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\r\n\r\nexport function unwrappedToken(currency: Currency): Currency {\r\n  if (currency.isNative) return currency\r\n  if (WRAPPED_NATIVE_CURRENCY[currency.chainId]?.equals(currency)) return nativeOnChain(currency.chainId)\r\n  return currency\r\n}\r\n"],"names":["Tabs","styled","div","flexRowNoWrap","StyledLink","Link","flex","theme","deprecated_mediaWidth","deprecated_upToMedium","FindPoolTabsText","ThemedText","H1Small","StyledArrowLeft","ArrowLeft","neutral1","FindPoolTabs","origin","RowBetween","style","padding","position","to","Trans","AddRemoveTitleText","$center","AddRemoveTabs","adding","creating","autoSlippage","children","chainId","useChainId","useTheme","dispatch","useAppDispatch","navigate","useNavigate","align","onClick","e","preventDefault","resetMintState","resetMintV3State","undefined","stroke","neutral2","Box","marginRight","SettingsTab","hideRoutingSettings","StyledRangeInput","input","size","accent1","surface1","surface4","surface2","Slider","value","onChange","min","step","max","rest","changeCallback","useCallback","parseInt","target","type","aria-labelledby","DataCard","AutoColumn","CardBGImage","span","uImage","desaturate","CardBGImageSmaller","xlUnicorn","CardNoise","noise","CardSection","disabled","Break","useDebouncedChangeHandler","debouncedMs","inner","setInner","useState","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","useEffect","BodyWrapper","main","$margin","$maxWidth","surface3","Z_INDEX","default","AppBody","props","useBurnV3State","useAppSelector","state","burnV3","Wrapper","deprecated_upToExtraSmall","SmallMaxButton","MaxButton","ResponsiveHeaderText","Text","DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE","Percent","RemoveLiquidityV3","account","useAccount","isSupportedChain","useIsSupportedChainId","tokenId","useParams","location","useLocation","parsedTokenId","useMemo","BigNumber","from","loading","useV3PositionFromTokenId","eq","Navigate","pathname","replace","Remove","PositionPageUnsupportedContent","liquidityValue0","liquidityValue1","WRAPPED_NATIVE_CURRENCY","feeValue0","feeValue1","signer","useEthersSigner","trace","useTrace","formatCurrencyAmount","useFormatter","receiveWETH","setReceiveWETH","nativeWrappedSymbol","useNativeCurrency","wrapped","symbol","percent","positionSDK","liquidityPercentage","outOfRange","error","asWETH","useWeb3React","token0","useToken","token1","pool","usePool","fee","liquidity","tickLower","tickUpper","Position","toString","discountedAmount0","multiply","amount0","quotient","discountedAmount1","amount1","CurrencyAmount","fromRawAmount","unwrappedToken","useV3PositionFees","tickCurrent","useDerivedV3BurnInfo","onPercentSelect","selectPercent","useBurnV3ActionHandlers","removed","percentForSlider","onPercentSelectForSlider","getDeadline","useGetTransactionDeadline","allowedSlippage","useUserSlippageToleranceWithDefault","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","txnHash","setTxnHash","addTransaction","useTransactionAdder","positionManager","useV3NFTPositionManagerContract","burn","status","deadline","Error","calldata","NonfungiblePositionManager","removeCallParameters","slippageTolerance","collectOptions","expectedCurrencyOwed0","currency","expectedCurrencyOwed1","recipient","address","txn","data","connectedChainId","getChainId","WrongChainError","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","sendAnalyticsEvent","LiquidityEventName","REMOVE_LIQUIDITY_SUBMITTED","source","LiquiditySource","V3","label","join","hash","TransactionType","REMOVE_LIQUIDITY_V3","baseCurrencyId","currencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","catch","console","handleDismissConfirmation","pendingText","amt","toSignificant","sym","amt2","sym2","modalHeader","gap","fontSize","fontWeight","RowFixed","ml","amount","CurrencyLogo","marginLeft","greaterThan","color","textAlign","pt","ButtonPrimary","mt","showCollectAsWeth","Boolean","isNative","equals","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","title","topContent","DoubleCurrencyLogo","currencies","DeprecatedLabel","id","RangeBadge","inRange","LightCard","DeprecatedMain","AutoRow","justify","width","Toggle","isActive","toggle","display","ButtonConfirmed","confirmed","Loader","nativeOnChain"],"sourceRoot":""}