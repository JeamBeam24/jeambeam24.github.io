{"version":3,"file":"static/js/9469.a6b9c2c0.chunk.js","mappings":"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","sources":["components/Slider/index.tsx","hooks/useDebouncedChangeHandler.tsx","hooks/useIsArgentWallet.ts","hooks/useERC20Permit.ts","hooks/useV2LiquidityTokenPermit.ts","state/burn/hooks.tsx","pages/RemoveLiquidity/index.tsx"],"sourcesContent":["import { ChangeEvent, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRangeInput = styled.input<{ size: number }>`\r\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\r\n  width: 100%; /* Specific width is required for Firefox. */\r\n  background: transparent; /* Otherwise white in Chrome */\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &::-moz-focus-outer {\r\n    border: 0;\r\n  }\r\n\r\n  &::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: ${({ theme }) => theme.accent1};\r\n    border-radius: 100%;\r\n    border: none;\r\n    transform: translateY(-50%);\r\n    color: ${({ theme }) => theme.surface1};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-moz-range-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: #565a69;\r\n    border-radius: 100%;\r\n    border: none;\r\n    color: ${({ theme }) => theme.surface1};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-ms-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: #565a69;\r\n    border-radius: 100%;\r\n    color: ${({ theme }) => theme.surface1};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-webkit-slider-runnable-track {\r\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}, ${({ theme }) => theme.accent1});\r\n    height: 2px;\r\n  }\r\n\r\n  &::-moz-range-track {\r\n    background: linear-gradient(90deg, ${({ theme }) => theme.surface4}, ${({ theme }) => theme.surface2});\r\n    height: 2px;\r\n  }\r\n\r\n  &::-ms-track {\r\n    width: 100%;\r\n    border-color: transparent;\r\n    color: transparent;\r\n\r\n    background: ${({ theme }) => theme.surface4};\r\n    height: 2px;\r\n  }\r\n  &::-ms-fill-lower {\r\n    background: ${({ theme }) => theme.surface4};\r\n  }\r\n  &::-ms-fill-upper {\r\n    background: ${({ theme }) => theme.surface2};\r\n  }\r\n`\r\n\r\ninterface InputSliderProps {\r\n  value: number\r\n  onChange: (value: number) => void\r\n  step?: number\r\n  min?: number\r\n  max?: number\r\n  size?: number\r\n}\r\n\r\nexport default function Slider({\r\n  value,\r\n  onChange,\r\n  min = 0,\r\n  step = 1,\r\n  max = 100,\r\n  size = 28,\r\n  ...rest\r\n}: InputSliderProps) {\r\n  const changeCallback = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange(parseInt(e.target.value))\r\n    },\r\n    [onChange]\r\n  )\r\n\r\n  return (\r\n    <StyledRangeInput\r\n      size={size}\r\n      {...rest}\r\n      type=\"range\"\r\n      value={value}\r\n      style={{ padding: '15px 0' }}\r\n      onChange={changeCallback}\r\n      aria-labelledby=\"input slider\"\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n    />\r\n  )\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n/**\r\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\r\n * @param value value that is rapidly changing\r\n * @param onChange change handler that should receive the debounced updates to the value\r\n * @param debouncedMs how long we should wait for changes to be applied\r\n */\r\nexport default function useDebouncedChangeHandler<T>(\r\n  value: T,\r\n  onChange: (newValue: T) => void,\r\n  debouncedMs = 100\r\n): [T, (value: T) => void] {\r\n  const [inner, setInner] = useState<T>(() => value)\r\n  const timer = useRef<ReturnType<typeof setTimeout>>()\r\n\r\n  const onChangeInner = useCallback(\r\n    (newValue: T) => {\r\n      setInner(newValue)\r\n      if (timer.current) {\r\n        clearTimeout(timer.current)\r\n      }\r\n      timer.current = setTimeout(() => {\r\n        onChange(newValue)\r\n        timer.current = undefined\r\n      }, debouncedMs)\r\n    },\r\n    [debouncedMs, onChange]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n      timer.current = undefined\r\n    }\r\n    setInner(value)\r\n  }, [value])\r\n\r\n  return [inner, onChangeInner]\r\n}\r\n","import { useWeb3React } from '@web3-react/core'\r\nimport { NEVER_RELOAD, useSingleCallResult } from 'lib/hooks/multicall'\r\nimport { useMemo } from 'react'\r\n\r\nimport { useArgentWalletDetectorContract } from './useContract'\r\n\r\nexport default function useIsArgentWallet(): boolean {\r\n  const { account } = useWeb3React()\r\n  const argentWalletDetector = useArgentWalletDetectorContract()\r\n  const inputs = useMemo(() => [account ?? undefined], [account])\r\n  // @ts-ignore\r\n  const call = useSingleCallResult(argentWalletDetector, 'isArgentWallet', inputs, NEVER_RELOAD)\r\n  return Boolean(call?.result?.[0])\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { splitSignature } from '@ethersproject/bytes'\r\nimport { ChainId, Currency, CurrencyAmount } from '@uniswap/sdk-core'\r\nimport JSBI from 'jsbi'\r\nimport { useSingleCallResult } from 'lib/hooks/multicall'\r\nimport { useMemo, useState } from 'react'\r\n\r\nimport { useEthersWeb3Provider } from 'hooks/useEthersProvider'\r\nimport { useAccount } from 'wagmi'\r\nimport { DAI, UNI, USDC_MAINNET } from '../constants/tokens'\r\nimport { useEIP2612Contract } from './useContract'\r\nimport useIsArgentWallet from './useIsArgentWallet'\r\n\r\nexport enum PermitType {\r\n  AMOUNT = 1,\r\n  ALLOWED = 2,\r\n}\r\n\r\n// 20 minutes to submit after signing\r\nconst PERMIT_VALIDITY_BUFFER = 20 * 60\r\n\r\nexport interface PermitInfo {\r\n  type: PermitType\r\n  name: string\r\n  // version is optional, and if omitted, will not be included in the domain\r\n  version?: string\r\n}\r\n\r\n// todo: read this information from extensions on token lists or elsewhere (permit registry?)\r\nconst PERMITTABLE_TOKENS: {\r\n  [chainId: number]: {\r\n    [checksummedTokenAddress: string]: PermitInfo\r\n  }\r\n} = {\r\n  [ChainId.MAINNET]: {\r\n    [USDC_MAINNET.address]: { type: PermitType.AMOUNT, name: 'USD Coin', version: '2' },\r\n    [DAI.address]: { type: PermitType.ALLOWED, name: 'Dai Stablecoin', version: '1' },\r\n    [UNI[ChainId.MAINNET].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\r\n  },\r\n  [ChainId.GOERLI]: {\r\n    [UNI[ChainId.GOERLI].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\r\n  },\r\n  [ChainId.SEPOLIA]: {\r\n    [UNI[ChainId.SEPOLIA].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\r\n  },\r\n}\r\n\r\nenum UseERC20PermitState {\r\n  // returned for any reason, e.g. it is an argent wallet, or the currency does not support it\r\n  NOT_APPLICABLE,\r\n  LOADING,\r\n  NOT_SIGNED,\r\n  SIGNED,\r\n}\r\n\r\ninterface BaseSignatureData {\r\n  v: number\r\n  r: string\r\n  s: string\r\n  deadline: number\r\n  nonce: number\r\n  owner: string\r\n  spender: string\r\n  chainId: number\r\n  tokenAddress: string\r\n  permitType: PermitType\r\n}\r\n\r\ninterface StandardSignatureData extends BaseSignatureData {\r\n  amount: string\r\n}\r\n\r\ninterface AllowedSignatureData extends BaseSignatureData {\r\n  allowed: true\r\n}\r\n\r\ntype SignatureData = StandardSignatureData | AllowedSignatureData\r\n\r\nconst EIP712_DOMAIN_TYPE = [\r\n  { name: 'name', type: 'string' },\r\n  { name: 'version', type: 'string' },\r\n  { name: 'chainId', type: 'uint256' },\r\n  { name: 'verifyingContract', type: 'address' },\r\n]\r\n\r\nconst EIP712_DOMAIN_TYPE_NO_VERSION = [\r\n  { name: 'name', type: 'string' },\r\n  { name: 'chainId', type: 'uint256' },\r\n  { name: 'verifyingContract', type: 'address' },\r\n]\r\n\r\nconst EIP2612_TYPE = [\r\n  { name: 'owner', type: 'address' },\r\n  { name: 'spender', type: 'address' },\r\n  { name: 'value', type: 'uint256' },\r\n  { name: 'nonce', type: 'uint256' },\r\n  { name: 'deadline', type: 'uint256' },\r\n]\r\n\r\nconst PERMIT_ALLOWED_TYPE = [\r\n  { name: 'holder', type: 'address' },\r\n  { name: 'spender', type: 'address' },\r\n  { name: 'nonce', type: 'uint256' },\r\n  { name: 'expiry', type: 'uint256' },\r\n  { name: 'allowed', type: 'bool' },\r\n]\r\n\r\nexport function useERC20Permit(\r\n  currencyAmount: CurrencyAmount<Currency> | null | undefined,\r\n  spender: string | null | undefined,\r\n  transactionDeadline: BigNumber | undefined,\r\n  overridePermitInfo: PermitInfo | undefined | null\r\n): {\r\n  signatureData: SignatureData | null\r\n  state: UseERC20PermitState\r\n  gatherPermitSignature: null | (() => Promise<void>)\r\n} {\r\n  const account = useAccount()\r\n  const provider = useEthersWeb3Provider()\r\n  const tokenAddress = currencyAmount?.currency?.isToken ? currencyAmount.currency.address : undefined\r\n  const eip2612Contract = useEIP2612Contract(tokenAddress)\r\n  const isArgentWallet = useIsArgentWallet()\r\n  const nonceInputs = useMemo(() => [account.address ?? undefined], [account.address])\r\n  // @ts-ignore\r\n  const tokenNonceState = useSingleCallResult(eip2612Contract, 'nonces', nonceInputs)\r\n  const permitInfo =\r\n    overridePermitInfo ??\r\n    (account.status === 'connected' && tokenAddress ? PERMITTABLE_TOKENS[account.chainId]?.[tokenAddress] : undefined)\r\n\r\n  const [signatureData, setSignatureData] = useState<SignatureData | null>(null)\r\n\r\n  return useMemo(() => {\r\n    if (\r\n      isArgentWallet ||\r\n      !currencyAmount ||\r\n      !eip2612Contract ||\r\n      account.status !== 'connected' ||\r\n      !transactionDeadline ||\r\n      !provider ||\r\n      !tokenNonceState.valid ||\r\n      !tokenAddress ||\r\n      !spender ||\r\n      !permitInfo\r\n    ) {\r\n      return {\r\n        state: UseERC20PermitState.NOT_APPLICABLE,\r\n        signatureData: null,\r\n        gatherPermitSignature: null,\r\n      }\r\n    }\r\n\r\n    const nonceNumber = tokenNonceState.result?.[0]?.toNumber()\r\n    if (tokenNonceState.loading || typeof nonceNumber !== 'number') {\r\n      return {\r\n        state: UseERC20PermitState.LOADING,\r\n        signatureData: null,\r\n        gatherPermitSignature: null,\r\n      }\r\n    }\r\n\r\n    const isSignatureDataValid =\r\n      signatureData &&\r\n      signatureData.owner === account.address &&\r\n      signatureData.deadline >= transactionDeadline.toNumber() &&\r\n      signatureData.tokenAddress === tokenAddress &&\r\n      signatureData.nonce === nonceNumber &&\r\n      signatureData.spender === spender &&\r\n      ('allowed' in signatureData ||\r\n        JSBI.greaterThanOrEqual(JSBI.BigInt(signatureData.amount), currencyAmount.quotient))\r\n\r\n    return {\r\n      state: isSignatureDataValid ? UseERC20PermitState.SIGNED : UseERC20PermitState.NOT_SIGNED,\r\n      signatureData: isSignatureDataValid ? signatureData : null,\r\n      gatherPermitSignature: async function gatherPermitSignature() {\r\n        const allowed = permitInfo.type === PermitType.ALLOWED\r\n        const signatureDeadline = transactionDeadline.toNumber() + PERMIT_VALIDITY_BUFFER\r\n        const value = currencyAmount.quotient.toString()\r\n\r\n        const message = allowed\r\n          ? {\r\n              holder: account.address,\r\n              spender,\r\n              allowed,\r\n              nonce: nonceNumber,\r\n              expiry: signatureDeadline,\r\n            }\r\n          : {\r\n              owner: account.address,\r\n              spender,\r\n              value,\r\n              nonce: nonceNumber,\r\n              deadline: signatureDeadline,\r\n            }\r\n        const domain = permitInfo.version\r\n          ? {\r\n              name: permitInfo.name,\r\n              version: permitInfo.version,\r\n              verifyingContract: tokenAddress,\r\n              chainId: account.chainId,\r\n            }\r\n          : {\r\n              name: permitInfo.name,\r\n              verifyingContract: tokenAddress,\r\n              chainId: account.chainId,\r\n            }\r\n        const data = JSON.stringify({\r\n          types: {\r\n            EIP712Domain: permitInfo.version ? EIP712_DOMAIN_TYPE : EIP712_DOMAIN_TYPE_NO_VERSION,\r\n            Permit: allowed ? PERMIT_ALLOWED_TYPE : EIP2612_TYPE,\r\n          },\r\n          domain,\r\n          primaryType: 'Permit',\r\n          message,\r\n        })\r\n\r\n        return provider\r\n          .send('eth_signTypedData_v4', [account.address, data])\r\n          .then(splitSignature)\r\n          .then((signature) => {\r\n            setSignatureData({\r\n              v: signature.v,\r\n              r: signature.r,\r\n              s: signature.s,\r\n              deadline: signatureDeadline,\r\n              ...(allowed ? { allowed } : { amount: value }),\r\n              nonce: nonceNumber,\r\n              chainId: account.chainId,\r\n              owner: account.address,\r\n              spender,\r\n              tokenAddress,\r\n              permitType: permitInfo.type,\r\n            })\r\n          })\r\n      },\r\n    }\r\n  }, [\r\n    isArgentWallet,\r\n    currencyAmount,\r\n    eip2612Contract,\r\n    account.status,\r\n    account.address,\r\n    account.chainId,\r\n    transactionDeadline,\r\n    provider,\r\n    tokenNonceState.valid,\r\n    tokenNonceState.result,\r\n    tokenNonceState.loading,\r\n    tokenAddress,\r\n    spender,\r\n    permitInfo,\r\n    signatureData,\r\n  ])\r\n}\r\n","import { CurrencyAmount, Token } from '@uniswap/sdk-core'\r\n\r\nimport { PermitInfo, PermitType, useERC20Permit } from './useERC20Permit'\r\nimport useTransactionDeadline from './useTransactionDeadline'\r\n\r\nconst REMOVE_V2_LIQUIDITY_PERMIT_INFO: PermitInfo = {\r\n  version: '1',\r\n  name: 'Uniswap V2',\r\n  type: PermitType.AMOUNT,\r\n}\r\n\r\nexport function useV2LiquidityTokenPermit(\r\n  liquidityAmount: CurrencyAmount<Token> | null | undefined,\r\n  spender: string | null | undefined\r\n) {\r\n  const transactionDeadline = useTransactionDeadline()\r\n  return useERC20Permit(liquidityAmount, spender, transactionDeadline, REMOVE_V2_LIQUIDITY_PERMIT_INFO)\r\n}\r\n","import { Currency, CurrencyAmount, Percent, Token } from '@uniswap/sdk-core'\r\nimport { Pair } from '@uniswap/v2-sdk'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Trans } from 'i18n'\r\nimport JSBI from 'jsbi'\r\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\r\nimport { ReactNode, useCallback } from 'react'\r\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\r\nimport { AppState } from 'state/reducer'\r\n\r\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\r\nimport { useV2Pair } from '../../hooks/useV2Pairs'\r\nimport { useTokenBalances } from '../connection/hooks'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport function useBurnState(): AppState['burn'] {\r\n  return useAppSelector((state) => state.burn)\r\n}\r\n\r\nexport function useDerivedBurnInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined\r\n): {\r\n  pair?: Pair | null\r\n  parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\r\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\r\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\r\n  }\r\n  error?: ReactNode\r\n} {\r\n  const { account } = useWeb3React()\r\n\r\n  const { independentField, typedValue } = useBurnState()\r\n\r\n  // pair + totalsupply\r\n  const [, pair] = useV2Pair(currencyA, currencyB)\r\n\r\n  // balances\r\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\r\n  const userLiquidity: undefined | CurrencyAmount<Token> = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\r\n\r\n  const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\r\n  const tokens = {\r\n    [Field.CURRENCY_A]: tokenA,\r\n    [Field.CURRENCY_B]: tokenB,\r\n    [Field.LIQUIDITY]: pair?.liquidityToken,\r\n  }\r\n\r\n  // liquidity values\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n  const liquidityValueA =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenA &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\r\n      ? CurrencyAmount.fromRawAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).quotient)\r\n      : undefined\r\n  const liquidityValueB =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenB &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\r\n      ? CurrencyAmount.fromRawAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).quotient)\r\n      : undefined\r\n  const liquidityValues: { [Field.CURRENCY_A]?: CurrencyAmount<Token>; [Field.CURRENCY_B]?: CurrencyAmount<Token> } = {\r\n    [Field.CURRENCY_A]: liquidityValueA,\r\n    [Field.CURRENCY_B]: liquidityValueB,\r\n  }\r\n\r\n  let percentToRemove: Percent = new Percent('0', '100')\r\n  // user specified a %\r\n  if (independentField === Field.LIQUIDITY_PERCENT) {\r\n    percentToRemove = new Percent(typedValue, '100')\r\n  }\r\n  // user specified a specific amount of liquidity tokens\r\n  else if (independentField === Field.LIQUIDITY) {\r\n    if (pair?.liquidityToken) {\r\n      const independentAmount = tryParseCurrencyAmount(typedValue, pair.liquidityToken)\r\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\r\n        percentToRemove = new Percent(independentAmount.quotient, userLiquidity.quotient)\r\n      }\r\n    }\r\n  }\r\n  // user specified a specific amount of token a or b\r\n  else {\r\n    if (tokens[independentField]) {\r\n      const independentAmount = tryParseCurrencyAmount(typedValue, tokens[independentField])\r\n      const liquidityValue = liquidityValues[independentField]\r\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\r\n        percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient)\r\n      }\r\n    }\r\n  }\r\n\r\n  const parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\r\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\r\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\r\n  } = {\r\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\r\n    [Field.LIQUIDITY]:\r\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\r\n        ? CurrencyAmount.fromRawAmount(\r\n            userLiquidity.currency,\r\n            percentToRemove.multiply(userLiquidity.quotient).quotient\r\n          )\r\n        : undefined,\r\n    [Field.CURRENCY_A]:\r\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\r\n        ? CurrencyAmount.fromRawAmount(tokenA, percentToRemove.multiply(liquidityValueA.quotient).quotient)\r\n        : undefined,\r\n    [Field.CURRENCY_B]:\r\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\r\n        ? CurrencyAmount.fromRawAmount(tokenB, percentToRemove.multiply(liquidityValueB.quotient).quotient)\r\n        : undefined,\r\n  }\r\n\r\n  let error: ReactNode | undefined\r\n  if (!account) {\r\n    error = <Trans>Connect wallet</Trans>\r\n  }\r\n\r\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    error = error ?? <Trans>Enter an amount</Trans>\r\n  }\r\n\r\n  return { pair, parsedAmounts, error }\r\n}\r\n\r\nexport function useBurnActionHandlers(): {\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n} {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return {\r\n    onUserInput,\r\n  }\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport type { TransactionResponse } from '@ethersproject/providers'\r\nimport { BrowserEvent, InterfaceElementName, InterfaceEventName, LiquidityEventName } from '@uniswap/analytics-events'\r\nimport { Currency, Percent } from '@uniswap/sdk-core'\r\nimport { TraceEvent, sendAnalyticsEvent, useTrace } from 'analytics'\r\nimport { useToggleAccountDrawer } from 'components/AccountDrawer/MiniPortfolio/hooks'\r\nimport { V2Unsupported } from 'components/V2Unsupported'\r\nimport { useIsSupportedChainId } from 'constants/chains'\r\nimport { useNetworkSupportsV2 } from 'hooks/useNetworkSupportsV2'\r\nimport { useV2LiquidityTokenPermit } from 'hooks/useV2LiquidityTokenPermit'\r\nimport { Trans } from 'i18n'\r\nimport { PositionPageUnsupportedContent } from 'pages/Pool/PositionPage'\r\nimport { useCallback, useMemo, useState } from 'react'\r\nimport { ArrowDown, Plus } from 'react-feather'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { useTheme } from 'styled-components'\r\nimport { StyledInternalLink, ThemedText } from 'theme/components'\r\n\r\nimport { DoubleCurrencyLogo } from 'components/DoubleLogo'\r\nimport { useEthersSigner } from 'hooks/useEthersSigner'\r\nimport { Text } from 'ui/src'\r\nimport { useAccount } from 'wagmi'\r\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\r\nimport { BlueCard, LightCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport CurrencyLogo from '../../components/Logo/CurrencyLogo'\r\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row, { RowBetween, RowFixed } from '../../components/Row'\r\nimport Slider from '../../components/Slider'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport { Dots } from '../../components/swap/styled'\r\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\r\nimport { usePairContract, useV2RouterContract } from '../../hooks/useContract'\r\nimport useDebouncedChangeHandler from '../../hooks/useDebouncedChangeHandler'\r\nimport { useGetTransactionDeadline } from '../../hooks/useTransactionDeadline'\r\nimport { Field } from '../../state/burn/actions'\r\nimport { useBurnActionHandlers, useBurnState, useDerivedBurnInfo } from '../../state/burn/hooks'\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { TransactionType } from '../../state/transactions/types'\r\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\r\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\r\nimport { calculateSlippageAmount } from '../../utils/calculateSlippageAmount'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport AppBody from '../AppBody'\r\nimport { ClickableText, MaxButton, Wrapper } from '../Pool/styled'\r\n\r\nconst DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\r\n\r\nexport default function RemoveLiquidityWrapper() {\r\n  const account = useAccount()\r\n  const isSupportedChain = useIsSupportedChainId(account.chainId)\r\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\r\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\r\n  if (isSupportedChain && currencyA !== currencyB) {\r\n    return <RemoveLiquidity />\r\n  } else {\r\n    return <PositionPageUnsupportedContent />\r\n  }\r\n}\r\n\r\nfunction RemoveLiquidity() {\r\n  const navigate = useNavigate()\r\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\r\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\r\n  const account = useAccount()\r\n  const signer = useEthersSigner()\r\n  const [tokenA, tokenB] = useMemo(() => [currencyA?.wrapped, currencyB?.wrapped], [currencyA, currencyB])\r\n\r\n  const theme = useTheme()\r\n  const trace = useTrace()\r\n\r\n  // toggle wallet when disconnected\r\n  const toggleWalletDrawer = useToggleAccountDrawer()\r\n\r\n  // burn state\r\n  const { independentField, typedValue } = useBurnState()\r\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\r\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\r\n\r\n  // txn values\r\n  const [txHash, setTxHash] = useState<string>('')\r\n  const getDeadline = useGetTransactionDeadline()\r\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE)\r\n\r\n  const formattedAmounts = {\r\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\r\n      ? '0'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\r\n      ? '<1'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\r\n    [Field.LIQUIDITY]:\r\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_A]:\r\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_B]:\r\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\r\n\r\n  // pair contract\r\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\r\n\r\n  const router = useV2RouterContract()\r\n\r\n  // allowance handling\r\n  const { gatherPermitSignature, signatureData } = useV2LiquidityTokenPermit(\r\n    parsedAmounts[Field.LIQUIDITY],\r\n    router?.address\r\n  )\r\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], router?.address)\r\n\r\n  async function onAttemptToApprove() {\r\n    if (!pairContract || !pair || !signer) throw new Error('missing dependencies')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    if (gatherPermitSignature) {\r\n      try {\r\n        await gatherPermitSignature()\r\n      } catch (error) {\r\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\r\n        if (error?.code !== 4001) {\r\n          await approveCallback()\r\n        }\r\n      }\r\n    } else {\r\n      await approveCallback()\r\n    }\r\n  }\r\n\r\n  // wrapped onUserInput to clear signatures\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      return _onUserInput(field, typedValue)\r\n    },\r\n    [_onUserInput]\r\n  )\r\n\r\n  const onLiquidityInput = useCallback(\r\n    (typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue),\r\n    [onUserInput]\r\n  )\r\n  const onCurrencyAInput = useCallback(\r\n    (typedValue: string): void => onUserInput(Field.CURRENCY_A, typedValue),\r\n    [onUserInput]\r\n  )\r\n  const onCurrencyBInput = useCallback(\r\n    (typedValue: string): void => onUserInput(Field.CURRENCY_B, typedValue),\r\n    [onUserInput]\r\n  )\r\n\r\n  // tx sending\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const networkSupportsV2 = useNetworkSupportsV2()\r\n\r\n  async function onRemove() {\r\n    if (account.status !== 'connected' || !signer || !router || !networkSupportsV2) {\r\n      throw new Error('missing dependencies')\r\n    }\r\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\r\n    if (!currencyAmountA || !currencyAmountB) {\r\n      throw new Error('missing currency amounts')\r\n    }\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\r\n    }\r\n\r\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    const currencyBIsETH = currencyB.isNative\r\n    const oneCurrencyIsETH = currencyA.isNative || currencyBIsETH\r\n\r\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\r\n\r\n    const deadline = await getDeadline()\r\n    if (!deadline) throw new Error('could not get deadline')\r\n\r\n    let methodNames: string[], args: Array<string | string[] | number | boolean>\r\n    // we have approval, use normal remove liquidity\r\n    if (approval === ApprovalState.APPROVED) {\r\n      // removeLiquidityETH\r\n      if (oneCurrencyIsETH) {\r\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.quotient.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account.address,\r\n          deadline.toHexString(),\r\n        ]\r\n      }\r\n      // removeLiquidity\r\n      else {\r\n        methodNames = ['removeLiquidity']\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          liquidityAmount.quotient.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account.address,\r\n          deadline.toHexString(),\r\n        ]\r\n      }\r\n    }\r\n    // we have a signature, use permit versions of remove liquidity\r\n    else if (signatureData !== null) {\r\n      // removeLiquidityETHWithPermit\r\n      if (oneCurrencyIsETH) {\r\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.quotient.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account.address,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n      // removeLiquidityETHWithPermit\r\n      else {\r\n        methodNames = ['removeLiquidityWithPermit']\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          liquidityAmount.quotient.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account.address,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n    } else {\r\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\r\n    }\r\n\r\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\r\n      methodNames.map((methodName) =>\r\n        router.estimateGas[methodName](...args)\r\n          .then((estimateGas) => calculateGasMargin(estimateGas))\r\n          .catch((error) => {\r\n            console.error(`estimateGas failed`, methodName, args, error)\r\n            return undefined\r\n          })\r\n      )\r\n    )\r\n\r\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\r\n      BigNumber.isBigNumber(safeGasEstimate)\r\n    )\r\n\r\n    // all estimations failed...\r\n    if (indexOfSuccessfulEstimation === -1) {\r\n      console.error('This transaction would fail. Please contact support.')\r\n    } else {\r\n      const methodName = methodNames[indexOfSuccessfulEstimation]\r\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\r\n\r\n      setAttemptingTxn(true)\r\n      await router[methodName](...args, {\r\n        gasLimit: safeGasEstimate,\r\n      })\r\n        .then((response: TransactionResponse) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            type: TransactionType.REMOVE_LIQUIDITY_V3,\r\n            baseCurrencyId: currencyId(currencyA),\r\n            quoteCurrencyId: currencyId(currencyB),\r\n            expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient.toString() ?? '0',\r\n            expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient.toString() ?? '0',\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n\r\n          sendAnalyticsEvent(LiquidityEventName.REMOVE_LIQUIDITY_SUBMITTED, {\r\n            label: [currencyA.symbol, currencyB.symbol].join('/'),\r\n            ...trace,\r\n          })\r\n        })\r\n        .catch((error: Error) => {\r\n          setAttemptingTxn(false)\r\n          // we only care if the error is something _other_ than the user rejected the tx\r\n          console.error(error)\r\n        })\r\n    }\r\n  }\r\n\r\n  function modalHeader() {\r\n    return (\r\n      <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize={24} fontWeight=\"$medium\">\r\n            {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\r\n          </Text>\r\n          <RowFixed gap=\"4px\">\r\n            <CurrencyLogo currency={currencyA} size={24} />\r\n            <Text fontSize={24} fontWeight=\"$medium\" ml={10}>\r\n              {currencyA?.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowFixed>\r\n          <Plus size=\"16\" color={theme.neutral2} />\r\n        </RowFixed>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize={24} fontWeight=\"$medium\">\r\n            {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\r\n          </Text>\r\n          <RowFixed gap=\"4px\">\r\n            <CurrencyLogo currency={currencyB} size={24} />\r\n            <Text fontSize={24} fontWeight=\"$medium\" ml={10}>\r\n              {currencyB?.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n\r\n        <Text fontSize={12} fontStyle=\"italic\" color=\"neutral2\" textAlign=\"left\" pt={12}>\r\n          <Trans>\r\n            Output is estimated. If the price changes by more than {{ allowed: allowedSlippage.toSignificant(4) }}% your\r\n            transaction will revert.\r\n          </Trans>\r\n        </Text>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  function modalBottom() {\r\n    return (\r\n      <>\r\n        <RowBetween>\r\n          <Text color=\"$neutral2\" fontWeight=\"$medium\" fontSize={16}>\r\n            <Trans>\r\n              UNI {{ a: currencyA?.symbol }}/{{ b: currencyB?.symbol }} Burned\r\n            </Trans>\r\n          </Text>\r\n          <RowFixed>\r\n            <DoubleCurrencyLogo currencies={[currencyA, currencyB]} />\r\n            <Text fontWeight=\"$medium\" fontSize={16}>\r\n              {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        {pair && (\r\n          <>\r\n            <RowBetween>\r\n              <Text color=\"$neutral2\" fontWeight=\"$medium\" fontSize={16}>\r\n                <Trans>Price</Trans>\r\n              </Text>\r\n              <Text fontWeight=\"$medium\" fontSize={16} color=\"$neutral1\">\r\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\r\n              </Text>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <div />\r\n              <Text fontWeight=\"$medium\" fontSize={16} color=\"$neutral1\">\r\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\r\n              </Text>\r\n            </RowBetween>\r\n          </>\r\n        )}\r\n        <ButtonPrimary disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\r\n          <Text fontWeight=\"$medium\" fontSize={20}>\r\n            <Trans>Confirm</Trans>\r\n          </Text>\r\n        </ButtonPrimary>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const pendingText = (\r\n    <Trans>\r\n      Removing {{ amtA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) }} {{ symA: currencyA?.symbol }} and\r\n      {{ amtB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) }} {{ symB: currencyB?.symbol }}\r\n    </Trans>\r\n  )\r\n\r\n  const liquidityPercentChangeCallback = useCallback(\r\n    (value: number) => {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\r\n    },\r\n    [onUserInput]\r\n  )\r\n\r\n  const oneCurrencyIsETH = currencyA?.isNative || currencyB?.isNative\r\n\r\n  const oneCurrencyIsWETH = Boolean(\r\n    account.status === 'connected' &&\r\n      WRAPPED_NATIVE_CURRENCY[account.chainId] &&\r\n      ((currencyA && WRAPPED_NATIVE_CURRENCY[account.chainId]?.equals(currencyA)) ||\r\n        (currencyB && WRAPPED_NATIVE_CURRENCY[account.chainId]?.equals(currencyB)))\r\n  )\r\n\r\n  const handleSelectCurrencyA = useCallback(\r\n    (currency: Currency) => {\r\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\r\n        navigate(`/remove/v2/${currencyId(currency)}/${currencyIdA}`)\r\n      } else {\r\n        navigate(`/remove/v2/${currencyId(currency)}/${currencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, currencyIdB, navigate]\r\n  )\r\n  const handleSelectCurrencyB = useCallback(\r\n    (currency: Currency) => {\r\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\r\n        navigate(`/remove/v2/${currencyIdB}/${currencyId(currency)}`)\r\n      } else {\r\n        navigate(`/remove/v2/${currencyIdA}/${currencyId(currency)}`)\r\n      }\r\n    },\r\n    [currencyIdA, currencyIdB, navigate]\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\r\n    }\r\n    setTxHash('')\r\n  }, [onUserInput, txHash])\r\n\r\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\r\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\r\n    liquidityPercentChangeCallback\r\n  )\r\n\r\n  if (!networkSupportsV2) return <V2Unsupported />\r\n\r\n  return (\r\n    <>\r\n      <AppBody>\r\n        <AddRemoveTabs creating={false} adding={false} autoSlippage={DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE} />\r\n        <Wrapper>\r\n          <TransactionConfirmationModal\r\n            isOpen={showConfirm}\r\n            onDismiss={handleDismissConfirmation}\r\n            attemptingTxn={attemptingTxn}\r\n            hash={txHash ? txHash : ''}\r\n            reviewContent={() => (\r\n              <ConfirmationModalContent\r\n                title={<Trans>You will receive</Trans>}\r\n                onDismiss={handleDismissConfirmation}\r\n                topContent={modalHeader}\r\n                bottomContent={modalBottom}\r\n              />\r\n            )}\r\n            pendingText={pendingText}\r\n          />\r\n          <AutoColumn gap=\"md\">\r\n            <BlueCard>\r\n              <AutoColumn gap=\"10px\">\r\n                <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\r\n                  <Trans>\r\n                    <b>Tip:</b> Removing pool tokens converts your position back into underlying tokens at the current\r\n                    rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.\r\n                  </Trans>\r\n                </ThemedText.DeprecatedLink>\r\n              </AutoColumn>\r\n            </BlueCard>\r\n            <LightCard>\r\n              <AutoColumn gap=\"20px\">\r\n                <RowBetween>\r\n                  <Text fontWeight=\"$medium\">\r\n                    <Trans>Remove amount</Trans>\r\n                  </Text>\r\n                  <ClickableText\r\n                    fontWeight={535}\r\n                    onClick={() => {\r\n                      setShowDetailed(!showDetailed)\r\n                    }}\r\n                  >\r\n                    {showDetailed ? <Trans>Simple</Trans> : <Trans>Detailed</Trans>}\r\n                  </ClickableText>\r\n                </RowBetween>\r\n                <Row style={{ alignItems: 'flex-end' }}>\r\n                  <Text fontSize={72} fontWeight=\"$medium\">\r\n                    {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\r\n                  </Text>\r\n                </Row>\r\n                {!showDetailed && (\r\n                  <>\r\n                    <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\r\n                    <RowBetween>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')} width=\"20%\">\r\n                        25%\r\n                      </MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')} width=\"20%\">\r\n                        50%\r\n                      </MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')} width=\"20%\">\r\n                        75%\r\n                      </MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')} width=\"20%\">\r\n                        Max\r\n                      </MaxButton>\r\n                    </RowBetween>\r\n                  </>\r\n                )}\r\n              </AutoColumn>\r\n            </LightCard>\r\n            {!showDetailed && (\r\n              <>\r\n                <ColumnCenter>\r\n                  <ArrowDown size=\"16\" color={theme.neutral2} />\r\n                </ColumnCenter>\r\n                <LightCard>\r\n                  <AutoColumn gap=\"10px\">\r\n                    <RowBetween>\r\n                      <Text fontSize={24} fontWeight=\"$medium\">\r\n                        {formattedAmounts[Field.CURRENCY_A] || '-'}\r\n                      </Text>\r\n                      <RowFixed>\r\n                        <CurrencyLogo currency={currencyA} style={{ marginRight: '12px' }} />\r\n                        <Text fontSize={24} fontWeight=\"$medium\" id=\"remove-liquidity-tokena-symbol\">\r\n                          {currencyA?.symbol}\r\n                        </Text>\r\n                      </RowFixed>\r\n                    </RowBetween>\r\n                    <RowBetween>\r\n                      <Text fontSize={24} fontWeight=\"$medium\">\r\n                        {formattedAmounts[Field.CURRENCY_B] || '-'}\r\n                      </Text>\r\n                      <RowFixed>\r\n                        <CurrencyLogo currency={currencyB} style={{ marginRight: '12px' }} />\r\n                        <Text fontSize={24} fontWeight=\"$medium\" id=\"remove-liquidity-tokenb-symbol\">\r\n                          {currencyB?.symbol}\r\n                        </Text>\r\n                      </RowFixed>\r\n                    </RowBetween>\r\n                    {account.status === 'connected' && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\r\n                      <RowBetween style={{ justifyContent: 'flex-end' }}>\r\n                        {oneCurrencyIsETH ? (\r\n                          <StyledInternalLink\r\n                            to={`/remove/v2/${\r\n                              currencyA?.isNative && WRAPPED_NATIVE_CURRENCY[account.chainId]\r\n                                ? WRAPPED_NATIVE_CURRENCY[account.chainId]?.address\r\n                                : currencyIdA\r\n                            }/${\r\n                              currencyB?.isNative && WRAPPED_NATIVE_CURRENCY[account.chainId]\r\n                                ? WRAPPED_NATIVE_CURRENCY[account.chainId]?.address\r\n                                : currencyIdB\r\n                            }`}\r\n                          >\r\n                            Receive WETH\r\n                          </StyledInternalLink>\r\n                        ) : oneCurrencyIsWETH ? (\r\n                          <StyledInternalLink\r\n                            to={`/remove/v2/${\r\n                              currencyA && WRAPPED_NATIVE_CURRENCY[account.chainId]?.equals(currencyA)\r\n                                ? 'ETH'\r\n                                : currencyIdA\r\n                            }/${\r\n                              currencyB && WRAPPED_NATIVE_CURRENCY[account.chainId]?.equals(currencyB)\r\n                                ? 'ETH'\r\n                                : currencyIdB\r\n                            }`}\r\n                          >\r\n                            Receive ETH\r\n                          </StyledInternalLink>\r\n                        ) : null}\r\n                      </RowBetween>\r\n                    ) : null}\r\n                  </AutoColumn>\r\n                </LightCard>\r\n              </>\r\n            )}\r\n\r\n            {showDetailed && (\r\n              <>\r\n                <CurrencyInputPanel\r\n                  value={formattedAmounts[Field.LIQUIDITY]}\r\n                  onUserInput={onLiquidityInput}\r\n                  onMax={() => {\r\n                    onUserInput(Field.LIQUIDITY_PERCENT, '100')\r\n                  }}\r\n                  showMaxButton={!atMaxAmount}\r\n                  currency={pair?.liquidityToken}\r\n                  pair={pair}\r\n                  id=\"liquidity-amount\"\r\n                />\r\n                <ColumnCenter>\r\n                  <ArrowDown size=\"16\" color={theme.neutral2} />\r\n                </ColumnCenter>\r\n                <CurrencyInputPanel\r\n                  hideBalance={true}\r\n                  value={formattedAmounts[Field.CURRENCY_A]}\r\n                  onUserInput={onCurrencyAInput}\r\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                  showMaxButton={!atMaxAmount}\r\n                  currency={currencyA}\r\n                  label=\"Output\"\r\n                  onCurrencySelect={handleSelectCurrencyA}\r\n                  id=\"remove-liquidity-tokena\"\r\n                />\r\n                <ColumnCenter>\r\n                  <Plus size=\"16\" color={theme.neutral2} />\r\n                </ColumnCenter>\r\n                <CurrencyInputPanel\r\n                  hideBalance={true}\r\n                  value={formattedAmounts[Field.CURRENCY_B]}\r\n                  onUserInput={onCurrencyBInput}\r\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                  showMaxButton={!atMaxAmount}\r\n                  currency={currencyB}\r\n                  label=\"Output\"\r\n                  onCurrencySelect={handleSelectCurrencyB}\r\n                  id=\"remove-liquidity-tokenb\"\r\n                />\r\n              </>\r\n            )}\r\n            {pair && (\r\n              <div style={{ padding: '10px 20px' }}>\r\n                <RowBetween>\r\n                  <Trans>Price:</Trans>\r\n                  <div>\r\n                    1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\r\n                  </div>\r\n                </RowBetween>\r\n                <RowBetween>\r\n                  <div />\r\n                  <div>\r\n                    1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\r\n                  </div>\r\n                </RowBetween>\r\n              </div>\r\n            )}\r\n            <div style={{ position: 'relative' }}>\r\n              {account.status !== 'connected' ? (\r\n                <TraceEvent\r\n                  events={[BrowserEvent.onClick]}\r\n                  name={InterfaceEventName.CONNECT_WALLET_BUTTON_CLICKED}\r\n                  properties={{ received_swap_quote: false }}\r\n                  element={InterfaceElementName.CONNECT_WALLET_BUTTON}\r\n                >\r\n                  <ButtonLight onClick={toggleWalletDrawer}>\r\n                    <Trans>Connect wallet</Trans>\r\n                  </ButtonLight>\r\n                </TraceEvent>\r\n              ) : (\r\n                <RowBetween>\r\n                  <ButtonConfirmed\r\n                    onClick={onAttemptToApprove}\r\n                    confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\r\n                    disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\r\n                    mr=\"0.5rem\"\r\n                    fontWeight={535}\r\n                    fontSize={16}\r\n                  >\r\n                    {approval === ApprovalState.PENDING ? (\r\n                      <Dots>\r\n                        <Trans>Approving</Trans>\r\n                      </Dots>\r\n                    ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\r\n                      <Trans>Approved</Trans>\r\n                    ) : (\r\n                      <Trans>Approve</Trans>\r\n                    )}\r\n                  </ButtonConfirmed>\r\n                  <ButtonError\r\n                    onClick={() => {\r\n                      setShowConfirm(true)\r\n                    }}\r\n                    disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\r\n                    error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\r\n                  >\r\n                    <Text fontSize={16} fontWeight=\"$medium\">\r\n                      {error || <Trans>Remove</Trans>}\r\n                    </Text>\r\n                  </ButtonError>\r\n                </RowBetween>\r\n              )}\r\n            </div>\r\n          </AutoColumn>\r\n        </Wrapper>\r\n      </AppBody>\r\n\r\n      {pair ? (\r\n        <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\r\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\r\n        </AutoColumn>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n"],"names":["StyledRangeInput","styled","input","size","theme","accent1","surface1","surface4","surface2","Slider","value","onChange","min","step","max","rest","changeCallback","useCallback","e","parseInt","target","type","style","padding","aria-labelledby","useDebouncedChangeHandler","debouncedMs","inner","setInner","useState","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","undefined","useEffect","useIsArgentWallet","call","account","useWeb3React","argentWalletDetector","useArgentWalletDetectorContract","inputs","useMemo","useSingleCallResult","NEVER_RELOAD","Boolean","result","PermitType","AMOUNT","ALLOWED","PERMIT_VALIDITY_BUFFER","PERMITTABLE_TOKENS","ChainId","MAINNET","USDC_MAINNET","address","name","version","DAI","UNI","GOERLI","SEPOLIA","UseERC20PermitState","NOT_APPLICABLE","LOADING","NOT_SIGNED","SIGNED","EIP712_DOMAIN_TYPE","EIP712_DOMAIN_TYPE_NO_VERSION","EIP2612_TYPE","PERMIT_ALLOWED_TYPE","useERC20Permit","currencyAmount","spender","transactionDeadline","overridePermitInfo","useAccount","provider","useEthersWeb3Provider","tokenAddress","currency","isToken","eip2612Contract","useEIP2612Contract","isArgentWallet","nonceInputs","tokenNonceState","permitInfo","status","chainId","signatureData","setSignatureData","valid","state","gatherPermitSignature","nonceNumber","toNumber","loading","isSignatureDataValid","owner","deadline","nonce","JSBI","amount","quotient","allowed","signatureDeadline","toString","message","holder","expiry","domain","verifyingContract","data","JSON","stringify","types","EIP712Domain","Permit","primaryType","send","then","splitSignature","signature","v","r","s","permitType","REMOVE_V2_LIQUIDITY_PERMIT_INFO","useV2LiquidityTokenPermit","liquidityAmount","useTransactionDeadline","useBurnState","useAppSelector","burn","DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE","Percent","RemoveLiquidityWrapper","isSupportedChain","useIsSupportedChainId","currencyIdA","currencyIdB","useParams","currencyA","currencyB","useCurrency","RemoveLiquidity","PositionPageUnsupportedContent","parsedAmounts","pair","router","WRAPPED_NATIVE_CURRENCY","navigate","useNavigate","signer","useEthersSigner","tokenA","tokenB","wrapped","useTheme","trace","useTrace","toggleWalletDrawer","useToggleAccountDrawer","independentField","typedValue","error","relevantTokenBalances","useV2Pair","userLiquidity","useTokenBalances","liquidityToken","tokens","Field","CURRENCY_A","CURRENCY_B","LIQUIDITY","totalSupply","useTotalSupply","liquidityValueA","CurrencyAmount","fromRawAmount","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","independentAmount","tryParseCurrencyAmount","greaterThan","liquidityValue","multiply","Trans","useDerivedBurnInfo","onUserInput","_onUserInput","dispatch","useAppDispatch","field","typeInput","useBurnActionHandlers","isValid","showConfirm","setShowConfirm","showDetailed","setShowDetailed","attemptingTxn","setAttemptingTxn","txHash","setTxHash","getDeadline","useGetTransactionDeadline","allowedSlippage","useUserSlippageToleranceWithDefault","formattedAmounts","equalTo","lessThan","toFixed","toSignificant","atMaxAmount","pairContract","usePairContract","useV2RouterContract","approval","approveCallback","useApproveCallback","onAttemptToApprove","Error","code","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransaction","useTransactionAdder","networkSupportsV2","useNetworkSupportsV2","onRemove","currencyAmountA","currencyAmountB","amountsMin","calculateSlippageAmount","currencyBIsETH","isNative","oneCurrencyIsETH","methodNames","args","ApprovalState","APPROVED","toHexString","safeGasEstimates","Promise","all","map","methodName","estimateGas","calculateGasMargin","catch","console","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","BigNumber","isBigNumber","gasLimit","response","TransactionType","REMOVE_LIQUIDITY_V3","baseCurrencyId","currencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","hash","sendAnalyticsEvent","LiquidityEventName","REMOVE_LIQUIDITY_SUBMITTED","label","symbol","join","modalHeader","AutoColumn","gap","marginTop","RowBetween","align","Text","fontSize","fontWeight","RowFixed","CurrencyLogo","ml","Plus","color","neutral2","fontStyle","textAlign","pt","modalBottom","a","b","DoubleCurrencyLogo","currencies","priceOf","div","ButtonPrimary","disabled","onClick","pendingText","amtA","symA","amtB","symB","liquidityPercentChangeCallback","oneCurrencyIsWETH","equals","handleSelectCurrencyA","handleSelectCurrencyB","handleDismissConfirmation","innerLiquidityPercentage","setInnerLiquidityPercentage","Number","AppBody","AddRemoveTabs","creating","adding","autoSlippage","Wrapper","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","title","topContent","bottomContent","BlueCard","ThemedText","DeprecatedLink","LightCard","ClickableText","Row","alignItems","MaxButton","width","ColumnCenter","ArrowDown","marginRight","id","justifyContent","StyledInternalLink","to","CurrencyInputPanel","onMax","showMaxButton","hideBalance","onCurrencySelect","position","TraceEvent","events","BrowserEvent","InterfaceEventName","CONNECT_WALLET_BUTTON_CLICKED","properties","received_swap_quote","element","InterfaceElementName","CONNECT_WALLET_BUTTON","ButtonLight","ButtonConfirmed","confirmed","NOT_APPROVED","mr","PENDING","Dots","ButtonError","minWidth","maxWidth","MinimalPositionCard","showUnwrapped","V2Unsupported"],"sourceRoot":""}